{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_fpcJuicePortal",
                    "type": "address",
                    "internalType": "contract IFeeJuicePortal"
                },
                {
                    "name": "_rewardDistributor",
                    "type": "address",
                    "internalType": "contract IRewardDistributor"
                },
                {
                    "name": "_stakingAsset",
                    "type": "address",
                    "internalType": "contract IERC20"
                },
                {
                    "name": "_vkTreeRoot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "_protocolContractTreeRoot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "_ares",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_config",
                    "type": "tuple",
                    "internalType": "struct Config",
                    "components": [
                        {
                            "name": "aztecSlotDuration",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "aztecEpochDuration",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "targetCommitteeSize",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "aztecEpochProofClaimWindowInL2Slots",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "minimumStake",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "slashingQuorum",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "slashingRoundSize",
                            "type": "uint256",
                            "internalType": "uint256"
                        }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "ASSET",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IERC20"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "CLAIM_DURATION_IN_L2_SLOTS",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "CUAUHXICALLI",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "FEE_JUICE_PORTAL",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IFeeJuicePortal"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "INBOX",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IInbox"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "IS_FOUNDRY_TEST",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "L1_BLOCK_AT_GENESIS",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "LAG",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "Slot"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "LIFETIME",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "Slot"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "OUTBOX",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IOutbox"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "PROOF_COMMITMENT_ESCROW",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IProofCommitmentEscrow"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "PROOF_COMMITMENT_MIN_BOND_AMOUNT_IN_TST",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "REWARD_DISTRIBUTOR",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IRewardDistributor"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "TARGET_COMMITTEE_SIZE",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "VERSION",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "VM_ADDRESS",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "archive",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "archiveAt",
            "inputs": [
                {
                    "name": "_blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "canProposeAtTime",
            "inputs": [
                {
                    "name": "_ts",
                    "type": "uint256",
                    "internalType": "Timestamp"
                },
                {
                    "name": "_archive",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "Slot"
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "canPrune",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "canPruneAtTime",
            "inputs": [
                {
                    "name": "_ts",
                    "type": "uint256",
                    "internalType": "Timestamp"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "cheat__InitialiseValidatorSet",
            "inputs": [
                {
                    "name": "_args",
                    "type": "tuple[]",
                    "internalType": "struct CheatDepositArgs[]",
                    "components": [
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "proposer",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "withdrawer",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "amount",
                            "type": "uint256",
                            "internalType": "uint256"
                        }
                    ]
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "checkBlob",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "claimEpochProofRight",
            "inputs": [
                {
                    "name": "_quote",
                    "type": "tuple",
                    "internalType": "struct SignedEpochProofQuote",
                    "components": [
                        {
                            "name": "quote",
                            "type": "tuple",
                            "internalType": "struct EpochProofQuote",
                            "components": [
                                {
                                    "name": "epochToProve",
                                    "type": "uint256",
                                    "internalType": "Epoch"
                                },
                                {
                                    "name": "validUntilSlot",
                                    "type": "uint256",
                                    "internalType": "Slot"
                                },
                                {
                                    "name": "bondAmount",
                                    "type": "uint256",
                                    "internalType": "uint256"
                                },
                                {
                                    "name": "prover",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                {
                                    "name": "basisPointFee",
                                    "type": "uint32",
                                    "internalType": "uint32"
                                }
                            ]
                        },
                        {
                            "name": "signature",
                            "type": "tuple",
                            "internalType": "struct Signature",
                            "components": [
                                {
                                    "name": "isEmpty",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "v",
                                    "type": "uint8",
                                    "internalType": "uint8"
                                },
                                {
                                    "name": "r",
                                    "type": "bytes32",
                                    "internalType": "bytes32"
                                },
                                {
                                    "name": "s",
                                    "type": "bytes32",
                                    "internalType": "bytes32"
                                }
                            ]
                        }
                    ]
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "deposit",
            "inputs": [
                {
                    "name": "_attester",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_proposer",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_withdrawer",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "eip712Domain",
            "inputs": [],
            "outputs": [
                {
                    "name": "fields",
                    "type": "bytes1",
                    "internalType": "bytes1"
                },
                {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                },
                {
                    "name": "version",
                    "type": "string",
                    "internalType": "string"
                },
                {
                    "name": "chainId",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "verifyingContract",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "salt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "extensions",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "finaliseWithdraw",
            "inputs": [
                {
                    "name": "_attester",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getActiveAttesterCount",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getAttesterAtIndex",
            "inputs": [
                {
                    "name": "_index",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getAttesters",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address[]",
                    "internalType": "address[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getBlobPublicInputsHash",
            "inputs": [
                {
                    "name": "_blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getBlock",
            "inputs": [
                {
                    "name": "_blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct BlockLog",
                    "components": [
                        {
                            "name": "feeHeader",
                            "type": "tuple",
                            "internalType": "struct FeeHeader",
                            "components": [
                                {
                                    "name": "excessMana",
                                    "type": "uint256",
                                    "internalType": "uint256"
                                },
                                {
                                    "name": "feeAssetPriceNumerator",
                                    "type": "uint256",
                                    "internalType": "uint256"
                                },
                                {
                                    "name": "manaUsed",
                                    "type": "uint256",
                                    "internalType": "uint256"
                                },
                                {
                                    "name": "provingCostPerManaNumerator",
                                    "type": "uint256",
                                    "internalType": "uint256"
                                },
                                {
                                    "name": "congestionCost",
                                    "type": "uint256",
                                    "internalType": "uint256"
                                }
                            ]
                        },
                        {
                            "name": "archive",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "blockHash",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "slotNumber",
                            "type": "uint256",
                            "internalType": "Slot"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getClaimableEpoch",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "Epoch"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getCommitteeAt",
            "inputs": [
                {
                    "name": "_ts",
                    "type": "uint256",
                    "internalType": "Timestamp"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address[]",
                    "internalType": "address[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getCurrentEpoch",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "Epoch"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getCurrentEpochCommittee",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address[]",
                    "internalType": "address[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getCurrentProposer",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getCurrentSampleSeed",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getCurrentSlot",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "Slot"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getEpochAt",
            "inputs": [
                {
                    "name": "_ts",
                    "type": "uint256",
                    "internalType": "Timestamp"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "Epoch"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getEpochAtSlot",
            "inputs": [
                {
                    "name": "_slotNumber",
                    "type": "uint256",
                    "internalType": "Slot"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "Epoch"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getEpochCommittee",
            "inputs": [
                {
                    "name": "_epoch",
                    "type": "uint256",
                    "internalType": "Epoch"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address[]",
                    "internalType": "address[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getEpochDuration",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getEpochForBlock",
            "inputs": [
                {
                    "name": "_blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "Epoch"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getEpochProofPublicInputs",
            "inputs": [
                {
                    "name": "_epochSize",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "_args",
                    "type": "bytes32[7]",
                    "internalType": "bytes32[7]"
                },
                {
                    "name": "_fees",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                },
                {
                    "name": "_blobPublicInputs",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "_aggregationObject",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getEpochToProve",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "Epoch"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getExit",
            "inputs": [
                {
                    "name": "_attester",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct Exit",
                    "components": [
                        {
                            "name": "exitableAt",
                            "type": "uint256",
                            "internalType": "Timestamp"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getExitDelay",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "Timestamp"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getFeeAssetPrice",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getGenesisTime",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "Timestamp"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getInfo",
            "inputs": [
                {
                    "name": "_attester",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct ValidatorInfo",
                    "components": [
                        {
                            "name": "stake",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "withdrawer",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "proposer",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "status",
                            "type": "uint8",
                            "internalType": "enum Status"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getL1FeesAt",
            "inputs": [
                {
                    "name": "_timestamp",
                    "type": "uint256",
                    "internalType": "Timestamp"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct L1FeeData",
                    "components": [
                        {
                            "name": "baseFee",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "blobFee",
                            "type": "uint256",
                            "internalType": "uint256"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getManaBaseFeeAt",
            "inputs": [
                {
                    "name": "_timestamp",
                    "type": "uint256",
                    "internalType": "Timestamp"
                },
                {
                    "name": "_inFeeAsset",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getManaBaseFeeComponentsAt",
            "inputs": [
                {
                    "name": "_timestamp",
                    "type": "uint256",
                    "internalType": "Timestamp"
                },
                {
                    "name": "_inFeeAsset",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct ManaBaseFeeComponents",
                    "components": [
                        {
                            "name": "congestionCost",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "congestionMultiplier",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "dataCost",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "gasCost",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "provingCost",
                            "type": "uint256",
                            "internalType": "uint256"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getMinimumStake",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getOperatorAtIndex",
            "inputs": [
                {
                    "name": "_index",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct OperatorInfo",
                    "components": [
                        {
                            "name": "proposer",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getPendingBlockNumber",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getProofClaim",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct DataStructures.EpochProofClaim",
                    "components": [
                        {
                            "name": "epochToProve",
                            "type": "uint256",
                            "internalType": "Epoch"
                        },
                        {
                            "name": "basisPointFee",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "bondAmount",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "bondProvider",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "proposerClaimant",
                            "type": "address",
                            "internalType": "address"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getProposerAt",
            "inputs": [
                {
                    "name": "_ts",
                    "type": "uint256",
                    "internalType": "Timestamp"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getProposerAtIndex",
            "inputs": [
                {
                    "name": "_index",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getProposerForAttester",
            "inputs": [
                {
                    "name": "_attester",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getProvenBlockNumber",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getSampleSeedAt",
            "inputs": [
                {
                    "name": "_ts",
                    "type": "uint256",
                    "internalType": "Timestamp"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getSlasher",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getSlotAt",
            "inputs": [
                {
                    "name": "_ts",
                    "type": "uint256",
                    "internalType": "Timestamp"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "Slot"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getSlotDuration",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getStakingAsset",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IERC20"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getTimestampForSlot",
            "inputs": [
                {
                    "name": "_slotNumber",
                    "type": "uint256",
                    "internalType": "Slot"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "Timestamp"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getTips",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct ChainTips",
                    "components": [
                        {
                            "name": "pendingBlockNumber",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "provenBlockNumber",
                            "type": "uint256",
                            "internalType": "uint256"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "initiateWithdraw",
            "inputs": [
                {
                    "name": "_attester",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_recipient",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "owner",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "propose",
            "inputs": [
                {
                    "name": "_args",
                    "type": "tuple",
                    "internalType": "struct ProposeArgs",
                    "components": [
                        {
                            "name": "archive",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "blockHash",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "oracleInput",
                            "type": "tuple",
                            "internalType": "struct OracleInput",
                            "components": [
                                {
                                    "name": "provingCostModifier",
                                    "type": "int256",
                                    "internalType": "int256"
                                },
                                {
                                    "name": "feeAssetPriceModifier",
                                    "type": "int256",
                                    "internalType": "int256"
                                }
                            ]
                        },
                        {
                            "name": "header",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "txHashes",
                            "type": "bytes32[]",
                            "internalType": "bytes32[]"
                        }
                    ]
                },
                {
                    "name": "_signatures",
                    "type": "tuple[]",
                    "internalType": "struct Signature[]",
                    "components": [
                        {
                            "name": "isEmpty",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "v",
                            "type": "uint8",
                            "internalType": "uint8"
                        },
                        {
                            "name": "r",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "s",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "_blobInput",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "proposeAndClaim",
            "inputs": [
                {
                    "name": "_args",
                    "type": "tuple",
                    "internalType": "struct ProposeArgs",
                    "components": [
                        {
                            "name": "archive",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "blockHash",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "oracleInput",
                            "type": "tuple",
                            "internalType": "struct OracleInput",
                            "components": [
                                {
                                    "name": "provingCostModifier",
                                    "type": "int256",
                                    "internalType": "int256"
                                },
                                {
                                    "name": "feeAssetPriceModifier",
                                    "type": "int256",
                                    "internalType": "int256"
                                }
                            ]
                        },
                        {
                            "name": "header",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "txHashes",
                            "type": "bytes32[]",
                            "internalType": "bytes32[]"
                        }
                    ]
                },
                {
                    "name": "_signatures",
                    "type": "tuple[]",
                    "internalType": "struct Signature[]",
                    "components": [
                        {
                            "name": "isEmpty",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "v",
                            "type": "uint8",
                            "internalType": "uint8"
                        },
                        {
                            "name": "r",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "s",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "_body",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "_blobInput",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "_quote",
                    "type": "tuple",
                    "internalType": "struct SignedEpochProofQuote",
                    "components": [
                        {
                            "name": "quote",
                            "type": "tuple",
                            "internalType": "struct EpochProofQuote",
                            "components": [
                                {
                                    "name": "epochToProve",
                                    "type": "uint256",
                                    "internalType": "Epoch"
                                },
                                {
                                    "name": "validUntilSlot",
                                    "type": "uint256",
                                    "internalType": "Slot"
                                },
                                {
                                    "name": "bondAmount",
                                    "type": "uint256",
                                    "internalType": "uint256"
                                },
                                {
                                    "name": "prover",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                {
                                    "name": "basisPointFee",
                                    "type": "uint32",
                                    "internalType": "uint32"
                                }
                            ]
                        },
                        {
                            "name": "signature",
                            "type": "tuple",
                            "internalType": "struct Signature",
                            "components": [
                                {
                                    "name": "isEmpty",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "v",
                                    "type": "uint8",
                                    "internalType": "uint8"
                                },
                                {
                                    "name": "r",
                                    "type": "bytes32",
                                    "internalType": "bytes32"
                                },
                                {
                                    "name": "s",
                                    "type": "bytes32",
                                    "internalType": "bytes32"
                                }
                            ]
                        }
                    ]
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "prune",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "quoteToDigest",
            "inputs": [
                {
                    "name": "_quote",
                    "type": "tuple",
                    "internalType": "struct EpochProofQuote",
                    "components": [
                        {
                            "name": "epochToProve",
                            "type": "uint256",
                            "internalType": "Epoch"
                        },
                        {
                            "name": "validUntilSlot",
                            "type": "uint256",
                            "internalType": "Slot"
                        },
                        {
                            "name": "bondAmount",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "prover",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "basisPointFee",
                            "type": "uint32",
                            "internalType": "uint32"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "renounceOwnership",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setAssumeProvenThroughBlockNumber",
            "inputs": [
                {
                    "name": "_blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setEpochVerifier",
            "inputs": [
                {
                    "name": "_verifier",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setProtocolContractTreeRoot",
            "inputs": [
                {
                    "name": "_protocolContractTreeRoot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setVkTreeRoot",
            "inputs": [
                {
                    "name": "_vkTreeRoot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setupEpoch",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "slash",
            "inputs": [
                {
                    "name": "_attester",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "status",
            "inputs": [
                {
                    "name": "_myHeaderBlockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "provenBlockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "provenArchive",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "pendingBlockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "pendingArchive",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "archiveOfMyBlock",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "provenEpochNumber",
                    "type": "uint256",
                    "internalType": "Epoch"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "submitEpochRootProof",
            "inputs": [
                {
                    "name": "_args",
                    "type": "tuple",
                    "internalType": "struct SubmitEpochRootProofArgs",
                    "components": [
                        {
                            "name": "epochSize",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "args",
                            "type": "bytes32[7]",
                            "internalType": "bytes32[7]"
                        },
                        {
                            "name": "fees",
                            "type": "bytes32[]",
                            "internalType": "bytes32[]"
                        },
                        {
                            "name": "blobPublicInputs",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "aggregationObject",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "proof",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferOwnership",
            "inputs": [
                {
                    "name": "newOwner",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "updateL1GasFeeOracle",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "validateBlobs",
            "inputs": [
                {
                    "name": "_blobsInput",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                },
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "validateEpochProofRightClaimAtTime",
            "inputs": [
                {
                    "name": "_ts",
                    "type": "uint256",
                    "internalType": "Timestamp"
                },
                {
                    "name": "_quote",
                    "type": "tuple",
                    "internalType": "struct SignedEpochProofQuote",
                    "components": [
                        {
                            "name": "quote",
                            "type": "tuple",
                            "internalType": "struct EpochProofQuote",
                            "components": [
                                {
                                    "name": "epochToProve",
                                    "type": "uint256",
                                    "internalType": "Epoch"
                                },
                                {
                                    "name": "validUntilSlot",
                                    "type": "uint256",
                                    "internalType": "Slot"
                                },
                                {
                                    "name": "bondAmount",
                                    "type": "uint256",
                                    "internalType": "uint256"
                                },
                                {
                                    "name": "prover",
                                    "type": "address",
                                    "internalType": "address"
                                },
                                {
                                    "name": "basisPointFee",
                                    "type": "uint32",
                                    "internalType": "uint32"
                                }
                            ]
                        },
                        {
                            "name": "signature",
                            "type": "tuple",
                            "internalType": "struct Signature",
                            "components": [
                                {
                                    "name": "isEmpty",
                                    "type": "bool",
                                    "internalType": "bool"
                                },
                                {
                                    "name": "v",
                                    "type": "uint8",
                                    "internalType": "uint8"
                                },
                                {
                                    "name": "r",
                                    "type": "bytes32",
                                    "internalType": "bytes32"
                                },
                                {
                                    "name": "s",
                                    "type": "bytes32",
                                    "internalType": "bytes32"
                                }
                            ]
                        }
                    ]
                }
            ],
            "outputs": [],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "validateHeader",
            "inputs": [
                {
                    "name": "_header",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "_signatures",
                    "type": "tuple[]",
                    "internalType": "struct Signature[]",
                    "components": [
                        {
                            "name": "isEmpty",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "v",
                            "type": "uint8",
                            "internalType": "uint8"
                        },
                        {
                            "name": "r",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "s",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "_digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "_currentTime",
                    "type": "uint256",
                    "internalType": "Timestamp"
                },
                {
                    "name": "_blobsHashesCommitment",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "_flags",
                    "type": "tuple",
                    "internalType": "struct DataStructures.ExecutionFlags",
                    "components": [
                        {
                            "name": "ignoreDA",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "ignoreSignatures",
                            "type": "bool",
                            "internalType": "bool"
                        }
                    ]
                }
            ],
            "outputs": [],
            "stateMutability": "view"
        },
        {
            "type": "event",
            "name": "Deposit",
            "inputs": [
                {
                    "name": "attester",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "proposer",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "withdrawer",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "EIP712DomainChanged",
            "inputs": [],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "L2BlockProposed",
            "inputs": [
                {
                    "name": "blockNumber",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "archive",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                },
                {
                    "name": "versionedBlobHashes",
                    "type": "bytes32[]",
                    "indexed": false,
                    "internalType": "bytes32[]"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "L2ProofVerified",
            "inputs": [
                {
                    "name": "blockNumber",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "proverId",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "OwnershipTransferred",
            "inputs": [
                {
                    "name": "previousOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "newOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "ProofRightClaimed",
            "inputs": [
                {
                    "name": "epoch",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "Epoch"
                },
                {
                    "name": "bondProvider",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "proposer",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "bondAmount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "currentSlot",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "Slot"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "PrunedPending",
            "inputs": [
                {
                    "name": "provenBlockNumber",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "pendingBlockNumber",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Slashed",
            "inputs": [
                {
                    "name": "attester",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "WithdrawFinalised",
            "inputs": [
                {
                    "name": "attester",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "recipient",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "WithdrawInitiated",
            "inputs": [
                {
                    "name": "attester",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "recipient",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "error",
            "name": "HeaderLib__InvalidSlotNumber",
            "inputs": [
                {
                    "name": "expected",
                    "type": "uint256",
                    "internalType": "Slot"
                },
                {
                    "name": "actual",
                    "type": "uint256",
                    "internalType": "Slot"
                }
            ]
        },
        {
            "type": "error",
            "name": "InvalidShortString",
            "inputs": []
        },
        {
            "type": "error",
            "name": "OwnableInvalidOwner",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "OwnableUnauthorizedAccount",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "Rollup__InvalidArchive",
            "inputs": [
                {
                    "name": "expected",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "actual",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ]
        },
        {
            "type": "error",
            "name": "Rollup__InvalidBlockNumber",
            "inputs": [
                {
                    "name": "expected",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "actual",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "Rollup__InvalidEpoch",
            "inputs": [
                {
                    "name": "expected",
                    "type": "uint256",
                    "internalType": "Epoch"
                },
                {
                    "name": "actual",
                    "type": "uint256",
                    "internalType": "Epoch"
                }
            ]
        },
        {
            "type": "error",
            "name": "Rollup__InvalidInHash",
            "inputs": [
                {
                    "name": "expected",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "actual",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ]
        },
        {
            "type": "error",
            "name": "Rollup__NoEpochToProve",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Rollup__NothingToPrune",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Rollup__ProofRightAlreadyClaimed",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Rollup__SlotAlreadyInChain",
            "inputs": [
                {
                    "name": "lastSlot",
                    "type": "uint256",
                    "internalType": "Slot"
                },
                {
                    "name": "proposedSlot",
                    "type": "uint256",
                    "internalType": "Slot"
                }
            ]
        },
        {
            "type": "error",
            "name": "SafeCastOverflowedIntToUint",
            "inputs": [
                {
                    "name": "value",
                    "type": "int256",
                    "internalType": "int256"
                }
            ]
        },
        {
            "type": "error",
            "name": "StringTooLong",
            "inputs": [
                {
                    "name": "str",
                    "type": "string",
                    "internalType": "string"
                }
            ]
        },
        {
            "type": "error",
            "name": "ValidatorSelection__InvalidDeposit",
            "inputs": [
                {
                    "name": "attester",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "proposer",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        }
    ],
    "bytecode": {
        "object": "0x6102c06040526005805460ff1916600117905534801561001d575f5ffd5b5060405161a08a38038061a08a83398101604081905261003c916108b0565b8481608001518260a001518360c00151845f015185602001518660400151886040518060400160405280600c81526020016b0417a74656320526f6c6c75760a41b815250604051806040016040528060018152602001603160f81b8152506100ad5f8361078460201b90919060201c565b610120526100bc816001610784565b61014052815160208084019190912060e052815190820120610100524660a05261014860e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b60805250503060c0526001600160a01b03811661017f57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b610188816107b6565b50610160819052427fcc2bde3d21ba778aa5c156bb6fc47381978b0054c8a1ef73f44234164324cbe0557fcc2bde3d21ba778aa5c156bb6fc47381978b0054c8a1ef73f44234164324cbe18390557fcc2bde3d21ba778aa5c156bb6fc47381978b0054c8a1ef73f44234164324cbe28290555f6201518090505f868660405161021090610844565b9182526020820152604001604051809103905ff080158015610234573d5f5f3e3d5ffd5b50604051626ab36360e51b81526001600160a01b03808c166004830152602482018b9052604482018590528216606482015290915073__$f6f607895dae8739569bdad20c7163daf4$__90630d566c60906084015f6040518083038186803b15801561029e575f5ffd5b505af41580156102b0573d5f5f3e3d5ffd5b50505050505050505050505050866001600160a01b0316610260816001600160a01b031681525050856001600160a01b0316610280816001600160a01b031681525050866001600160a01b031663c5d664c66040518163ffffffff1660e01b8152600401602060405180830381865afa15801561032f573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061035391906109ac565b6001600160a01b03166102a0819052815160208301516040513092919061037990610851565b6001600160a01b03948516815293909216602084015260408301526060820152608001604051809103905ff0801580156103b5573d5f5f3e3d5ffd5b506001600160a01b03166102205260405130906004906103d49061085e565b6001600160a01b0390921682526020820152604001604051809103905ff080158015610402573d5f5f3e3d5ffd5b506001600160a01b03166101e052604051309061041e9061086b565b6001600160a01b039091168152602001604051809103905ff080158015610447573d5f5f3e3d5ffd5b506001600160a01b031661020052600161024052436101c05260608101516101a052737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15156101805260405161049190610878565b604051809103905ff0801580156104aa573d5f5f3e3d5ffd5b50601680546001600160a01b0319166001600160a01b0392909216919091179055600a849055600b83905560408051610120810182525f608080830182815260a080850184905260c0850184905260e0850184905261010085018490529084527f0237797d6a2c04d20d4fa06b74482bd970ccd51a43d9b05b57e9b91fa1ae1cae60208086019182527f2da55666630fdf8594065c377958c827dc1c130dac91f17c6699b53dce60ef75868801908152606080880187815296805260068352965180517f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f855808301517f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f955808901517f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4fa55808801517f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4fb558501517f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4fc5591517f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4fd5590517f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4fe5592517f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4ff5584519081018552633b9aca00938101938452600191810191909152918252825180840184524881529251631c02c2d360e11b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d6004820152919283820192909182019073__$a4c28011a2e5925604ad1989bc2650e6d7$__9063380585a690602401602060405180830381865af4158015610725573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061074991906109ce565b90528152600560209182015281518051600c55810151600d55818101518051600e550151600f556040015160105550610b7b95505050505050565b5f60208351101561079f5761079883610807565b90506107b0565b816107aa8482610a69565b5060ff90505b92915050565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f5f829050601f81511115610831578260405163305a27a960e01b81526004016101769190610b23565b805161083c82610b58565b179392505050565b61125e806168f883390190565b610a1480617b5683390190565b610f778061856a83390190565b610a36806194e183390190565b61017380619f1783390190565b6001600160a01b0381168114610899575f5ffd5b50565b634e487b7160e01b5f52604160045260245ffd5b5f5f5f5f5f5f5f8789036101a08112156108c8575f5ffd5b88516108d381610885565b60208a01519098506108e481610885565b60408a01519097506108f581610885565b60608a015160808b015160a08c0151929850909650945061091581610885565b925060e060bf1982011215610928575f5ffd5b5060405160e081016001600160401b038111828210171561094b5761094b61089c565b604090815260c08a810151835260e08b015160208401526101008b0151918301919091526101208a015160608301526101408a015160808301526101608a015160a08301526101809099015198810198909852509497939650919490939192565b5f602082840312156109bc575f5ffd5b81516109c781610885565b9392505050565b5f602082840312156109de575f5ffd5b5051919050565b600181811c908216806109f957607f821691505b602082108103610a1757634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115610a6457805f5260205f20601f840160051c81016020851015610a425750805b601f840160051c820191505b81811015610a61575f8155600101610a4e565b50505b505050565b81516001600160401b03811115610a8257610a8261089c565b610a9681610a9084546109e5565b84610a1d565b6020601f821160018114610ac8575f8315610ab15750848201515b5f19600385901b1c1916600184901b178455610a61565b5f84815260208120601f198516915b82811015610af75787850151825560209485019460019092019101610ad7565b5084821015610b1457868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80516020808301519190811015610a17575f1960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051610220516102405161026051610280516102a051615c2b610ccd5f395f81816107580152612c4301525f81816109ba015281816113a60152818161154f0152612c2101525f81816105a60152818161130f0152818161149001528181612bff015261349d01525f8181610ce9015261346f01525f8181610b3b015281816117d801528181611d880152612bdd01525f81816105e5015261122101525f8181610af1015261115f01525f61091501525f81816106f1015281816117b20152612dd401525f610c9401525f8181610a88015281816116c1015281816124cd015281816129f50152818161306201526138ad01525f613a7601525f613a4a01525f613f6001525f613f3801525f613e9301525f613ebd01525f613ee70152615c2b5ff3fe608060405234801561000f575f5ffd5b50600436106104d2575f3560e01c80638da5cb5b11610284578063c001ab8211610161578063dc1bb8f4116100d5578063f1b98cea1161008f578063f1b98cea14610c8f578063f2fde38b14610cb6578063f7a0572b14610cc9578063f85d4eaa14610cd1578063ffa1ad7414610ce4578063ffdd5cf114610d0b575f5ffd5b8063dc1bb8f414610c16578063ddf8d65114610c29578063e3380b7914610c63578063e7142f7c14610c6b578063ede57c3414610c74578063ee3b8dc214610c7c575f5ffd5b8063d03b2bae11610126578063d03b2bae14610bd0578063d0c80f1314610be3578063d0f1be4914610beb578063d3c576d814610bfe578063d8e3784c14610c06578063d9bbd27814610c0e575f5ffd5b8063c001ab8214610b78578063c27f08b514610b8e578063c377834314610ba1578063c4014c1214610ba9578063c9d1e01214610bbd575f5ffd5b8063a575fcdc116101f8578063b85e881d116101bd578063b85e881d14610b13578063b8f3159014610b26578063b97dd9e214610b2e578063b980240514610b36578063b9d0916314610b5d578063bece308a14610b70575f5ffd5b8063a575fcdc14610a83578063a7f8e64614610aaa578063a9a1c6f414610abd578063b67d057b14610ae4578063b701069714610aec575f5ffd5b806399d706041161024957806399d7060414610a0b5780639e0fedd814610a1e5780639f2b315414610a405780639fa5048014610a48578063a011f6a914610a68578063a0e6fc8714610a70575f5ffd5b80638da5cb5b146109a45780638de728e4146109b55780638f2a2b26146109dc57806390a3b386146109fb578063966ab4ee14610a03575f5ffd5b806353a16024116103b2578063715018a611610326578063754eddb7116102eb578063754eddb7146108fd57806379ed8ead146109105780637afeed281461093757806380edb5bd1461094a57806384b0196e1461095d57806388e4a07314610978575f5ffd5b8063715018a6146108ae578063723d8e96146108b6578063725e494e146108ca5780637468582f146108dd57806374af185e146108ea575f5ffd5b806361de7ac61161037757806361de7ac61461082a57806363b03d331461083d57806368bdcbc514610850578063694223ac1461086357806369457a6f1461087b57806370192e561461088e575f5ffd5b806353a16024146107a55780635aa51600146107b85780635d3ea8f1146107cb5780635dc0ff94146107d35780635f82401f1461080a575f5ffd5b806336185aa11161044957806342d21ef71161040e57806342d21ef7146107135780634800d97f1461075357806348b9e57b1461077a5780634a177008146107825780634ed7e43514610795578063508ac49b1461079d575f5ffd5b806336185aa1146106b65780633777e863146106c9578063386f56fc146106dc5780633b10244b146106e45780633ceac569146106ec575f5ffd5b80631811f40b1161049a5780631811f40b146105a15780631b142ea7146105e05780631cfe2878146106075780632716c7371461062757806333f9acb41461063a57806335f3892014610662575f5ffd5b80630284c3f5146104d657806302a21460146104eb57806302fb4d851461051357806304c0756914610526578063164552d81461058e575b5f5ffd5b6104e96104e43660046141d7565b610d2b565b005b6008545f908152600660205260409020600501545b6040519081526020015b60405180910390f35b6104e9610521366004614225565b610e12565b61053961053436600461424f565b610e84565b60408051825180518252602080820151818401528184015183850152606080830151818501526080928301519284019290925284015160a08301529183015160c082015291015160e08201526101000161050a565b6104e961059c3660046144a4565b610f2e565b6105c87f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161050a565b6105c87f000000000000000000000000000000000000000000000000000000000000000081565b61061a61061536600461424f565b611604565b60405161050a9190614564565b6104e96106353660046145c0565b61172f565b61064d6106483660046145ec565b611835565b6040805192835260208301919091520161050a565b61066a611965565b60405161050a91908151815260208083015190820152604080830151908201526060808301516001600160a01b0390811691830191909152608092830151169181019190915260a00190565b6104e96106c436600461460c565b6119e5565b6105006106d736600461424f565b611a80565b610500611aa7565b6105c8611b1c565b6105007f000000000000000000000000000000000000000000000000000000000000000081565b61072661072136600461424f565b611b2b565b604080519687526020870195909552938501929092526060840152608083015260a082015260c00161050a565b6105c87f000000000000000000000000000000000000000000000000000000000000000081565b600854610500565b6104e96107903660046146d4565b611b87565b61061a611bf1565b6104e9611c69565b6104e96107b33660046146ef565b611d5e565b6104e96107c636600461424f565b611f26565b610500611f33565b6107e66107e13660046146d4565b611f4c565b60408051825181526020928301516001600160a01b0316928101929092520161050a565b61081d61081836600461424f565b612008565b60405161050a919061470a565b6105c86108383660046146d4565b61205b565b6104e961084b366004614721565b6120ef565b6104e961085e36600461424f565b612106565b61086b612113565b604051901515815260200161050a565b61061a61088936600461424f565b61211d565b6108a161089c3660046147f3565b612186565b60405161050a9190614821565b6104e9612293565b5f516020615bd65f395f51905f5254610500565b6104e96108d83660046146d4565b6122a6565b60055461086b9060ff1681565b6105006108f836600461424f565b6122d0565b61050061090b3660046147f3565b6122da565b6105007f000000000000000000000000000000000000000000000000000000000000000081565b61050061094536600461424f565b6122f4565b61050061095836600461424f565b612308565b610965612358565b60405161050a9796959493929190614888565b6040805180820182525f808252602091820152815180830190925260085482526009549082015261081d565b6002546001600160a01b03166105c8565b6105c87f000000000000000000000000000000000000000000000000000000000000000081565b6105006109ea36600461424f565b5f9081526007602052604090205490565b61050061239a565b61061a612411565b6105c8610a1936600461424f565b612535565b610a31610a2c36600461491e565b612642565b60405161050a93929190614996565b6104e96126d9565b610a5b610a563660046149ba565b612706565b60405161050a9190614aa8565b6105c861279f565b6104e9610a7e36600461424f565b61281a565b6105007f000000000000000000000000000000000000000000000000000000000000000081565b6105c8610ab836600461424f565b612830565b6105c87f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d81565b600954610500565b6105c87f000000000000000000000000000000000000000000000000000000000000000081565b610500610b21366004614acb565b61287c565b61050061288e565b6105006128d7565b6105c87f000000000000000000000000000000000000000000000000000000000000000081565b610500610b6b36600461424f565b6128e1565b6105006128eb565b6105c86b4355415548584943414c4c4960401b81565b6105c8610b9c36600461424f565b612924565b610500612a5b565b5f516020615b965f395f51905f5254610500565b610500610bcb36600461424f565b612a78565b610500610bde36600461424f565b612a82565b6105c8612a8c565b6104e9610bf9366004614b2a565b612b0a565b610500600581565b610500612cf3565b610500612cfd565b61086b610c2436600461424f565b612d69565b610c3c610c3736600461424f565b612e5d565b6040805182516001600160a01b03908116825260209384015116928101929092520161050a565b6104e9612f67565b6105006103e881565b6105006130e3565b61086b610c8a366004614b61565b6130f1565b61086b7f000000000000000000000000000000000000000000000000000000000000000081565b6104e9610cc43660046146d4565b61317c565b610500600281565b6104e9610cdf366004614b8d565b6131b9565b6105007f000000000000000000000000000000000000000000000000000000000000000081565b610d1e610d193660046146d4565b61325c565b60405161050a9190614c85565b610d33612f67565b6001600160a01b03841615801590610d5357506001600160a01b03831615155b84849091610d8c5760405163533169bd60e01b81526001600160a01b039283166004820152911660248201526044015b60405180910390fd5b5050604051630284c3f560e01b81526001600160a01b0380861660048301528085166024830152831660448201526064810182905273__$f6f607895dae8739569bdad20c7163daf4$__90630284c3f5906084015f6040518083038186803b158015610df6575f5ffd5b505af4158015610e08573d5f5f3e3d5ffd5b5050505050505050565b6040516302fb4d8560e01b81526001600160a01b03831660048201526024810182905273__$f6f607895dae8739569bdad20c7163daf4$__906302fb4d85906044015f6040518083038186803b158015610e6a575f5ffd5b505af4158015610e7c573d5f5f3e3d5ffd5b505050505050565b610e8c614105565b6008548281811115610eba5760405163e5edf84760e01b815260048101929092526024820152604401610d83565b5050505f90815260066020818152604092839020835161012081018552815460808201908152600183015460a0830152600283015460c0830152600383015460e083015260048301546101008301528152600582015492810192909252918201549281019290925260070154606082015290565b610f36612113565b15610f4357610f43613373565b610f4b611c69565b60055460405163f711e6c360e01b81525f918291829173__$a4c28011a2e5925604ad1989bc2650e6d7$__9163f711e6c391610f93918991899160ff90911690600401614cfd565b5f60405180830381865af4158015610fad573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610fd49190810190614d7d565b919450925090505f73__$a4c28011a2e5925604ad1989bc2650e6d7$__6364daf9d661100360808d018d614dc8565b6040518363ffffffff1660e01b8152600401611020929190614e0a565b61036060405180830381865af415801561103c573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110609190614f95565b905061106a612f67565b5f611076426001612186565b90505f611082826133e6565b90506110b9838c61109b8f61109690615113565b6133f0565b604080518082019091525f8082526020820152429086908b90613422565b600880545f919082906110cb906151cd565b91905081905590506110e18d82855f015161354e565b5f8281526006602081815260408084208551805182558084015160018301558083015160028301556060808201516003840155608090910151600480840191909155878501516005840155878401519583019590955590950151600795860155939052828220889055915163483f31ab60e01b8152918201839052907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063483f31ab906024016020604051808303815f875af11580156111ad573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111d191906151e5565b60208601516040015190915081908082146112085760405163cd6f423360e01b815260048101929092526024820152604401610d83565b5050505f61121c85602001515f0151613681565b5090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633d96c2c98387602001516060015184600161126591906151fc565b6040516001600160e01b031960e086901b1681526004810193909352602483019190915260448201526064015f604051808303815f87803b1580156112a8575f5ffd5b505af11580156112ba573d5f5f3e3d5ffd5b505050508d5f0135827f9ad613a7ff46b97e0f732b31118d43f39c9ca017bed1efe739b70b06253835898a6040516112f29190614aa8565b60405180910390a360175482116115f45761130c82613761565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663026cd0dc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611369573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061138d919061520f565b6001600160a01b0316306001600160a01b03161490505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663026cd0dc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611400573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611424919061520f565b6001600160a01b0316306001600160a01b03161490508180156114575750606087015160a001516001600160a01b031615155b801561146657505f8760800151115b1561150557606087015160a0015160808801516040516348fef59560e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016926348fef595926114d7926004016001600160a01b03929092168252602082015260400190565b5f604051808303815f87803b1580156114ee575f5ffd5b505af1158015611500573d5f5f3e3d5ffd5b505050505b8080156115225750606087015160a001516001600160a01b031615155b156115bd57606087015160a00151604051630f41a04d60e11b81526001600160a01b0391821660048201527f000000000000000000000000000000000000000000000000000000000000000090911690631e83409a906024016020604051808303815f875af1158015611597573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115bb91906151e5565b505b6040516410d211505560da1b9085907fd989775bfca9340a9fcb6a458bef402a5defb0d44211ee8d61a5974e9ad7379b905f90a350505b5050505050505050505050505050565b606073__$e9020b12d3d7a8dada1f2211c57e4d352c$__63b87cc28d600373__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af4158015611669573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061168d91906151e5565b61169686612a78565b6040516001600160e01b031960e086901b1681526004810193909352602483019190915260448201527f000000000000000000000000000000000000000000000000000000000000000060648201526084015f60405180830381865af4158015611702573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052611729919081019061522a565b92915050565b5f611739836128e1565b90505f61174584612924565b90505f6117506128eb565b90505f61175c846137f8565b90505f611771610b2136889003880188614acb565b604051631bff461d60e21b815290915073__$a4c28011a2e5925604ad1989bc2650e6d7$__90636ffd1874906118009088908890889088908d9089906011907f0000000000000000000000000000000000000000000000000000000000000000906103e8907f0000000000000000000000000000000000000000000000000000000000000000906004016152b9565b5f6040518083038186803b158015611816575f5ffd5b505af4158015611828573d5f5f3e3d5ffd5b5050505050505050505050565b5f5f5f611841856128e1565b90505f61184d86612d69565b6118595760085461185d565b6009545b5f81815260066020526040902060070154909150808380821061189c5760405163083510bd60e41b815260048101929092526024820152604401610d83565b50505f8281526006602052604090206005015480878082146118da57604051635b41520760e11b815260048101929092526024820152604401610d83565b5050604080515f8082526020820190925281611923565b604080516080810182525f8082526020808301829052928201819052606082015282525f199092019101816118f15790505b50604080518082019091526001808252602082015290915061194786838b84613813565b856119538660016151fc565b975097505050505050505b9250929050565b6119a46040518060a001604052805f81526020015f81526020015f81526020015f6001600160a01b031681526020015f6001600160a01b031681525090565b506040805160a08101825260115481526012546020820152601354918101919091526014546001600160a01b03908116606083015260155416608082015290565b60405163326d7ceb60e11b8152611a779073__$a4c28011a2e5925604ad1989bc2650e6d7$__906364daf9d690611a22908b908b90600401614e0a565b61036060405180830381865af4158015611a3e573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a629190614f95565b868686611a708860016122da565b8787613422565b50505050505050565b6008545f90821115611a92575f611729565b505f9081526006602052604090206005015490565b5f73__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af4158015611aef573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b1391906151e5565b60030154905090565b5f611b2642612924565b905090565b6009545f8181526006602052604080822060059081015460085480855292842090910154929384938493849384938493909290611b678b611a80565b600954611b7390612308565b949c939b5091995097509550909350915050565b604051630942ee0160e31b81526001600160a01b038216600482015273__$f6f607895dae8739569bdad20c7163daf4$__90634a177008906024015f6040518083038186803b158015611bd8575f5ffd5b505af4158015611bea573d5f5f3e3d5ffd5b5050505050565b6060611b2673__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af4158015611c3d573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c6191906151e5565b600401613922565b5f611c72612cf3565b6010549091505f90611c8f90611c8a6005600261392e565b613939565b905081811115611c9d575050565b600e54600c55600f54600d556040805180820182524881529051631c02c2d360e11b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d6004820152602082019073__$a4c28011a2e5925604ad1989bc2650e6d7$__9063380585a690602401602060405180830381865af4158015611d1a573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d3e91906151e5565b90528051600e5560200151600f55611d57826002613939565b6010555050565b611d68428261172f565b5f611d71612cf3565b90505f611d7c6128eb565b90506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016631c87b6ac611dbd60808601606087016146d4565b6040805160e084901b6001600160e01b03191681526001600160a01b03909216600483015286013560248201526044015f604051808303815f87803b158015611e04575f5ffd5b505af1158015611e16573d5f5f3e3d5ffd5b505050506040518060a00160405280828152602001845f016080016020810190611e4091906153ad565b63ffffffff168152604080860135602083015201611e6460808601606087016146d4565b6001600160a01b0390811682523360209283018190528351601155918301516012556040830151601355606080840151601480549184166001600160a01b031992831617905560809485015160158054919094169116179091559091611ecf919086019086016146d4565b6001600160a01b0316827f04eee47b3fe9e6bcdec9370371d65501f3fb3f44d2fbf49c2b6834635a7253df865f016040013586604051611f19929190918252602082015260400190565b60405180910390a4505050565b611f2e613944565b600a55565b5f5f516020615bd65f395f51905f525b60020154905090565b604080518082019091525f808252602082015273__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af4158015611fa6573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fca91906151e5565b6001600160a01b039283165f908152600791909101602090815260409182902082518084019093528054835260010154909316928101929092525090565b604080518082019091525f808252602082015261202e612027836128e1565b6010541190565b61203957600e61203c565b600c5b6040805180820190915281548152600190910154602082015292915050565b5f73__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af41580156120a3573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120c791906151e5565b6001600160a01b039283165f9081526006919091016020526040902060020154909116919050565b6120fd878787878787610f2e565b611a7781611d5e565b61210e613944565b600b55565b5f611b2642612d69565b5f8181526003602090815260409182902080548351818402810184019094528084526060939283018282801561217a57602002820191905f5260205f20905b81546001600160a01b0316815260019091019060200180831161215c575b50505050509050919050565b6121b36040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b5f6121bd84612d69565b6121c9576008546121cd565b6009545b5f81815260066020526040902090915073__$a4c28011a2e5925604ad1989bc2650e6d7$__906332b68a7e9061220287612008565b8661221157633b9aca00612219565b612219612a5b565b5f516020615bb65f395f51905f52546040516001600160e01b031960e087901b16815261224c94939291906004016153c8565b60a060405180830381865af4158015612267573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061228b91906153f8565b949350505050565b61229b613944565b6122a45f613971565b565b6122ae613944565b601680546001600160a01b0319166001600160a01b0392909216919091179055565b5f611729826139c2565b5f6122ed6122e88484612186565b6133e6565b9392505050565b5f611729600361230384612a78565b6139dd565b6008545f9082818111156123385760405163e5edf84760e01b815260048101929092526024820152604401610d83565b50505f8281526006602052604090206007015461172990610bcb90612a82565b5f6060805f5f5f6060612369613a43565b612371613a6f565b604080515f80825260208201909252600f60f81b9b939a50919850469750309650945092509050565b5f611b2673__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af41580156123e5573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061240991906151e5565b600401613a9c565b606073__$e9020b12d3d7a8dada1f2211c57e4d352c$__63b87cc28d600373__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af4158015612476573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061249a91906151e5565b6124a26128d7565b6040516001600160e01b031960e086901b1681526004810193909352602483019190915260448201527f000000000000000000000000000000000000000000000000000000000000000060648201526084015f60405180830381865af415801561250e573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052611b26919081019061522a565b5f73__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af415801561257d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906125a191906151e5565b6006015f61261d8473__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af41580156125f0573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061261491906151e5565b60040190613aa5565b6001600160a01b03908116825260208201929092526040015f20600201541692915050565b60055460405163f711e6c360e01b81526060915f91829173__$a4c28011a2e5925604ad1989bc2650e6d7$__9163f711e6c39161268b918991899160ff90911690600401614cfd565b5f60405180830381865af41580156126a5573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526126cc9190810190614d7d565b9250925092509250925092565b6126e1612113565b6126fe5760405163850defd360e01b815260040160405180910390fd5b6122a4613373565b60405163dfc5c62360e01b815260609073__$a4c28011a2e5925604ad1989bc2650e6d7$__9063dfc5c62390612751906006908d908d908d908d908d908d908d908d90600401615477565b5f60405180830381865af415801561276b573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261279291908101906154db565b9998505050505050505050565b5f73__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af41580156127e7573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061280b91906151e5565b546001600160a01b0316919050565b612822613944565b61282b81613761565b601755565b5f6117298273__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af41580156125f0573d5f5f3e3d5ffd5b5f61172961288983613ab0565b613aba565b5f5f6128986128eb565b601154909150811415806128b557506014546001600160a01b0316155b6128d2576040516316562f8560e11b815260040160405180910390fd5b919050565b5f611b2642612a78565b5f61172982613ae6565b6008546009545f9190036129125760405163cbaa395160e01b815260040160405180910390fd5b600954611b26906109589060016151fc565b5f5f61292f836128e1565b90505f61293b826122d0565b905073__$e9020b12d3d7a8dada1f2211c57e4d352c$__63d9e431ce600373__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af41580156129a0573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906129c491906151e5565b6040516001600160e01b031960e085901b1681526004810192909252602482015260448101859052606481018490527f0000000000000000000000000000000000000000000000000000000000000000608482015260a401602060405180830381865af4158015612a37573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061228b919061520f565b6008545f90815260066020526040812060010154611b2690613b1c565b5f61172982613b26565b5f61172982613b6b565b5f73__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af4158015612ad4573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612af891906151e5565b600101546001600160a01b0316919050565b612b12612113565b15612b1f57612b1f613373565b612b636040518061010001604052805f81526020015f81526020015f81526020015f81526020015f151581526020015f151581526020015f81526020015f81525090565b600954808252612b75908335906151fc565b60208201528051612b8b906109589060016151fc565b60608201526020810151612b9e90612308565b604080830191909152516337770f7b60e01b81525f9073__$a4c28011a2e5925604ad1989bc2650e6d7$__906337770f7b90612c7c90600690879087907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000906b4355415548584943414c4c4960401b9060040161554d565b602060405180830381865af4158015612c97573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612cbb91906151e5565b60405190915060e08401359082907fd989775bfca9340a9fcb6a458bef402a5defb0d44211ee8d61a5974e9ad7379b905f90a3505050565b5f611b26426128e1565b5f73__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af4158015612d45573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f4391906151e5565b6009546008545f911480612d81575060175460085411155b15612d8d57505f919050565b5f612d97836128e1565b6009549091505f90612dae906109589060016151fc565b90505f612dba82613b9b565b90505f612dfc84612df8612dd285611c8a6001613b9b565b7f0000000000000000000000000000000000000000000000000000000000000000613939565b1190565b90505f612e1185612df885611c8a6002613b9b565b8015612e1e575060115484145b8015612e3457506015546001600160a01b031615155b90508180612e3f5750805b15612e5057505f9695505050505050565b5060019695505050505050565b604080518082019091525f80825260208201525f612ebc8373__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af41580156125f0573d5f5f3e3d5ffd5b9050604051806040016040528073__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af4158015612f10573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612f3491906151e5565b6001600160a01b039384165f81815260069290920160209081526040909220600201549094168252019190915292915050565b5f612f706128d7565b5f81815260036020526040812060018101549293509190036130df57612f976003836139dd565b6001820155612fa582613bb6565b6003600101819055816002018190555073__$e9020b12d3d7a8dada1f2211c57e4d352c$__634229851773__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af4158015613016573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061303a91906151e5565b60018401546040516001600160e01b031960e085901b168152600481019290925260248201527f000000000000000000000000000000000000000000000000000000000000000060448201526064015f60405180830381865af41580156130a3573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526130ca919081019061522a565b80516130dd918391602090910190614155565b505b5050565b5f611b2660036123036128d7565b5f6130fa612f67565b60405163771dc6e160e11b81526001600160a01b0380851660048301528316602482015273__$f6f607895dae8739569bdad20c7163daf4$__9063ee3b8dc290604401602060405180830381865af4158015613158573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122ed9190615700565b613184613944565b6001600160a01b0381166131ad57604051631e4fbdf760e01b81525f6004820152602401610d83565b6131b681613971565b50565b6131c1613944565b5f5b81518110156132535761324b8282815181106131e1576131e16156ec565b60200260200101515f01518383815181106131fe576131fe6156ec565b60200260200101516020015184848151811061321c5761321c6156ec565b60200260200101516040015185858151811061323a5761323a6156ec565b602002602001015160600151610d33565b6001016131c3565b506131b6612f67565b613283604080516080810182525f8082526020820181905291810182905290606082015290565b73__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af41580156132ca573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906132ee91906151e5565b6001600160a01b038381165f9081526006929092016020908152604092839020835160808101855281548152600182015484169281019290925260028101549283169382019390935291906060830190600160a01b900460ff16600381111561335957613359614c71565b600381111561336a5761336a614c71565b90525092915050565b5f60118190556012819055601355601480546001600160a01b03199081169091556015805490911690556008805460095491829055604080519283526020830182905290917fc78a70f3b27748d5fa327f6a3c1104b9b007d6a80d20c41f7c0dc4543fbdbdcd910160405180910390a150565b5f61172982613bf1565b5f60018260405160200161340592919061571b565b604051602081830303815290604052805190602001209050919050565b5f61342c85612d69565b6134385760085461343c565b6009545b60408051610120810182528a81526020808201899052818301889052606082018790526080820184905260a082018690527f000000000000000000000000000000000000000000000000000000000000000060c08301526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660e083015230901b63d03b2bae17821b61010082015290516379514e8560e01b815291925073__$a4c28011a2e5925604ad1989bc2650e6d7$__916379514e859161350d9160069060040161594d565b5f6040518083038186803b158015613523575f5ffd5b505af4158015613535573d5f5f3e3d5ffd5b50505050610e0888606001516060015188888886613c23565b613556614105565b5f6006816135656001876159e5565b81526020019081526020015f205f016040518060a00160405290815f8201548152602001600182015481526020016002820154815260200160038201548152602001600482015481525050905060405180608001604052806040518060a001604052806135d185613cb0565b81526020858101519101906135ea9060608b0135613cd4565b81526020016135fc60808a018a614dc8565b61360d9161028891610268916159f8565b61361691615a1f565b815260608501516020909101906136319060408b0135613cd4565b81526020908101879052908252873582820152870135604082015260600161365c6080880188614dc8565b61366d916101b491610194916159f8565b61367691615a1f565b905295945050505050565b5f5f600283101561369657505f928392509050565b5f60018180805b8715613716578784165f036136c55760019390931b92826136bd816151cd565b93505061369d565b845f036136cf5750815b6136d984896159e5565b5f036136e3578291505b6136ed84896159e5565b975060019390931b9282613700816151cd565b935050848061370e906151cd565b95505061369d565b8460010361372b575096879650945050505050565b5f600161373887846151fc565b61374291906159e5565b90505f6137508460016151fc565b919a91995090975050505050505050565b6009548111801561377457506008548111155b156131b65760098190555f61378882612308565b9050801580613798575060115481115b156130df576040805160a0810182528281525f60208201819052918101829052606081018290523360809091018190526011929092556012819055601355601480546001600160a01b031990811690915560158054909116909117905550565b5f516020615bb65f395f51905f52545f906117299083615a50565b5f61381d856122d0565b905073__$e9020b12d3d7a8dada1f2211c57e4d352c$__6311f3ca4c600373__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af4158015613882573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906138a691906151e5565b88858989897f00000000000000000000000000000000000000000000000000000000000000006040518963ffffffff1660e01b81526004016138ef989796959493929190615a63565b5f6040518083038186803b158015613905575f5ffd5b505af4158015613917573d5f5f3e3d5ffd5b505050505050505050565b60605f6122ed83613cdf565b5f6122ed82846159e5565b5f6122ed82846151fc565b6002546001600160a01b031633146122a45760405163118cdaa760e01b8152336004820152602401610d83565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f516020615bb65f395f51905f52545f906117299083615b1f565b5f815f036139ed57505f19611729565b5f828152602084905260409020600101548015613a0b579050611729565b835f613a1885600161392e565b81526020019081526020015f20600201549050805f14613a39579050611729565b5050506001015490565b6060611b267f00000000000000000000000000000000000000000000000000000000000000005f613d37565b6060611b267f00000000000000000000000000000000000000000000000000000000000000006001613d37565b5f611729825490565b5f6122ed8383613de0565b5f61172982613e06565b5f611729613ac6613e87565b8360405161190160f01b8152600281019290925260228201526042902090565b5f516020615b965f395f51905f52545f516020615bd65f395f51905f5280545f9290613b1290856159e5565b6122ed9190615b1f565b5f61172982613fb0565b5f516020615b965f395f51905f52545f516020615bb65f395f51905f52545f915f516020615bd65f395f51905f5291613b5f9190615b32565b8154613b1290856159e5565b5f516020615bd65f395f51905f5280545f516020615b965f395f51905f52545f92916122ed91611c8a9086615b32565b5f516020615bb65f395f51905f52545f906117299083615b32565b5f8144604051602001613bd3929190918252602082015260400190565b60408051601f19818403018152919052805160209091012092915050565b5f815f0151826080015183606001518460400151613c0f91906151fc565b613c1991906151fc565b61172991906151fc565b5f613c2d836128e1565b90508086808214613c5a576040516309ba91ff60e01b815260048101929092526024820152604401610d83565b50505f613c69610bcb88612a82565b90505f613c7585612a78565b90508082808214613ca257604051631e36b2f360e11b815260048101929092526024820152604401610d83565b5050610e0888888887613813565b5f6117298260400151835f0151613cc791906151fc565b613cd46305f5e100615b49565b5f6122ed8383613fc6565b6060815f0180548060200260200160405190810160405280929190818152602001828054801561217a57602002820191905f5260205f20905b815481526020019060010190808311613d185750505050509050919050565b606060ff8314613d5157613d4a8361400d565b9050611729565b818054613d5d90615b63565b80601f0160208091040260200160405190810160405280929190818152602001828054613d8990615b63565b8015613dd45780601f10613dab57610100808354040283529160200191613dd4565b820191905f5260205f20905b815481529060010190602001808311613db757829003601f168201915b50505050509050611729565b5f825f018281548110613df557613df56156ec565b905f5260205f200154905092915050565b5f7f87ad602ba7da8fbd0870ea16b81fedb3d066c92bd5549f066c4512db6b28fb9d825f01518360200151846040015185606001518660800151604051602001613405969594939291909586526020860194909452604085019290925260608401526001600160a01b0316608083015263ffffffff1660a082015260c00190565b5f306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015613edf57507f000000000000000000000000000000000000000000000000000000000000000046145b15613f0957507f000000000000000000000000000000000000000000000000000000000000000090565b611b26604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b5f6117296402540be4008364174876e80061404a565b5f5f8212613fe157613fd7826140b5565b613d4a90846151fc565b60ff82901d808301188084111561400457613ffc81856159e5565b915050611729565b505f9392505050565b60605f614019836140de565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b5f600181806140598588615b32565b90505b80156140a05761406c81836151fc565b91506140788386615b32565b6140828783615b32565b61408c9190615b1f565b90506140996001846151fc565b925061405c565b6140aa8583615b1f565b979650505050505050565b5f5f8212156140da57604051635467221960e11b815260048101839052602401610d83565b5090565b5f60ff8216601f81111561172957604051632cd44ac360e21b815260040160405180910390fd5b604051806080016040528061413d6040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b81526020015f81526020015f81526020015f81525090565b828054828255905f5260205f209081019282156141a8579160200282015b828111156141a857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190614173565b506140da9291505b808211156140da575f81556001016141b0565b6001600160a01b03811681146131b6575f5ffd5b5f5f5f5f608085870312156141ea575f5ffd5b84356141f5816141c3565b93506020850135614205816141c3565b92506040850135614215816141c3565b9396929550929360600135925050565b5f5f60408385031215614236575f5ffd5b8235614241816141c3565b946020939093013593505050565b5f6020828403121561425f575f5ffd5b5035919050565b5f60c08284031215614276575f5ffd5b50919050565b634e487b7160e01b5f52604160045260245ffd5b604051608081016001600160401b03811182821017156142b2576142b261427c565b60405290565b604080519081016001600160401b03811182821017156142b2576142b261427c565b60405160a081016001600160401b03811182821017156142b2576142b261427c565b60405161010081016001600160401b03811182821017156142b2576142b261427c565b60405160c081016001600160401b03811182821017156142b2576142b261427c565b604051601f8201601f191681016001600160401b03811182821017156143695761436961427c565b604052919050565b5f6001600160401b038211156143895761438961427c565b5060051b60200190565b80151581146131b6575f5ffd5b803560ff811681146128d2575f5ffd5b5f82601f8301126143bf575f5ffd5b81356143d26143cd82614371565b614341565b8082825260208201915060208360071b8601019250858311156143f3575f5ffd5b602085015b8381101561445d576080818803121561440f575f5ffd5b614417614290565b813561442281614393565b8152614430602083016143a0565b602082810191909152604083810135908301526060808401359083015290845292909201916080016143f8565b5095945050505050565b5f5f83601f840112614477575f5ffd5b5081356001600160401b0381111561448d575f5ffd5b60208301915083602082850101111561195e575f5ffd5b5f5f5f5f5f5f608087890312156144b9575f5ffd5b86356001600160401b038111156144ce575f5ffd5b6144da89828a01614266565b96505060208701356001600160401b038111156144f5575f5ffd5b61450189828a016143b0565b95505060408701356001600160401b0381111561451c575f5ffd5b61452889828a01614467565b90955093505060608701356001600160401b03811115614546575f5ffd5b61455289828a01614467565b979a9699509497509295939492505050565b602080825282518282018190525f918401906040840190835b818110156145a45783516001600160a01b031683526020938401939092019160010161457d565b509095945050505050565b5f6101208284031215614276575f5ffd5b5f5f61014083850312156145d2575f5ffd5b823591506145e384602085016145af565b90509250929050565b5f5f604083850312156145fd575f5ffd5b50508035926020909101359150565b5f5f5f5f5f5f5f87890360e0811215614623575f5ffd5b88356001600160401b03811115614638575f5ffd5b6146448b828c01614467565b90995097505060208901356001600160401b03811115614662575f5ffd5b61466e8b828c016143b0565b965050604089810135955060608a0135945060808a01359350609f1982011215614696575f5ffd5b5061469f6142b8565b60a08901356146ad81614393565b815260c08901356146bd81614393565b806020830152508091505092959891949750929550565b5f602082840312156146e4575f5ffd5b81356122ed816141c3565b5f6101208284031215614700575f5ffd5b6122ed83836145af565b815181526020808301519082015260408101611729565b5f5f5f5f5f5f5f6101a0888a031215614738575f5ffd5b87356001600160401b0381111561474d575f5ffd5b6147598a828b01614266565b97505060208801356001600160401b03811115614774575f5ffd5b6147808a828b016143b0565b96505060408801356001600160401b0381111561479b575f5ffd5b6147a78a828b01614467565b90965094505060608801356001600160401b038111156147c5575f5ffd5b6147d18a828b01614467565b90945092506147e590508960808a016145af565b905092959891949750929550565b5f5f60408385031215614804575f5ffd5b82359150602083013561481681614393565b809150509250929050565b60a08101611729828480518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b60ff60f81b8816815260e060208201525f6148a660e083018961485a565b82810360408401526148b8818961485a565b606084018890526001600160a01b038716608085015260a0840186905283810360c0850152845180825260208087019350909101905f5b8181101561490d5783518352602093840193909201916001016148ef565b50909b9a5050505050505050505050565b5f5f6020838503121561492f575f5ffd5b82356001600160401b03811115614944575f5ffd5b61495085828601614467565b90969095509350505050565b5f8151808452602084019350602083015f5b8281101561498c57815186526020958601959091019060010161496e565b5093949350505050565b606081525f6149a8606083018661495c565b60208301949094525060400152919050565b5f5f5f5f5f5f5f5f610160898b0312156149d2575f5ffd5b8835975061010089018a8111156149e7575f5ffd5b60208a019750356001600160401b03811115614a01575f5ffd5b8901601f81018b13614a11575f5ffd5b80356001600160401b03811115614a26575f5ffd5b8b60208260051b8401011115614a3a575f5ffd5b602091909101965094506101208901356001600160401b03811115614a5d575f5ffd5b614a698b828c01614467565b9095509350506101408901356001600160401b03811115614a88575f5ffd5b614a948b828c01614467565b999c989b5096995094979396929594505050565b602081525f6122ed602083018461495c565b63ffffffff811681146131b6575f5ffd5b5f60a0828403128015614adc575f5ffd5b50614ae56142da565b8235815260208084013590820152604080840135908201526060830135614b0b816141c3565b60608201526080830135614b1e81614aba565b60808201529392505050565b5f60208284031215614b3a575f5ffd5b81356001600160401b03811115614b4f575f5ffd5b820161018081850312156122ed575f5ffd5b5f5f60408385031215614b72575f5ffd5b8235614b7d816141c3565b91506020830135614816816141c3565b5f60208284031215614b9d575f5ffd5b81356001600160401b03811115614bb2575f5ffd5b8201601f81018413614bc2575f5ffd5b8035614bd06143cd82614371565b8082825260208201915060208360071b850101925086831115614bf1575f5ffd5b6020840193505b82841015614c675760808488031215614c0f575f5ffd5b614c17614290565b8435614c22816141c3565b81526020850135614c32816141c3565b60208201526040850135614c45816141c3565b6040820152606085810135908201528252608090930192602090910190614bf8565b9695505050505050565b634e487b7160e01b5f52602160045260245ffd5b815181526020808301516001600160a01b0390811691830191909152604080840151909116908201526060820151608082019060048110614cc857614cc8614c71565b8060608401525092915050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b604081525f614d10604083018587614cd5565b90508215156020830152949350505050565b5f82601f830112614d31575f5ffd5b8151614d3f6143cd82614371565b8082825260208201915060208360051b860101925085831115614d60575f5ffd5b602085015b8381101561445d578051835260209283019201614d65565b5f5f5f60608486031215614d8f575f5ffd5b83516001600160401b03811115614da4575f5ffd5b614db086828701614d22565b60208601516040909601519097959650949350505050565b5f5f8335601e19843603018112614ddd575f5ffd5b8301803591506001600160401b03821115614df6575f5ffd5b60200191503681900382131561195e575f5ffd5b602081525f61228b602083018486614cd5565b5f60408284031215614e2d575f5ffd5b614e356142b8565b825181526020830151909150614e4a81614aba565b602082015292915050565b5f818303610140811215614e67575f5ffd5b614e6f6142b8565b9150614e7b8484614e1d565b8252610100603f1982011215614e8f575f5ffd5b50614e98614290565b614ea58460408501614e1d565b8152614eb48460808501614e1d565b6020820152614ec68460c08501614e1d565b6040820152614ed9846101008501614e1d565b6060820152602082015292915050565b5f60408284031215614ef9575f5ffd5b614f016142b8565b825181526020928301519281019290925250919050565b5f6101208284031215614f29575f5ffd5b614f316142fc565b825181526020808401519082015260408084015190820152606080840151908201526080808401519082015260a0830151909150614f6e816141c3565b60a082015260c08281015190820152614f8a8360e08401614ee9565b60e082015292915050565b5f81830361036081128015614fa8575f5ffd5b50614fb161431f565b614fbb8585614e1d565b81526080603f1983011215614fce575f5ffd5b614fd6614290565b604085810151825260608087015160208085019190915260808801519284019290925260a087015190830152820181905291506150168560c08601614e55565b6040820152615029856102008601614f18565b606082015261032084015160808201526103409093015160a0840152509092915050565b5f82601f83011261505c575f5ffd5b81356001600160401b038111156150755761507561427c565b615088601f8201601f1916602001614341565b81815284602083860101111561509c575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f82601f8301126150c7575f5ffd5b81356150d56143cd82614371565b8082825260208201915060208360051b8601019250858311156150f6575f5ffd5b602085015b8381101561445d5780358352602092830192016150fb565b5f81360360c0811215615124575f5ffd5b61512c6142da565b83358152602080850135908201526040603f198301121561514b575f5ffd5b6151536142b8565b604085810135825260608601356020830152820152608084013591506001600160401b03821115615182575f5ffd5b61518e3683860161504d565b606082015260a084013591506001600160401b038211156151ad575f5ffd5b614b1e368386016150b8565b634e487b7160e01b5f52601160045260245ffd5b5f600182016151de576151de6151b9565b5060010190565b5f602082840312156151f5575f5ffd5b5051919050565b80820180821115611729576117296151b9565b5f6020828403121561521f575f5ffd5b81516122ed816141c3565b5f6020828403121561523a575f5ffd5b81516001600160401b0381111561524f575f5ffd5b8201601f8101841361525f575f5ffd5b805161526d6143cd82614371565b8082825260208201915060208360051b85010192508683111561528e575f5ffd5b6020840193505b82841015614c675783516152a8816141c3565b825260209384019390910190615295565b8a81526001600160a01b038a1660208083019190915260408083018b905260608084018b9052893560808501529189013560a084015288013560c0830152610240820190880135615309816141c3565b6001600160a01b031660e0830152608088013561532581614aba565b63ffffffff1661010083015260a088013561533f81614393565b151561012083015260ff61535560c08a016143a0565b1661014083015260e0880135610160830152610100909701356101808201526101a08101959095526101c08501939093526101e08401919091526102008301526001600160a01b031661022090910152949350505050565b5f602082840312156153bd575f5ffd5b81356122ed81614aba565b84815260a081016153e6602083018680518252602090810151910152565b60608201939093526080015292915050565b5f60a0828403128015615409575f5ffd5b506154126142da565b825181526020808401519082015260408084015190820152606080840151908201526080928301519281019290925250919050565b8183525f6001600160fb1b0383111561545e575f5ffd5b8260051b80836020870137939093016020019392505050565b89815288602082015260e08860408301376101806101208201525f6154a16101808301888a615447565b8281036101408401526154b5818789614cd5565b90508281036101608401526154cb818587614cd5565b9c9b505050505050505050505050565b5f602082840312156154eb575f5ffd5b81516001600160401b03811115615500575f5ffd5b61228b84828501614d22565b5f5f8335601e19843603018112615521575f5ffd5b83016020810192503590506001600160401b0381111561553f575f5ffd5b80360382131561195e575f5ffd5b8881526101e060208201525f5f89359050806101e08401525060e060208a01610200840137610100890135601e198a3603018112615589575f5ffd5b89016020810190356001600160401b038111156155a4575f5ffd5b8060051b36038213156155b5575f5ffd5b6101806102e08501526155cd61036085018284615447565b9150506155de6101208b018b61550c565b8483036101df19016103008601526155f7838284614cd5565b925050506156096101408b018b61550c565b8483036101df1901610320860152615622838284614cd5565b925050506156346101608b018b61550c565b8483036101df190161034086015261564d838284614cd5565b93505050506156ac60408301898051825260208101516020830152604081015160408301526060810151606083015260808101511515608083015260a0810151151560a083015260c081015160c083015260e081015160e08301525050565b6001600160a01b039687166101408301529486166101608201529285166101808401529084166101a08301529092166101c0909201919091529392505050565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215615710575f5ffd5b81516122ed81614393565b5f6002841061572c5761572c614c71565b838252604060208301528251604083015260208301516060830152604083015180516080840152602081015160a084015250606083015160c08084015261577761010084018261485a565b6080850151848203603f190160e08601528051808352602091820193505f9291909101905b808310156157bf578351825260208201915060208401935060018301925061579c565b509695505050505050565b6157e58282518051825260209081015163ffffffff16910152565b60208101516158086040840182518051825260209081015163ffffffff16910152565b602081810151805160808601529081015163ffffffff1660a0850152506040810151805160c0850152602081015163ffffffff1660e085015250606001518051610100840152602081015163ffffffff166101208401526130dd565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260018060a01b0360a08201511660a083015260c081015160c083015260e08101516130dd60e084018280518252602090810151910152565b6158e38282518051825260209081015163ffffffff16910152565b6020810151805160408401526020810151606084015260408101516080840152606081015160a084015250604081015161592060c08401826157ca565b506060810151615934610200840182615864565b50608081015161032083015260a0015161034090910152565b5f6104a0820190506159608285516158c8565b602084810151610360840152604085015161038084015260608501516103a084015260808501516103c084015260a0850151805115156103e08501520151151561040083015260c084015161042083015260e08401516001600160a01b03166104408301526101009093015167ffffffffffffffff1916610460820152610480015290565b81810381811115611729576117296151b9565b5f5f85851115615a06575f5ffd5b83861115615a12575f5ffd5b5050820193919092039150565b80356020831015611729575f19602084900360031b1b1692915050565b634e487b7160e01b5f52601260045260245ffd5b5f82615a5e57615a5e615a3c565b500690565b5f61012082018a83528960208401528860408401528760608401526101206080840152808751808352610140850191506020890192505f5b81811015615ae457835180511515845260ff6020820151166020850152604081015160408501526060810151606085015250608083019250602084019350600181019050615a9b565b505060a084018790528551151560c08501526020860151151560e08501529150615b0b9050565b826101008301529998505050505050505050565b5f82615b2d57615b2d615a3c565b500490565b8082028115828204841417611729576117296151b9565b5f600160ff1b8201615b5d57615b5d6151b9565b505f0390565b600181811c90821680615b7757607f821691505b60208210810361427657634e487b7160e01b5f52602260045260245ffdfecc2bde3d21ba778aa5c156bb6fc47381978b0054c8a1ef73f44234164324cbe1cc2bde3d21ba778aa5c156bb6fc47381978b0054c8a1ef73f44234164324cbe2cc2bde3d21ba778aa5c156bb6fc47381978b0054c8a1ef73f44234164324cbe0a26469706673582212206192a99fdb925ffcfa2049acf47ccde7aeb0acad64b610de0dba1a212f20b1a264736f6c634300081b003360a060405234801561000f575f5ffd5b5060405161125e38038061125e83398101604081905261002e9161009c565b3330838360405161003e9061008f565b6001600160a01b03948516815293909216602084015260408301526060820152608001604051809103905ff08015801561007a573d5f5f3e3d5ffd5b506001600160a01b0316608052506100be9050565b610bfe8061066083390190565b5f5f604083850312156100ad575f5ffd5b505080516020909101519092909150565b6080516105856100db5f395f8181603d015260a301526105855ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c8063bffa7f0f14610038578063c96be4cb1461007c575b5f5ffd5b61005f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61008f61008a3660046102af565b61009f565b6040519015158152602001610073565b5f337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0381168214610102576040516344c1f74f60e01b81526001600160a01b0392831660048201529116602482015260440160405180910390fd5b50505f826001600160a01b031663504d080b6040518163ffffffff1660e01b81526004015f60405180830381865afa158015610140573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610167919081019061033f565b90505f5b815181101561028e575f5f838381518110610188576101886104b8565b60200260200101515f01516001600160a01b03168484815181106101ae576101ae6104b8565b6020026020010151602001516040516101c791906104cc565b5f604051808303815f865af19150503d805f8114610200576040519150601f19603f3d011682016040523d82523d5f602084013e610205565b606091505b509150915081610284577f606461c3c22ef5d2f9fa14ff2480c0ec357ce58718c1b2d6f360f603b14cb3e5848481518110610242576102426104b8565b60200260200101515f015185858151811061025f5761025f6104b8565b6020026020010151602001518360405161027b93929190610510565b60405180910390a15b505060010161016b565b5060019392505050565b6001600160a01b03811681146102ac575f5ffd5b50565b5f602082840312156102bf575f5ffd5b81356102ca81610298565b9392505050565b634e487b7160e01b5f52604160045260245ffd5b6040805190810167ffffffffffffffff81118282101715610308576103086102d1565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610337576103376102d1565b604052919050565b5f6020828403121561034f575f5ffd5b815167ffffffffffffffff811115610365575f5ffd5b8201601f81018413610375575f5ffd5b805167ffffffffffffffff81111561038f5761038f6102d1565b8060051b61039f6020820161030e565b918252602081840181019290810190878411156103ba575f5ffd5b6020850192505b838310156104ad57825167ffffffffffffffff8111156103df575f5ffd5b85016040818a03601f190112156103f4575f5ffd5b6103fc6102e5565b602082015161040a81610298565b8152604082015167ffffffffffffffff811115610425575f5ffd5b60208184010192505089601f83011261043c575f5ffd5b815167ffffffffffffffff811115610456576104566102d1565b610469601f8201601f191660200161030e565b8181528b602083860101111561047d575f5ffd5b8160208501602083015e5f60208383010152806020840152505080845250506020820191506020830192506103c1565b979650505050505050565b634e487b7160e01b5f52603260045260245ffd5b5f82518060208501845e5f920191825250919050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03841681526060602082018190525f90610533908301856104e2565b828103604084015261054581856104e2565b969550505050505056fea2646970667358221220e0b4ce160ea027fb9511ea7c47fb6694fe2bee4d04405cb4a423ed9665cd733f64736f6c634300081b0033610100604052348015610010575f5ffd5b50604051610bfe380380610bfe83398101604081905261002f916100e2565b608082905260a08190528181610046600282610127565b60805160a0519091821161007b576040516365424f5b60e11b8152600481019290925260248201526044015b60405180910390fd5b505060a05160805190808211156100ae5760405163103804ad60e11b815260048101929092526024820152604401610072565b5050506001600160a01b0394851660c0525050501660e052610146565b6001600160a01b03811681146100df575f5ffd5b50565b5f5f5f5f608085870312156100f5575f5ffd5b8451610100816100cb565b6020860151909450610111816100cb565b6040860151606090960151949790965092505050565b5f8261014157634e487b7160e01b5f52601260045260245ffd5b500490565b60805160a05160c05160e051610a556101a95f395f818160e201528181610197015261086b01525f818161027d015281816102a1015281816102c8015261058501525f8181610173015261081f01525f8181610243015261048e0152610a555ff3fe608060405234801561000f575f5ffd5b50600436106100b1575f3560e01c8063a97f36a81161006e578063a97f36a8146101ce578063b59c46fb146101d6578063c9e525df1461023e578063d11eb2b214610265578063d15db8b414610278578063de7b5d141461029f575f5ffd5b80630d61b519146100b55780635db93dfa146100dd57806362c69d721461011c578063693f917e1461016e5780636c1032af146101955780636dd7d8ea146101bb575b5f5ffd5b6100c86100c33660046108d7565b6102c5565b60405190151581526020015b60405180910390f35b6101047f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100d4565b61016061012a366004610905565b6001600160a01b038084165f90815260208181526040808320868452825280832093851683526002909301905220549392505050565b6040519081526020016100d4565b6101607f000000000000000000000000000000000000000000000000000000000000000081565b7f0000000000000000000000000000000000000000000000000000000000000000610104565b6100c86101c9366004610944565b610582565b610160600581565b6102196101e4366004610966565b5f602081815292815260408082209093529081522080546001909101546001600160a01b03811690600160a01b900460ff1683565b604080519384526001600160a01b0390921660208401521515908201526060016100d4565b6101607f000000000000000000000000000000000000000000000000000000000000000081565b6101606102733660046108d7565b610819565b6101047f000000000000000000000000000000000000000000000000000000000000000081565b7f0000000000000000000000000000000000000000000000000000000000000000610104565b5f7f0000000000000000000000000000000000000000000000000000000000000000806001600160a01b0381163b61032157604051635fa9262560e01b81526001600160a01b0390911660048201526024015b60405180910390fd5b505f8190505f816001600160a01b031663d8e3784c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610363573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103879190610990565b90505f61039382610819565b90508086106103b55760405163117e3a7760e31b815260040160405180910390fd5b806103c16005886109a7565b1015868290916103ed5760405163c3d7aa4f60e01b815260048101929092526024820152604401610318565b50506001600160a01b0384165f90815260208181526040808320898452909152902060018101548790600160a01b900460ff16156104415760405163058240ed60e31b815260040161031891815260200190565b5060018101546001600160a01b031661046d57604051630b560ca160e11b815260040160405180910390fd5b60018101546001600160a01b03165f908152600282016020526040902054807f0000000000000000000000000000000000000000000000000000000000000000808210156104d7576040516357d5327960e11b815260048101929092526024820152604401610318565b505060018201805460ff60a01b198116600160a01b1790915560405189916001600160a01b0316907f7bfd03e44f31b1867e10c41d419cd8073b4719d321ccc5c3a3c79ac2babab3c3905f90a3600182015461053b906001600160a01b031661084a565b60018301546001600160a01b031690610573576040516323653eff60e21b81526001600160a01b039091166004820152602401610318565b50600198975050505050505050565b5f7f0000000000000000000000000000000000000000000000000000000000000000806001600160a01b0381163b6105d957604051635fa9262560e01b81526001600160a01b039091166004820152602401610318565b505f8190505f816001600160a01b031663d8e3784c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561061b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061063f9190610990565b90505f61064b82610819565b6001600160a01b0385165f9081526020818152604080832084845290915290208054919250908311839061069557604051631d30a86560e11b815260040161031891815260200190565b505f846001600160a01b0316633b10244b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106d3573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f791906109c6565b905033816001600160a01b038116821461073757604051633a8db46b60e21b81526001600160a01b03928316600482015291166024820152604401610318565b50506001600160a01b0388165f90815260028301602052604081208054600192906107639084906109a7565b909155505083825560018201546001600160a01b038981169116148015906107b1575060018201546001600160a01b039081165f90815260028401602052604080822054928b168252902054115b156107d4576001820180546001600160a01b0319166001600160a01b038a161790555b604051339084906001600160a01b038b16907f75b35ca960bbb2cc550471a4098b1a96255dd657fe926e331754cd7c2e4489b3905f90a4506001979650505050505050565b5f6108447f0000000000000000000000000000000000000000000000000000000000000000836109e1565b92915050565b60405163c96be4cb60e01b81526001600160a01b0382811660048301525f917f00000000000000000000000000000000000000000000000000000000000000009091169063c96be4cb906024016020604051808303815f875af11580156108b3573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108449190610a00565b5f602082840312156108e7575f5ffd5b5035919050565b6001600160a01b0381168114610902575f5ffd5b50565b5f5f5f60608486031215610917575f5ffd5b8335610922816108ee565b9250602084013591506040840135610939816108ee565b809150509250925092565b5f60208284031215610954575f5ffd5b813561095f816108ee565b9392505050565b5f5f60408385031215610977575f5ffd5b8235610982816108ee565b946020939093013593505050565b5f602082840312156109a0575f5ffd5b5051919050565b8082018082111561084457634e487b7160e01b5f52601160045260245ffd5b5f602082840312156109d6575f5ffd5b815161095f816108ee565b5f826109fb57634e487b7160e01b5f52601260045260245ffd5b500490565b5f60208284031215610a10575f5ffd5b8151801515811461095f575f5ffdfea26469706673582212204838813da06d4fbfd765ccdd6e92a794393c9c4e3bbaaf6f086a05baeccf838b64736f6c634300081b003360e060405234801561000f575f5ffd5b50604051610a14380380610a1483398101604081905261002e9161006f565b6001600160a01b0380841660a052841660c05261004b81836100b4565b608052506100dd92505050565b6001600160a01b038116811461006c575f5ffd5b50565b5f5f5f5f60808587031215610082575f5ffd5b845161008d81610058565b602086015190945061009e81610058565b6040860151606090960151949790965092505050565b80820281158282048414176100d757634e487b7160e01b5f52601160045260245ffd5b92915050565b60805160a05160c0516108dd6101375f395f818161016a015281816101fb0152818161046b015261065e01525f81816101a9015281816102e001526103ab01525f818160e001528181610248015261053e01526108dd5ff3fe608060405234801561000f575f5ffd5b50600436106100b1575f3560e01c80639611c5c21161006e5780639611c5c2146101a4578063b6b55f25146101cb578063c60d588d146101de578063f8fd9795146101f1578063fc0c546a146101f9578063fc7e286d1461021f575f5ffd5b806308b4af71146100b55780630d5e5fff146100db5780631c87b6ac146101025780632c865e301461011757806352df49ec1461012a57806382bfefc814610165575b5f5ffd5b6100c86100c33660046107e4565b61023e565b6040519081526020015b60405180910390f35b6100c87f000000000000000000000000000000000000000000000000000000000000000081565b61011561011036600461080e565b6102d5565b005b61011561012536600461080e565b6103a0565b610150610138366004610836565b600160208190525f9182526040909120805491015482565b604080519283526020830191909152016100d2565b61018c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100d2565b61018c7f000000000000000000000000000000000000000000000000000000000000000081565b6101156101d9366004610856565b61045e565b6101156101ec366004610856565b6104ef565b6101156105bf565b7f000000000000000000000000000000000000000000000000000000000000000061018c565b6100c861022d366004610836565b5f6020819052908152604090205481565b5f6102728361026d7f000000000000000000000000000000000000000000000000000000000000000042610881565b111590565b1561027e57505f6102cf565b6001600160a01b0382165f90815260208181526040808320546001928390529220015484106102cc576001600160a01b0383165f908152600160205260409020546102c99082610894565b90505b90505b92915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016811461033057604051632ac332c160e01b81526001600160a01b0390911660048201526024015b60405180910390fd5b506001600160a01b0382165f9081526020819052604081208054839290610358908490610894565b90915550506040518181526001600160a01b038316907f8c2455f4b82f1285751e0f21f0cda7612aa81cf700ab606c3e2250253ff1e400906020015b60405180910390a25050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681146103f657604051632ac332c160e01b81526001600160a01b039091166004820152602401610327565b506001600160a01b0382165f908152602081905260408120805483929061041e908490610881565b90915550506040518181526001600160a01b038316907f6567969aa8387adeedb0b23fd1b47a09157bfb8fdb2a11e8b1c03b8b0e78b48f90602001610394565b6104936001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846106ba565b335f90815260208190526040812080548392906104b1908490610881565b909155505060405181815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c906020015b60405180910390a250565b335f908152602081905260409020548180821015610529576040516309b8b78960e01b815260048101929092526024820152604401610327565b505060405180604001604052808281526020017f0000000000000000000000000000000000000000000000000000000000000000426105689190610881565b9052335f818152600160208181526040928390208551815594015193018390555190917f9d22371eec6fd87e081855b42b28f152e79799fa5a89bf4e30f8acf26d29ed95916104e491858252602082015260400190565b335f90815260016020818152604092839020835180850190945280548452909101549082018190524290808210156106135760405163b32ab8a760e01b815260048101929092526024820152604401610327565b5050335f908152600160208181526040808420848155909201839055835190839052908220805491929091610649908490610894565b90915550508051610686906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016903390610727565b805160405190815233907fa5b1c510c6d1fc318ad8a59c08331317c170ad7f42e0bff2ece9b32d0feb6859906020016104e4565b6040516001600160a01b0384811660248301528381166044830152606482018390526107219186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061075d565b50505050565b6040516001600160a01b0383811660248301526044820183905261075891859182169063a9059cbb906064016106ef565b505050565b5f5f60205f8451602086015f885af18061077c576040513d5f823e3d81fd5b50505f513d915081156107935780600114156107a0565b6001600160a01b0384163b155b1561072157604051635274afe760e01b81526001600160a01b0385166004820152602401610327565b80356001600160a01b03811681146107df575f5ffd5b919050565b5f5f604083850312156107f5575f5ffd5b82359150610805602084016107c9565b90509250929050565b5f5f6040838503121561081f575f5ffd5b610828836107c9565b946020939093013593505050565b5f60208284031215610846575f5ffd5b61084f826107c9565b9392505050565b5f60208284031215610866575f5ffd5b5035919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156102cf576102cf61086d565b818103818111156102cf576102cf61086d56fea26469706673582212209c08578d48e2ad0325f8c85f7600f0e9de6f6312630e1e7913cbe82c7e0b8c2164736f6c634300081b0033610100604052610010600180610375565b5f555f600355348015610021575f5ffd5b50604051610f77380380610f7783398101604081905261004091610388565b6001600160a01b03821660805260a081905261005d8160026104a2565b60c05261006b600182610099565b60a05160c0515f8054815260026020526040902061008e92909160019190610142565b60e0525061055c9050565b5f8080526020839052604081205560015b81811161013d5761011d835f6100c16001856104b4565b81526020019081526020015f2054845f015f6001856100e091906104b4565b81526020019081526020015f2054604051602001610108929190918252602082015260400190565b60408051601f1981840301815291905261029b565b5f8281526020859052604090205580610135816104c7565b9150506100aa565b505050565b83545f908082036101625750505f82815260208490526040902054610293565b8281036101805750505f828152600185016020526040902054610293565b5f61018c6001836104b4565b90505f61019882610336565b5f81815260018a01602052604090205490915082821c825b8881101561028a57600180831614801561024f575f82815260018d01602052604090205484900361021c5760405162461bcd60e51b81526020600482015260126024820152714d697374616b65732077657265206d61646560701b604482015260640160405180910390fd5b5f82815260018d0160209081526040918290205482519182015290810185905261024890606001610108565b935061027d565b5f82815260208c815260409182902054915161027a9261010892889201918252602082015260400190565b93505b50600191821c91016101b0565b50909450505050505b949350505050565b6040805160018082528183019092525f91602082018180368337019050506002836040516102c991906104f6565b602060405180830381855afa1580156102e4573d5f5f3e3d5ffd5b5050506040513d601f19601f820116820180604052508101906103079190610501565b604051602001610318929190610518565b60405160208183030381529060405261033090610536565b92915050565b5f80825b8060011660010361035a578161034f816104c7565b92505060011c61033a565b5092915050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561033057610330610361565b5f5f60408385031215610399575f5ffd5b82516001600160a01b03811681146103af575f5ffd5b6020939093015192949293505050565b6001815b60018411156103fa578085048111156103de576103de610361565b60018416156103ec57908102905b60019390931c9280026103c3565b935093915050565b5f8261041057506001610330565b8161041c57505f610330565b8160018114610432576002811461043c57610458565b6001915050610330565b60ff84111561044d5761044d610361565b50506001821b610330565b5060208310610133831016604e8410600b841016171561047b575081810a610330565b6104875f1984846103bf565b805f190482111561049a5761049a610361565b029392505050565b5f6104ad8383610402565b9392505050565b8181038181111561033057610330610361565b5f600182016104d8576104d8610361565b5060010190565b5f81518060208401855e5f93019283525090919050565b5f6104ad82846104df565b5f60208284031215610511575f5ffd5b5051919050565b5f61052382856104df565b60ff199390931683525050601f01919050565b80516020808301519190811015610556575f198160200360031b1b821691505b50919050565b60805160a05160c05160e0516109c56105b25f395f6103ed01525f8181610240015281816102920152818161044b01526104d701525f818161042a01526104b601525f8181610101015261038c01526109c55ff3fe608060405234801561000f575f5ffd5b506004361061007a575f3560e01c80637a508022116100585780637a508022146100d557806387351813146100f45780639611c5c2146100fc5780639b24b3b01461013b575f5ffd5b8063086dc8d41461007e5780631f6d510b1461009a578063483f31ab146100c2575b5f5ffd5b61008760035481565b6040519081526020015b60405180910390f35b6100ad6100a8366004610813565b61014e565b60408051928352602083019190915201610091565b6100876100d036600461088b565b610380565b6100876100e336600461088b565b60026020525f908152604090205481565b6100875f5481565b6101237f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610091565b61008761014936600461088b565b6104a1565b82515f9081907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000008111156101a1576040516353bb503760e11b815260040161019891815260200190565b60405180910390fd5b50837f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000008111156101e7576040516311d1480560e21b815260040161019891815260200190565b50827f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000081111561022d57604051633b379f8b60e21b815260040161019891815260200190565b505f8054815260026020526040902080547f00000000000000000000000000000000000000000000000000000000000000000361028b5760015f5f82825461027591906108b6565b90915550505f8054815260026020526040902090505b5f815f01547f000000000000000000000000000000000000000000000000000000000000000060015f546102bf91906108c9565b6102c991906108dc565b6102d391906108b6565b6040805160e0810182523360a082019081524660c08301528152602081018a905290810188905260608101879052608081018290529091505f610315826104fb565b9050610321848261057d565b5060038054905f610331836108f3565b9190505550805f547f1f0faf82fa8c7b10dd392417c6976d0ed764deb80fb07211d5928c2944ddb80d8560405161036a91815260200190565b60405180910390a3989197509095505050505050565b5f336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103ca5760405163e5336a6b60e01b815260040160405180910390fd5b5f5482106103eb5760405163c490199960e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001831115610472575f83815260026020526040902061046f9060017f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006105fe565b90505b5f5461047f8460016108b6565b0361049b5760015f5f82825461049591906108b6565b90915550505b92915050565b5f81815260026020526040812061049b9060017f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006105fe565b5f61049b825f0151836020015184604001518560600151866080015160405160200161056995949392919085516001600160a01b03168152602095860151868201528451604082015293909401516060840152608083019190915260a082015260c081019190915260e00190565b604051602081830303815290604052610753565b81545f908161058b826107e8565b9050835f5b828110156105ce575f818152600188016020908152604091829020548251918201529081018390526105c490606001610569565b9150600101610590565b505f828152600187016020526040812082905586549087906105ef836108f3565b90915550929695505050505050565b83545f9080820361061e5750505f8281526020849052604090205461074b565b82810361063c5750505f82815260018501602052604090205461074b565b5f6106486001836108c9565b90505f610654826107e8565b5f81815260018a01602052604090205490915082821c825b88811015610742576001808316148015610707575f82815260018d0160205260409020548490036106d45760405162461bcd60e51b81526020600482015260126024820152714d697374616b65732077657265206d61646560701b6044820152606401610198565b5f82815260018d0160209081526040918290205482519182015290810185905261070090606001610569565b9350610735565b5f82815260208c81526040918290205491516107329261056992889201918252602082015260400190565b93505b50600191821c910161066c565b50909450505050505b949350505050565b6040805160018082528183019092525f91602082018180368337019050506002836040516107819190610922565b602060405180830381855afa15801561079c573d5f5f3e3d5ffd5b5050506040513d601f19601f820116820180604052508101906107bf9190610934565b6040516020016107d092919061094b565b60405160208183030381529060405261049b90610969565b5f80825b8060011660010361080c5781610801816108f3565b92505060011c6107ec565b5092915050565b5f5f5f8385036080811215610826575f5ffd5b6040811215610833575f5ffd5b506040516040810181811067ffffffffffffffff8211171561086357634e487b7160e01b5f52604160045260245ffd5b6040908152853582526020808701359083015290969085013595506060909401359392505050565b5f6020828403121561089b575f5ffd5b5035919050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561049b5761049b6108a2565b8181038181111561049b5761049b6108a2565b808202811582820484141761049b5761049b6108a2565b5f60018201610904576109046108a2565b5060010190565b5f81518060208401855e5f93019283525090919050565b5f61092d828461090b565b9392505050565b5f60208284031215610944575f5ffd5b5051919050565b5f610956828561090b565b60ff199390931683525050601f01919050565b80516020808301519190811015610989575f198160200360031b1b821691505b5091905056fea26469706673582212200b74a09c624bef4d3dcfcbeab253cdf2cfebf78a57220e8d08ccfd5988cbff7264736f6c634300081b003360a060405234801561000f575f5ffd5b50604051610a36380380610a3683398101604081905261002e9161003f565b6001600160a01b031660805261006c565b5f6020828403121561004f575f5ffd5b81516001600160a01b0381168114610065575f5ffd5b9392505050565b60805161099e6100985f395f818160f201528181610130015281816101e50152610276015261099e5ff3fe608060405234801561000f575f5ffd5b5060043610610055575f3560e01c80632249f653146100595780633d96c2c9146100865780637fb349671461009b57806384f15db2146100ae5780639611c5c2146100ed575b5f5ffd5b61006c6100673660046106b1565b61012c565b604080519283526020830191909152015b60405180910390f35b6100996100943660046106c8565b6101da565b005b6100996100a93660046106f1565b610274565b6100dd6100bc36600461078a565b5f918252602082815260408084209284526002909201905290205460ff1690565b604051901515815260200161007d565b6101147f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161007d565b5f5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b67d057b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561018a573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101ae91906107aa565b8311156101bf57505f928392509050565b50505f90815260208190526040902080546001909101549091565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102235760405163164a486160e11b815260040160405180910390fd5b5f83815260208181526040918290208481556001018390559051828152839185917fd3fab397eb3e47fb43090430543ca9623e09aeddf27bfde1bf7bdca871ee9ebc910160405180910390a3505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b67d057b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102d0573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102f491906107aa565b841115849061032257604051630e194a6d60e01b815260040161031991815260200190565b60405180910390fd5b5061033360608601604087016107dc565b6001600160a01b0316331461034e60608701604088016107dc565b339091610381576040516357aad58160e01b81526001600160a01b03928316600482015291166024820152604401610319565b5050466060860135146103a7576040516315dfb1f160e21b815260040160405180910390fd5b5f848152602081905260409020805485816103d857604051635228479160e11b815260040161031991815260200190565b505f8581526002830160205260409020548690869060ff161561041757604051633f5c70b560e21b815260048101929092526024820152604401610319565b5050600182015480848082111561044a57604051631206f36760e21b815260048101929092526024820152604401610319565b505f9050610465610460368b90038b018b610860565b6104d9565b90506104748686838a8761053b565b5f87815260028501602052604090819020805460ff1916600117905551819084908a907f34bc3301c4660a5642d2246e175e7fea498c94258d39dcaa555a52464dbb083d906104c6908c815260200190565b60405180910390a4505050505050505050565b80516020808301516040808501518151855181860152948401519185019190915281516001600160a01b03166060850152910151608083015260a08201525f906105359060c0015b60405160208183030381529060405261061c565b92915050565b82825f5b868110156105d4576001808316148061058e57610589848a8a85818110610568576105686108ee565b90506020020135604051602001610521929190918252602082015260400190565b6105c5565b6105c58989848181106105a3576105a36108ee565b9050602002013585604051602001610521929190918252602082015260400190565b935050600191821c910161053f565b508282868682841461060f57604051635f216bf160e01b81526004810194909452602484019290925260448301526064820152608401610319565b5050505050505050505050565b6040805160018082528183019092525f916020820181803683370190505060028360405161064a9190610919565b602060405180830381855afa158015610665573d5f5f3e3d5ffd5b5050506040513d601f19601f8201168201806040525081019061068891906107aa565b604051602001610699929190610924565b60405160208183030381529060405261053590610942565b5f602082840312156106c1575f5ffd5b5035919050565b5f5f5f606084860312156106da575f5ffd5b505081359360208301359350604090920135919050565b5f5f5f5f5f858703610100811215610707575f5ffd5b60a0811215610714575f5ffd5b5085945060a0850135935060c0850135925060e085013567ffffffffffffffff81111561073f575f5ffd5b8601601f8101881361074f575f5ffd5b803567ffffffffffffffff811115610765575f5ffd5b8860208260051b8401011115610779575f5ffd5b959894975092955050506020019190565b5f5f6040838503121561079b575f5ffd5b50508035926020909101359150565b5f602082840312156107ba575f5ffd5b5051919050565b80356001600160a01b03811681146107d7575f5ffd5b919050565b5f602082840312156107ec575f5ffd5b6107f5826107c1565b9392505050565b6040516060810167ffffffffffffffff8111828210171561082b57634e487b7160e01b5f52604160045260245ffd5b60405290565b6040805190810167ffffffffffffffff8111828210171561082b57634e487b7160e01b5f52604160045260245ffd5b5f81830360a081128015610872575f5ffd5b5061087b6107fc565b6040821215610888575f5ffd5b610890610831565b843581526020808601359082015281526040603f19830112156108b1575f5ffd5b6108b9610831565b91506108c7604085016107c1565b82526060840135602080840191909152810191909152608090920135604083015250919050565b634e487b7160e01b5f52603260045260245ffd5b5f81518060208401855e5f93019283525090919050565b5f6107f58284610902565b5f61092f8285610902565b60ff199390931683525050601f01919050565b80516020808301519190811015610962575f198160200360031b1b821691505b5091905056fea264697066735822122090809c26d1f2bd1f0cd78ddbebcd175f4c3235554fb2b2cb4547bf80bfb8c03264736f6c634300081b00336080604052348015600e575f5ffd5b506101578061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c8063ea50d0e41461002d575b5f5ffd5b61004561003b366004610059565b6001949350505050565b604051901515815260200160405180910390f35b5f5f5f5f6040858703121561006c575f5ffd5b843567ffffffffffffffff811115610082575f5ffd5b8501601f81018713610092575f5ffd5b803567ffffffffffffffff8111156100a8575f5ffd5b8760208284010111156100b9575f5ffd5b60209182019550935085013567ffffffffffffffff8111156100d9575f5ffd5b8501601f810187136100e9575f5ffd5b803567ffffffffffffffff8111156100ff575f5ffd5b8760208260051b8401011115610113575f5ffd5b94979396506020019450505056fea2646970667358221220b347706a3dc7f76b5cbd0f02b652482a8592c3334d7013c40fe86559709bd69964736f6c634300081b0033",
        "sourceMap": "2571:33232:22:-:0;;;3624:28;;;-1:-1:-1;;3624:28:22;3648:4;3624:28;;;4340:1923;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4621:13;4642:7;:20;;;4670:7;:22;;;4700:7;:25;;;4733:7;:25;;;4766:7;:26;;;4800:7;:27;;;4584:5;3328:431:13;;;;;;;;;;;;;-1:-1:-1;;;3328:431:13;;;;;;;;;;;;;;;;-1:-1:-1;;;3328:431:13;;;3401:45;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;3467:51;:7;3501:16;3467:33;:51::i;:::-;3456:62;;3542:22;;;;;;;;;;3528:36;;3591:25;;;;;;3574:42;;3644:13;3627:30;;3692:23;4226:11;;4239:14;;4204:80;;;2079:95;4204:80;;;7671:25:66;7712:18;;;7705:34;;;;7755:18;;;7748:34;4255:13:13;7798:18:66;;;7791:34;4278:4:13;7841:19:66;;;7834:61;4168:7:13;;7643:19:66;;4204:80:13;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;3692:23;3667:48;;-1:-1:-1;;3747:4:13;3725:27;;-1:-1:-1;;;;;1273:26:1;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:1;;1350:1;1322:31;;;2605:51:66;2578:18;;1322:31:1;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1896:44:23;;;;1966:15;464:31:45;650:32;688:18;:34;;;728:19;:36;;;2020:19:23;2057:12;2020:50;;2076:15;2106;2123:10;2094:40;;;;;:::i;:::-;2841:25:66;;;2897:2;2882:18;;2875:34;2829:2;2814:18;2094:40:23;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2140:80:23;;-1:-1:-1;;;2140:80:23;;-1:-1:-1;;;;;3223:32:66;;;2140:80:23;;;3205:51:66;3272:18;;;3265:34;;;3315:18;;;3308:34;;;3378:32;;3358:18;;;3351:60;2076:58:23;;-1:-1:-1;2140:10:23;;:21;;3177:19:66;;2140:80:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1890:335;;1679:546;;;;;;;4861:15:22::2;-1:-1:-1::0;;;;;4842:34:22::2;;;-1:-1:-1::0;;;;;4842:34:22::2;;;::::0;::::2;4903:18;-1:-1:-1::0;;;;;4882:39:22::2;;;-1:-1:-1::0;;;;;4882:39:22::2;;;::::0;::::2;4935:15;-1:-1:-1::0;;;;;4935:26:22::2;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4927:36:22::2;;::::0;;;5050:25;;5077:26:::2;::::0;::::2;::::0;4995:114:::2;::::0;5043:4:::2;::::0;5050:25;5077:26;4995:114:::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;;;;;3974:32:66;;;3956:51;;4043:32;;;;4038:2;4023:18;;4016:60;4107:2;4092:18;;4085:34;4150:2;4135:18;;4128:34;3943:3;3928:19;4995:114:22::2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;4969:140:22::2;;::::0;5138:63:::2;::::0;5156:4:::2;::::0;2654:1:33::2;::::0;5138:63:22::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;;;;;4365:32:66;;;4347:51;;4429:2;4414:18;;4407:34;4335:2;4320:18;5138:63:22::2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;5115:88:22::2;;::::0;5234:25:::2;::::0;5253:4:::2;::::0;5234:25:::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;;;;;2623:32:66;;;2605:51;;2593:2;2578:18;5234:25:22::2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;5209:52:22::2;;::::0;5277:1:::2;5267:11;::::0;5306:12:::2;5284:34;::::0;5353:43:::2;::::0;::::2;::::0;5324:72:::2;::::0;5421:22;::::2;:26:::0;;5403:44:::2;::::0;-1:-1:-1;5487:18:22;::::2;::::0;::::2;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;5454:30:22;:51;;-1:-1:-1;;;;;;5454:51:22::2;-1:-1:-1::0;;;;;5454:51:22;;;::::2;::::0;;;::::2;::::0;;5511:22;:36;;;5553;:64;;;5669:344:::2;::::0;;5697:165;;;;;-1:-1:-1;5669:344:22::2;::::0;;::::2;5697:165:::0;;;::::2;::::0;;;;;;;;;;;;;;;;;;5454:51:::2;5697:165:::0;;;;;5669:344;;;5732:76:33::2;5697:165:22;5669:344:::0;;::::2;::::0;;;5598:77:33::2;5669:344:22::0;;;;;;-1:-1:-1;5669:344:22;;;;;;5645:21;;;5454:11:::2;5645:21:::0;;:368;;;;:21;:368;;;::::2;::::0;;;;;::::2;::::0;;;;;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;;;6051:207;;6082:40;;;;;6102:6:::2;6051:207:::0;;::::2;6082:40:::0;;;-1:-1:-1;6082:40:22;;;;;;;6051:207;;;6136:85;;;;::::2;::::0;;6156:13:::2;6136:85:::0;;6180:39;;-1:-1:-1;;;6180:39:22;;2623:32:66;5511:22:22::2;6180:39:::0;::::2;2605:51:66::0;6051:207:22;;-1:-1:-1;;;;6136:85:22;;;::::2;::::0;6180:12:::2;::::0;:27:::2;::::0;2578:18:66;;6180:39:22::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6136:85:::0;;6051:207;;2834:1:::2;6051:207;::::0;;::::2;::::0;6019:239;;;;:29;:239;;::::2;::::0;;;;;::::2;::::0;;;;;::::2;::::0;;;::::2;;::::0;;;-1:-1:-1;2571:33232:22;;-1:-1:-1;;;;;;2571:33232:22;2887:340:10;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;:20::i;:::-;3050:27;;;;3006:215;3134:5;3108:46;3149:5;3134;3108:46;:::i;:::-;-1:-1:-1;1390:66:10;;-1:-1:-1;3006:215:10;2887:340;;;;:::o;2912:187:1:-;3004:6;;;-1:-1:-1;;;;;3020:17:1;;;-1:-1:-1;;;;;;3020:17:1;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;1708:286:10:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:10;;;;;;;;:::i;1836:72::-;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:10:o;2571:33232:22:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:148:66:-;-1:-1:-1;;;;;106:31:66;;96:42;;86:70;;152:1;149;142:12;86:70;14:148;:::o;167:127::-;228:10;223:3;219:20;216:1;209:31;259:4;256:1;249:15;283:4;280:1;273:15;299:2155;516:6;524;532;540;548;556;564;608:9;599:7;595:23;638:3;634:2;630:12;627:32;;;655:1;652;645:12;627:32;687:9;681:16;706:48;748:5;706:48;:::i;:::-;823:2;808:18;;802:25;773:5;;-1:-1:-1;836:50:66;802:25;836:50;:::i;:::-;957:2;942:18;;936:25;905:7;;-1:-1:-1;970:50:66;936:25;970:50;:::i;:::-;1112:2;1097:18;;1091:25;1208:3;1193:19;;1187:26;1284:3;1269:19;;1263:26;1039:7;;-1:-1:-1;1091:25:66;;-1:-1:-1;1187:26:66;-1:-1:-1;1298:50:66;1263:26;1298:50;:::i;:::-;1367:7;-1:-1:-1;1409:4:66;-1:-1:-1;;1390:17:66;;1386:28;1383:48;;;1427:1;1424;1417:12;1383:48;-1:-1:-1;1460:2:66;1454:9;1502:4;1490:17;;-1:-1:-1;;;;;1522:34:66;;1558:22;;;1519:62;1516:88;;;1584:18;;:::i;:::-;1620:2;1613:22;;;1701:3;1686:19;;;1680:26;1715:23;;1804:4;1789:20;;1783:27;1838:2;1826:15;;1819:32;1917:3;1902:19;;1896:26;1938:15;;;1931:32;;;;2029:3;2014:19;;2008:26;2062:2;2050:15;;2043:32;2143:3;2128:19;;2122:26;2176:3;2164:16;;2157:34;2259:3;2244:19;;2238:26;2292:3;2280:16;;2273:34;2375:3;2360:19;;;2354:26;2396:16;;;2389:34;;;;-1:-1:-1;299:2155:66;;;;-1:-1:-1;299:2155:66;;;;;;:::o;3422:283::-;3507:6;3560:2;3548:9;3539:7;3535:23;3531:32;3528:52;;;3576:1;3573;3566:12;3528:52;3608:9;3602:16;3627:48;3669:5;3627:48;:::i;:::-;3694:5;3422:283;-1:-1:-1;;;3422:283:66:o;4668:230::-;4738:6;4791:2;4779:9;4770:7;4766:23;4762:32;4759:52;;;4807:1;4804;4797:12;4759:52;-1:-1:-1;4852:16:66;;4668:230;-1:-1:-1;4668:230:66:o;4903:380::-;4982:1;4978:12;;;;5025;;;5046:61;;5100:4;5092:6;5088:17;5078:27;;5046:61;5153:2;5145:6;5142:14;5122:18;5119:38;5116:161;;5199:10;5194:3;5190:20;5187:1;5180:31;5234:4;5231:1;5224:15;5262:4;5259:1;5252:15;5116:161;;4903:380;;;:::o;5414:518::-;5516:2;5511:3;5508:11;5505:421;;;5552:5;5549:1;5542:16;5596:4;5593:1;5583:18;5666:2;5654:10;5650:19;5647:1;5643:27;5637:4;5633:38;5702:4;5690:10;5687:20;5684:47;;;-1:-1:-1;5725:4:66;5684:47;5780:2;5775:3;5771:12;5768:1;5764:20;5758:4;5754:31;5744:41;;5835:81;5853:2;5846:5;5843:13;5835:81;;;5912:1;5898:16;;5879:1;5868:13;5835:81;;;5839:3;;5505:421;5414:518;;;:::o;6108:1299::-;6228:10;;-1:-1:-1;;;;;6250:30:66;;6247:56;;;6283:18;;:::i;:::-;6312:97;6402:6;6362:38;6394:4;6388:11;6362:38;:::i;:::-;6356:4;6312:97;:::i;:::-;6458:4;6489:2;6478:14;;6506:1;6501:649;;;;7194:1;7211:6;7208:89;;;-1:-1:-1;7263:19:66;;;7257:26;7208:89;-1:-1:-1;;6065:1:66;6061:11;;;6057:24;6053:29;6043:40;6089:1;6085:11;;;6040:57;7310:81;;6471:930;;6501:649;5361:1;5354:14;;;5398:4;5385:18;;-1:-1:-1;;6537:20:66;;;6655:222;6669:7;6666:1;6663:14;6655:222;;;6751:19;;;6745:26;6730:42;;6858:4;6843:20;;;;6811:1;6799:14;;;;6685:12;6655:222;;;6659:3;6905:6;6896:7;6893:19;6890:201;;;6966:19;;;6960:26;-1:-1:-1;;7049:1:66;7045:14;;;7061:3;7041:24;7037:37;7033:42;7018:58;7003:74;;6890:201;-1:-1:-1;;;;7137:1:66;7121:14;;;7117:22;7104:36;;-1:-1:-1;6108:1299:66:o;7906:418::-;8055:2;8044:9;8037:21;8018:4;8087:6;8081:13;8130:6;8125:2;8114:9;8110:18;8103:34;8189:6;8184:2;8176:6;8172:15;8167:2;8156:9;8152:18;8146:50;8245:1;8240:2;8231:6;8220:9;8216:22;8212:31;8205:42;8315:2;8308;8304:7;8299:2;8291:6;8287:15;8283:29;8272:9;8268:45;8264:54;8256:62;;;7906:418;;;;:::o;8329:297::-;8447:12;;8494:4;8483:16;;;8477:23;;8447:12;8512:16;;8509:111;;;-1:-1:-1;;8586:4:66;8582:17;;;;8579:1;8575:25;8571:38;8560:50;;8329:297;-1:-1:-1;8329:297:66:o;:::-;2571:33232:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {
            "src/core/libraries/RollupLibs/ExtRollupLib.sol": {
                "ExtRollupLib": [
                    {
                        "start": 1773,
                        "length": 20
                    },
                    {
                        "start": 7216,
                        "length": 20
                    },
                    {
                        "start": 7339,
                        "length": 20
                    },
                    {
                        "start": 9296,
                        "length": 20
                    },
                    {
                        "start": 9925,
                        "length": 20
                    },
                    {
                        "start": 10671,
                        "length": 20
                    },
                    {
                        "start": 11948,
                        "length": 20
                    },
                    {
                        "start": 13096,
                        "length": 20
                    },
                    {
                        "start": 13285,
                        "length": 20
                    },
                    {
                        "start": 14467,
                        "length": 20
                    },
                    {
                        "start": 16817,
                        "length": 20
                    }
                ]
            },
            "src/core/libraries/ValidatorSelectionLib/ValidatorSelectionLib.sol": {
                "ValidatorSelectionLib": [
                    {
                        "start": 8917,
                        "length": 20
                    },
                    {
                        "start": 12514,
                        "length": 20
                    },
                    {
                        "start": 13836,
                        "length": 20
                    },
                    {
                        "start": 15492,
                        "length": 20
                    },
                    {
                        "start": 17646,
                        "length": 20
                    }
                ]
            },
            "src/core/libraries/staking/StakingLib.sol": {
                "StakingLib": [
                    {
                        "start": 619,
                        "length": 20
                    },
                    {
                        "start": 6800,
                        "length": 20
                    },
                    {
                        "start": 6916,
                        "length": 20
                    },
                    {
                        "start": 8945,
                        "length": 20
                    },
                    {
                        "start": 10103,
                        "length": 20
                    },
                    {
                        "start": 10354,
                        "length": 20
                    },
                    {
                        "start": 10437,
                        "length": 20
                    },
                    {
                        "start": 11310,
                        "length": 20
                    },
                    {
                        "start": 11563,
                        "length": 20
                    },
                    {
                        "start": 12397,
                        "length": 20
                    },
                    {
                        "start": 12542,
                        "length": 20
                    },
                    {
                        "start": 12805,
                        "length": 20
                    },
                    {
                        "start": 12920,
                        "length": 20
                    },
                    {
                        "start": 13423,
                        "length": 20
                    },
                    {
                        "start": 13572,
                        "length": 20
                    },
                    {
                        "start": 13864,
                        "length": 20
                    },
                    {
                        "start": 14172,
                        "length": 20
                    },
                    {
                        "start": 14797,
                        "length": 20
                    },
                    {
                        "start": 15172,
                        "length": 20
                    },
                    {
                        "start": 15256,
                        "length": 20
                    },
                    {
                        "start": 15518,
                        "length": 20
                    },
                    {
                        "start": 15853,
                        "length": 20
                    },
                    {
                        "start": 16210,
                        "length": 20
                    },
                    {
                        "start": 17674,
                        "length": 20
                    }
                ]
            }
        }
    },
    "deployedBytecode": {
        "object": "0x608060405234801561000f575f5ffd5b50600436106104d2575f3560e01c80638da5cb5b11610284578063c001ab8211610161578063dc1bb8f4116100d5578063f1b98cea1161008f578063f1b98cea14610c8f578063f2fde38b14610cb6578063f7a0572b14610cc9578063f85d4eaa14610cd1578063ffa1ad7414610ce4578063ffdd5cf114610d0b575f5ffd5b8063dc1bb8f414610c16578063ddf8d65114610c29578063e3380b7914610c63578063e7142f7c14610c6b578063ede57c3414610c74578063ee3b8dc214610c7c575f5ffd5b8063d03b2bae11610126578063d03b2bae14610bd0578063d0c80f1314610be3578063d0f1be4914610beb578063d3c576d814610bfe578063d8e3784c14610c06578063d9bbd27814610c0e575f5ffd5b8063c001ab8214610b78578063c27f08b514610b8e578063c377834314610ba1578063c4014c1214610ba9578063c9d1e01214610bbd575f5ffd5b8063a575fcdc116101f8578063b85e881d116101bd578063b85e881d14610b13578063b8f3159014610b26578063b97dd9e214610b2e578063b980240514610b36578063b9d0916314610b5d578063bece308a14610b70575f5ffd5b8063a575fcdc14610a83578063a7f8e64614610aaa578063a9a1c6f414610abd578063b67d057b14610ae4578063b701069714610aec575f5ffd5b806399d706041161024957806399d7060414610a0b5780639e0fedd814610a1e5780639f2b315414610a405780639fa5048014610a48578063a011f6a914610a68578063a0e6fc8714610a70575f5ffd5b80638da5cb5b146109a45780638de728e4146109b55780638f2a2b26146109dc57806390a3b386146109fb578063966ab4ee14610a03575f5ffd5b806353a16024116103b2578063715018a611610326578063754eddb7116102eb578063754eddb7146108fd57806379ed8ead146109105780637afeed281461093757806380edb5bd1461094a57806384b0196e1461095d57806388e4a07314610978575f5ffd5b8063715018a6146108ae578063723d8e96146108b6578063725e494e146108ca5780637468582f146108dd57806374af185e146108ea575f5ffd5b806361de7ac61161037757806361de7ac61461082a57806363b03d331461083d57806368bdcbc514610850578063694223ac1461086357806369457a6f1461087b57806370192e561461088e575f5ffd5b806353a16024146107a55780635aa51600146107b85780635d3ea8f1146107cb5780635dc0ff94146107d35780635f82401f1461080a575f5ffd5b806336185aa11161044957806342d21ef71161040e57806342d21ef7146107135780634800d97f1461075357806348b9e57b1461077a5780634a177008146107825780634ed7e43514610795578063508ac49b1461079d575f5ffd5b806336185aa1146106b65780633777e863146106c9578063386f56fc146106dc5780633b10244b146106e45780633ceac569146106ec575f5ffd5b80631811f40b1161049a5780631811f40b146105a15780631b142ea7146105e05780631cfe2878146106075780632716c7371461062757806333f9acb41461063a57806335f3892014610662575f5ffd5b80630284c3f5146104d657806302a21460146104eb57806302fb4d851461051357806304c0756914610526578063164552d81461058e575b5f5ffd5b6104e96104e43660046141d7565b610d2b565b005b6008545f908152600660205260409020600501545b6040519081526020015b60405180910390f35b6104e9610521366004614225565b610e12565b61053961053436600461424f565b610e84565b60408051825180518252602080820151818401528184015183850152606080830151818501526080928301519284019290925284015160a08301529183015160c082015291015160e08201526101000161050a565b6104e961059c3660046144a4565b610f2e565b6105c87f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161050a565b6105c87f000000000000000000000000000000000000000000000000000000000000000081565b61061a61061536600461424f565b611604565b60405161050a9190614564565b6104e96106353660046145c0565b61172f565b61064d6106483660046145ec565b611835565b6040805192835260208301919091520161050a565b61066a611965565b60405161050a91908151815260208083015190820152604080830151908201526060808301516001600160a01b0390811691830191909152608092830151169181019190915260a00190565b6104e96106c436600461460c565b6119e5565b6105006106d736600461424f565b611a80565b610500611aa7565b6105c8611b1c565b6105007f000000000000000000000000000000000000000000000000000000000000000081565b61072661072136600461424f565b611b2b565b604080519687526020870195909552938501929092526060840152608083015260a082015260c00161050a565b6105c87f000000000000000000000000000000000000000000000000000000000000000081565b600854610500565b6104e96107903660046146d4565b611b87565b61061a611bf1565b6104e9611c69565b6104e96107b33660046146ef565b611d5e565b6104e96107c636600461424f565b611f26565b610500611f33565b6107e66107e13660046146d4565b611f4c565b60408051825181526020928301516001600160a01b0316928101929092520161050a565b61081d61081836600461424f565b612008565b60405161050a919061470a565b6105c86108383660046146d4565b61205b565b6104e961084b366004614721565b6120ef565b6104e961085e36600461424f565b612106565b61086b612113565b604051901515815260200161050a565b61061a61088936600461424f565b61211d565b6108a161089c3660046147f3565b612186565b60405161050a9190614821565b6104e9612293565b5f516020615bd65f395f51905f5254610500565b6104e96108d83660046146d4565b6122a6565b60055461086b9060ff1681565b6105006108f836600461424f565b6122d0565b61050061090b3660046147f3565b6122da565b6105007f000000000000000000000000000000000000000000000000000000000000000081565b61050061094536600461424f565b6122f4565b61050061095836600461424f565b612308565b610965612358565b60405161050a9796959493929190614888565b6040805180820182525f808252602091820152815180830190925260085482526009549082015261081d565b6002546001600160a01b03166105c8565b6105c87f000000000000000000000000000000000000000000000000000000000000000081565b6105006109ea36600461424f565b5f9081526007602052604090205490565b61050061239a565b61061a612411565b6105c8610a1936600461424f565b612535565b610a31610a2c36600461491e565b612642565b60405161050a93929190614996565b6104e96126d9565b610a5b610a563660046149ba565b612706565b60405161050a9190614aa8565b6105c861279f565b6104e9610a7e36600461424f565b61281a565b6105007f000000000000000000000000000000000000000000000000000000000000000081565b6105c8610ab836600461424f565b612830565b6105c87f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d81565b600954610500565b6105c87f000000000000000000000000000000000000000000000000000000000000000081565b610500610b21366004614acb565b61287c565b61050061288e565b6105006128d7565b6105c87f000000000000000000000000000000000000000000000000000000000000000081565b610500610b6b36600461424f565b6128e1565b6105006128eb565b6105c86b4355415548584943414c4c4960401b81565b6105c8610b9c36600461424f565b612924565b610500612a5b565b5f516020615b965f395f51905f5254610500565b610500610bcb36600461424f565b612a78565b610500610bde36600461424f565b612a82565b6105c8612a8c565b6104e9610bf9366004614b2a565b612b0a565b610500600581565b610500612cf3565b610500612cfd565b61086b610c2436600461424f565b612d69565b610c3c610c3736600461424f565b612e5d565b6040805182516001600160a01b03908116825260209384015116928101929092520161050a565b6104e9612f67565b6105006103e881565b6105006130e3565b61086b610c8a366004614b61565b6130f1565b61086b7f000000000000000000000000000000000000000000000000000000000000000081565b6104e9610cc43660046146d4565b61317c565b610500600281565b6104e9610cdf366004614b8d565b6131b9565b6105007f000000000000000000000000000000000000000000000000000000000000000081565b610d1e610d193660046146d4565b61325c565b60405161050a9190614c85565b610d33612f67565b6001600160a01b03841615801590610d5357506001600160a01b03831615155b84849091610d8c5760405163533169bd60e01b81526001600160a01b039283166004820152911660248201526044015b60405180910390fd5b5050604051630284c3f560e01b81526001600160a01b0380861660048301528085166024830152831660448201526064810182905273__$f6f607895dae8739569bdad20c7163daf4$__90630284c3f5906084015f6040518083038186803b158015610df6575f5ffd5b505af4158015610e08573d5f5f3e3d5ffd5b5050505050505050565b6040516302fb4d8560e01b81526001600160a01b03831660048201526024810182905273__$f6f607895dae8739569bdad20c7163daf4$__906302fb4d85906044015f6040518083038186803b158015610e6a575f5ffd5b505af4158015610e7c573d5f5f3e3d5ffd5b505050505050565b610e8c614105565b6008548281811115610eba5760405163e5edf84760e01b815260048101929092526024820152604401610d83565b5050505f90815260066020818152604092839020835161012081018552815460808201908152600183015460a0830152600283015460c0830152600383015460e083015260048301546101008301528152600582015492810192909252918201549281019290925260070154606082015290565b610f36612113565b15610f4357610f43613373565b610f4b611c69565b60055460405163f711e6c360e01b81525f918291829173__$a4c28011a2e5925604ad1989bc2650e6d7$__9163f711e6c391610f93918991899160ff90911690600401614cfd565b5f60405180830381865af4158015610fad573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610fd49190810190614d7d565b919450925090505f73__$a4c28011a2e5925604ad1989bc2650e6d7$__6364daf9d661100360808d018d614dc8565b6040518363ffffffff1660e01b8152600401611020929190614e0a565b61036060405180830381865af415801561103c573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110609190614f95565b905061106a612f67565b5f611076426001612186565b90505f611082826133e6565b90506110b9838c61109b8f61109690615113565b6133f0565b604080518082019091525f8082526020820152429086908b90613422565b600880545f919082906110cb906151cd565b91905081905590506110e18d82855f015161354e565b5f8281526006602081815260408084208551805182558084015160018301558083015160028301556060808201516003840155608090910151600480840191909155878501516005840155878401519583019590955590950151600795860155939052828220889055915163483f31ab60e01b8152918201839052907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063483f31ab906024016020604051808303815f875af11580156111ad573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111d191906151e5565b60208601516040015190915081908082146112085760405163cd6f423360e01b815260048101929092526024820152604401610d83565b5050505f61121c85602001515f0151613681565b5090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633d96c2c98387602001516060015184600161126591906151fc565b6040516001600160e01b031960e086901b1681526004810193909352602483019190915260448201526064015f604051808303815f87803b1580156112a8575f5ffd5b505af11580156112ba573d5f5f3e3d5ffd5b505050508d5f0135827f9ad613a7ff46b97e0f732b31118d43f39c9ca017bed1efe739b70b06253835898a6040516112f29190614aa8565b60405180910390a360175482116115f45761130c82613761565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663026cd0dc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611369573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061138d919061520f565b6001600160a01b0316306001600160a01b03161490505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663026cd0dc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611400573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611424919061520f565b6001600160a01b0316306001600160a01b03161490508180156114575750606087015160a001516001600160a01b031615155b801561146657505f8760800151115b1561150557606087015160a0015160808801516040516348fef59560e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016926348fef595926114d7926004016001600160a01b03929092168252602082015260400190565b5f604051808303815f87803b1580156114ee575f5ffd5b505af1158015611500573d5f5f3e3d5ffd5b505050505b8080156115225750606087015160a001516001600160a01b031615155b156115bd57606087015160a00151604051630f41a04d60e11b81526001600160a01b0391821660048201527f000000000000000000000000000000000000000000000000000000000000000090911690631e83409a906024016020604051808303815f875af1158015611597573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115bb91906151e5565b505b6040516410d211505560da1b9085907fd989775bfca9340a9fcb6a458bef402a5defb0d44211ee8d61a5974e9ad7379b905f90a350505b5050505050505050505050505050565b606073__$e9020b12d3d7a8dada1f2211c57e4d352c$__63b87cc28d600373__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af4158015611669573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061168d91906151e5565b61169686612a78565b6040516001600160e01b031960e086901b1681526004810193909352602483019190915260448201527f000000000000000000000000000000000000000000000000000000000000000060648201526084015f60405180830381865af4158015611702573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052611729919081019061522a565b92915050565b5f611739836128e1565b90505f61174584612924565b90505f6117506128eb565b90505f61175c846137f8565b90505f611771610b2136889003880188614acb565b604051631bff461d60e21b815290915073__$a4c28011a2e5925604ad1989bc2650e6d7$__90636ffd1874906118009088908890889088908d9089906011907f0000000000000000000000000000000000000000000000000000000000000000906103e8907f0000000000000000000000000000000000000000000000000000000000000000906004016152b9565b5f6040518083038186803b158015611816575f5ffd5b505af4158015611828573d5f5f3e3d5ffd5b5050505050505050505050565b5f5f5f611841856128e1565b90505f61184d86612d69565b6118595760085461185d565b6009545b5f81815260066020526040902060070154909150808380821061189c5760405163083510bd60e41b815260048101929092526024820152604401610d83565b50505f8281526006602052604090206005015480878082146118da57604051635b41520760e11b815260048101929092526024820152604401610d83565b5050604080515f8082526020820190925281611923565b604080516080810182525f8082526020808301829052928201819052606082015282525f199092019101816118f15790505b50604080518082019091526001808252602082015290915061194786838b84613813565b856119538660016151fc565b975097505050505050505b9250929050565b6119a46040518060a001604052805f81526020015f81526020015f81526020015f6001600160a01b031681526020015f6001600160a01b031681525090565b506040805160a08101825260115481526012546020820152601354918101919091526014546001600160a01b03908116606083015260155416608082015290565b60405163326d7ceb60e11b8152611a779073__$a4c28011a2e5925604ad1989bc2650e6d7$__906364daf9d690611a22908b908b90600401614e0a565b61036060405180830381865af4158015611a3e573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a629190614f95565b868686611a708860016122da565b8787613422565b50505050505050565b6008545f90821115611a92575f611729565b505f9081526006602052604090206005015490565b5f73__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af4158015611aef573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b1391906151e5565b60030154905090565b5f611b2642612924565b905090565b6009545f8181526006602052604080822060059081015460085480855292842090910154929384938493849384938493909290611b678b611a80565b600954611b7390612308565b949c939b5091995097509550909350915050565b604051630942ee0160e31b81526001600160a01b038216600482015273__$f6f607895dae8739569bdad20c7163daf4$__90634a177008906024015f6040518083038186803b158015611bd8575f5ffd5b505af4158015611bea573d5f5f3e3d5ffd5b5050505050565b6060611b2673__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af4158015611c3d573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c6191906151e5565b600401613922565b5f611c72612cf3565b6010549091505f90611c8f90611c8a6005600261392e565b613939565b905081811115611c9d575050565b600e54600c55600f54600d556040805180820182524881529051631c02c2d360e11b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d6004820152602082019073__$a4c28011a2e5925604ad1989bc2650e6d7$__9063380585a690602401602060405180830381865af4158015611d1a573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d3e91906151e5565b90528051600e5560200151600f55611d57826002613939565b6010555050565b611d68428261172f565b5f611d71612cf3565b90505f611d7c6128eb565b90506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016631c87b6ac611dbd60808601606087016146d4565b6040805160e084901b6001600160e01b03191681526001600160a01b03909216600483015286013560248201526044015f604051808303815f87803b158015611e04575f5ffd5b505af1158015611e16573d5f5f3e3d5ffd5b505050506040518060a00160405280828152602001845f016080016020810190611e4091906153ad565b63ffffffff168152604080860135602083015201611e6460808601606087016146d4565b6001600160a01b0390811682523360209283018190528351601155918301516012556040830151601355606080840151601480549184166001600160a01b031992831617905560809485015160158054919094169116179091559091611ecf919086019086016146d4565b6001600160a01b0316827f04eee47b3fe9e6bcdec9370371d65501f3fb3f44d2fbf49c2b6834635a7253df865f016040013586604051611f19929190918252602082015260400190565b60405180910390a4505050565b611f2e613944565b600a55565b5f5f516020615bd65f395f51905f525b60020154905090565b604080518082019091525f808252602082015273__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af4158015611fa6573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fca91906151e5565b6001600160a01b039283165f908152600791909101602090815260409182902082518084019093528054835260010154909316928101929092525090565b604080518082019091525f808252602082015261202e612027836128e1565b6010541190565b61203957600e61203c565b600c5b6040805180820190915281548152600190910154602082015292915050565b5f73__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af41580156120a3573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120c791906151e5565b6001600160a01b039283165f9081526006919091016020526040902060020154909116919050565b6120fd878787878787610f2e565b611a7781611d5e565b61210e613944565b600b55565b5f611b2642612d69565b5f8181526003602090815260409182902080548351818402810184019094528084526060939283018282801561217a57602002820191905f5260205f20905b81546001600160a01b0316815260019091019060200180831161215c575b50505050509050919050565b6121b36040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b5f6121bd84612d69565b6121c9576008546121cd565b6009545b5f81815260066020526040902090915073__$a4c28011a2e5925604ad1989bc2650e6d7$__906332b68a7e9061220287612008565b8661221157633b9aca00612219565b612219612a5b565b5f516020615bb65f395f51905f52546040516001600160e01b031960e087901b16815261224c94939291906004016153c8565b60a060405180830381865af4158015612267573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061228b91906153f8565b949350505050565b61229b613944565b6122a45f613971565b565b6122ae613944565b601680546001600160a01b0319166001600160a01b0392909216919091179055565b5f611729826139c2565b5f6122ed6122e88484612186565b6133e6565b9392505050565b5f611729600361230384612a78565b6139dd565b6008545f9082818111156123385760405163e5edf84760e01b815260048101929092526024820152604401610d83565b50505f8281526006602052604090206007015461172990610bcb90612a82565b5f6060805f5f5f6060612369613a43565b612371613a6f565b604080515f80825260208201909252600f60f81b9b939a50919850469750309650945092509050565b5f611b2673__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af41580156123e5573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061240991906151e5565b600401613a9c565b606073__$e9020b12d3d7a8dada1f2211c57e4d352c$__63b87cc28d600373__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af4158015612476573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061249a91906151e5565b6124a26128d7565b6040516001600160e01b031960e086901b1681526004810193909352602483019190915260448201527f000000000000000000000000000000000000000000000000000000000000000060648201526084015f60405180830381865af415801561250e573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052611b26919081019061522a565b5f73__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af415801561257d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906125a191906151e5565b6006015f61261d8473__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af41580156125f0573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061261491906151e5565b60040190613aa5565b6001600160a01b03908116825260208201929092526040015f20600201541692915050565b60055460405163f711e6c360e01b81526060915f91829173__$a4c28011a2e5925604ad1989bc2650e6d7$__9163f711e6c39161268b918991899160ff90911690600401614cfd565b5f60405180830381865af41580156126a5573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526126cc9190810190614d7d565b9250925092509250925092565b6126e1612113565b6126fe5760405163850defd360e01b815260040160405180910390fd5b6122a4613373565b60405163dfc5c62360e01b815260609073__$a4c28011a2e5925604ad1989bc2650e6d7$__9063dfc5c62390612751906006908d908d908d908d908d908d908d908d90600401615477565b5f60405180830381865af415801561276b573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261279291908101906154db565b9998505050505050505050565b5f73__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af41580156127e7573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061280b91906151e5565b546001600160a01b0316919050565b612822613944565b61282b81613761565b601755565b5f6117298273__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af41580156125f0573d5f5f3e3d5ffd5b5f61172961288983613ab0565b613aba565b5f5f6128986128eb565b601154909150811415806128b557506014546001600160a01b0316155b6128d2576040516316562f8560e11b815260040160405180910390fd5b919050565b5f611b2642612a78565b5f61172982613ae6565b6008546009545f9190036129125760405163cbaa395160e01b815260040160405180910390fd5b600954611b26906109589060016151fc565b5f5f61292f836128e1565b90505f61293b826122d0565b905073__$e9020b12d3d7a8dada1f2211c57e4d352c$__63d9e431ce600373__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af41580156129a0573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906129c491906151e5565b6040516001600160e01b031960e085901b1681526004810192909252602482015260448101859052606481018490527f0000000000000000000000000000000000000000000000000000000000000000608482015260a401602060405180830381865af4158015612a37573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061228b919061520f565b6008545f90815260066020526040812060010154611b2690613b1c565b5f61172982613b26565b5f61172982613b6b565b5f73__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af4158015612ad4573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612af891906151e5565b600101546001600160a01b0316919050565b612b12612113565b15612b1f57612b1f613373565b612b636040518061010001604052805f81526020015f81526020015f81526020015f81526020015f151581526020015f151581526020015f81526020015f81525090565b600954808252612b75908335906151fc565b60208201528051612b8b906109589060016151fc565b60608201526020810151612b9e90612308565b604080830191909152516337770f7b60e01b81525f9073__$a4c28011a2e5925604ad1989bc2650e6d7$__906337770f7b90612c7c90600690879087907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000906b4355415548584943414c4c4960401b9060040161554d565b602060405180830381865af4158015612c97573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612cbb91906151e5565b60405190915060e08401359082907fd989775bfca9340a9fcb6a458bef402a5defb0d44211ee8d61a5974e9ad7379b905f90a3505050565b5f611b26426128e1565b5f73__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af4158015612d45573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f4391906151e5565b6009546008545f911480612d81575060175460085411155b15612d8d57505f919050565b5f612d97836128e1565b6009549091505f90612dae906109589060016151fc565b90505f612dba82613b9b565b90505f612dfc84612df8612dd285611c8a6001613b9b565b7f0000000000000000000000000000000000000000000000000000000000000000613939565b1190565b90505f612e1185612df885611c8a6002613b9b565b8015612e1e575060115484145b8015612e3457506015546001600160a01b031615155b90508180612e3f5750805b15612e5057505f9695505050505050565b5060019695505050505050565b604080518082019091525f80825260208201525f612ebc8373__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af41580156125f0573d5f5f3e3d5ffd5b9050604051806040016040528073__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af4158015612f10573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612f3491906151e5565b6001600160a01b039384165f81815260069290920160209081526040909220600201549094168252019190915292915050565b5f612f706128d7565b5f81815260036020526040812060018101549293509190036130df57612f976003836139dd565b6001820155612fa582613bb6565b6003600101819055816002018190555073__$e9020b12d3d7a8dada1f2211c57e4d352c$__634229851773__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af4158015613016573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061303a91906151e5565b60018401546040516001600160e01b031960e085901b168152600481019290925260248201527f000000000000000000000000000000000000000000000000000000000000000060448201526064015f60405180830381865af41580156130a3573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526130ca919081019061522a565b80516130dd918391602090910190614155565b505b5050565b5f611b2660036123036128d7565b5f6130fa612f67565b60405163771dc6e160e11b81526001600160a01b0380851660048301528316602482015273__$f6f607895dae8739569bdad20c7163daf4$__9063ee3b8dc290604401602060405180830381865af4158015613158573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122ed9190615700565b613184613944565b6001600160a01b0381166131ad57604051631e4fbdf760e01b81525f6004820152602401610d83565b6131b681613971565b50565b6131c1613944565b5f5b81518110156132535761324b8282815181106131e1576131e16156ec565b60200260200101515f01518383815181106131fe576131fe6156ec565b60200260200101516020015184848151811061321c5761321c6156ec565b60200260200101516040015185858151811061323a5761323a6156ec565b602002602001015160600151610d33565b6001016131c3565b506131b6612f67565b613283604080516080810182525f8082526020820181905291810182905290606082015290565b73__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af41580156132ca573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906132ee91906151e5565b6001600160a01b038381165f9081526006929092016020908152604092839020835160808101855281548152600182015484169281019290925260028101549283169382019390935291906060830190600160a01b900460ff16600381111561335957613359614c71565b600381111561336a5761336a614c71565b90525092915050565b5f60118190556012819055601355601480546001600160a01b03199081169091556015805490911690556008805460095491829055604080519283526020830182905290917fc78a70f3b27748d5fa327f6a3c1104b9b007d6a80d20c41f7c0dc4543fbdbdcd910160405180910390a150565b5f61172982613bf1565b5f60018260405160200161340592919061571b565b604051602081830303815290604052805190602001209050919050565b5f61342c85612d69565b6134385760085461343c565b6009545b60408051610120810182528a81526020808201899052818301889052606082018790526080820184905260a082018690527f000000000000000000000000000000000000000000000000000000000000000060c08301526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660e083015230901b63d03b2bae17821b61010082015290516379514e8560e01b815291925073__$a4c28011a2e5925604ad1989bc2650e6d7$__916379514e859161350d9160069060040161594d565b5f6040518083038186803b158015613523575f5ffd5b505af4158015613535573d5f5f3e3d5ffd5b50505050610e0888606001516060015188888886613c23565b613556614105565b5f6006816135656001876159e5565b81526020019081526020015f205f016040518060a00160405290815f8201548152602001600182015481526020016002820154815260200160038201548152602001600482015481525050905060405180608001604052806040518060a001604052806135d185613cb0565b81526020858101519101906135ea9060608b0135613cd4565b81526020016135fc60808a018a614dc8565b61360d9161028891610268916159f8565b61361691615a1f565b815260608501516020909101906136319060408b0135613cd4565b81526020908101879052908252873582820152870135604082015260600161365c6080880188614dc8565b61366d916101b491610194916159f8565b61367691615a1f565b905295945050505050565b5f5f600283101561369657505f928392509050565b5f60018180805b8715613716578784165f036136c55760019390931b92826136bd816151cd565b93505061369d565b845f036136cf5750815b6136d984896159e5565b5f036136e3578291505b6136ed84896159e5565b975060019390931b9282613700816151cd565b935050848061370e906151cd565b95505061369d565b8460010361372b575096879650945050505050565b5f600161373887846151fc565b61374291906159e5565b90505f6137508460016151fc565b919a91995090975050505050505050565b6009548111801561377457506008548111155b156131b65760098190555f61378882612308565b9050801580613798575060115481115b156130df576040805160a0810182528281525f60208201819052918101829052606081018290523360809091018190526011929092556012819055601355601480546001600160a01b031990811690915560158054909116909117905550565b5f516020615bb65f395f51905f52545f906117299083615a50565b5f61381d856122d0565b905073__$e9020b12d3d7a8dada1f2211c57e4d352c$__6311f3ca4c600373__$f6f607895dae8739569bdad20c7163daf4$__633408f73a6040518163ffffffff1660e01b8152600401602060405180830381865af4158015613882573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906138a691906151e5565b88858989897f00000000000000000000000000000000000000000000000000000000000000006040518963ffffffff1660e01b81526004016138ef989796959493929190615a63565b5f6040518083038186803b158015613905575f5ffd5b505af4158015613917573d5f5f3e3d5ffd5b505050505050505050565b60605f6122ed83613cdf565b5f6122ed82846159e5565b5f6122ed82846151fc565b6002546001600160a01b031633146122a45760405163118cdaa760e01b8152336004820152602401610d83565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f516020615bb65f395f51905f52545f906117299083615b1f565b5f815f036139ed57505f19611729565b5f828152602084905260409020600101548015613a0b579050611729565b835f613a1885600161392e565b81526020019081526020015f20600201549050805f14613a39579050611729565b5050506001015490565b6060611b267f00000000000000000000000000000000000000000000000000000000000000005f613d37565b6060611b267f00000000000000000000000000000000000000000000000000000000000000006001613d37565b5f611729825490565b5f6122ed8383613de0565b5f61172982613e06565b5f611729613ac6613e87565b8360405161190160f01b8152600281019290925260228201526042902090565b5f516020615b965f395f51905f52545f516020615bd65f395f51905f5280545f9290613b1290856159e5565b6122ed9190615b1f565b5f61172982613fb0565b5f516020615b965f395f51905f52545f516020615bb65f395f51905f52545f915f516020615bd65f395f51905f5291613b5f9190615b32565b8154613b1290856159e5565b5f516020615bd65f395f51905f5280545f516020615b965f395f51905f52545f92916122ed91611c8a9086615b32565b5f516020615bb65f395f51905f52545f906117299083615b32565b5f8144604051602001613bd3929190918252602082015260400190565b60408051601f19818403018152919052805160209091012092915050565b5f815f0151826080015183606001518460400151613c0f91906151fc565b613c1991906151fc565b61172991906151fc565b5f613c2d836128e1565b90508086808214613c5a576040516309ba91ff60e01b815260048101929092526024820152604401610d83565b50505f613c69610bcb88612a82565b90505f613c7585612a78565b90508082808214613ca257604051631e36b2f360e11b815260048101929092526024820152604401610d83565b5050610e0888888887613813565b5f6117298260400151835f0151613cc791906151fc565b613cd46305f5e100615b49565b5f6122ed8383613fc6565b6060815f0180548060200260200160405190810160405280929190818152602001828054801561217a57602002820191905f5260205f20905b815481526020019060010190808311613d185750505050509050919050565b606060ff8314613d5157613d4a8361400d565b9050611729565b818054613d5d90615b63565b80601f0160208091040260200160405190810160405280929190818152602001828054613d8990615b63565b8015613dd45780601f10613dab57610100808354040283529160200191613dd4565b820191905f5260205f20905b815481529060010190602001808311613db757829003601f168201915b50505050509050611729565b5f825f018281548110613df557613df56156ec565b905f5260205f200154905092915050565b5f7f87ad602ba7da8fbd0870ea16b81fedb3d066c92bd5549f066c4512db6b28fb9d825f01518360200151846040015185606001518660800151604051602001613405969594939291909586526020860194909452604085019290925260608401526001600160a01b0316608083015263ffffffff1660a082015260c00190565b5f306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015613edf57507f000000000000000000000000000000000000000000000000000000000000000046145b15613f0957507f000000000000000000000000000000000000000000000000000000000000000090565b611b26604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b5f6117296402540be4008364174876e80061404a565b5f5f8212613fe157613fd7826140b5565b613d4a90846151fc565b60ff82901d808301188084111561400457613ffc81856159e5565b915050611729565b505f9392505050565b60605f614019836140de565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b5f600181806140598588615b32565b90505b80156140a05761406c81836151fc565b91506140788386615b32565b6140828783615b32565b61408c9190615b1f565b90506140996001846151fc565b925061405c565b6140aa8583615b1f565b979650505050505050565b5f5f8212156140da57604051635467221960e11b815260048101839052602401610d83565b5090565b5f60ff8216601f81111561172957604051632cd44ac360e21b815260040160405180910390fd5b604051806080016040528061413d6040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b81526020015f81526020015f81526020015f81525090565b828054828255905f5260205f209081019282156141a8579160200282015b828111156141a857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190614173565b506140da9291505b808211156140da575f81556001016141b0565b6001600160a01b03811681146131b6575f5ffd5b5f5f5f5f608085870312156141ea575f5ffd5b84356141f5816141c3565b93506020850135614205816141c3565b92506040850135614215816141c3565b9396929550929360600135925050565b5f5f60408385031215614236575f5ffd5b8235614241816141c3565b946020939093013593505050565b5f6020828403121561425f575f5ffd5b5035919050565b5f60c08284031215614276575f5ffd5b50919050565b634e487b7160e01b5f52604160045260245ffd5b604051608081016001600160401b03811182821017156142b2576142b261427c565b60405290565b604080519081016001600160401b03811182821017156142b2576142b261427c565b60405160a081016001600160401b03811182821017156142b2576142b261427c565b60405161010081016001600160401b03811182821017156142b2576142b261427c565b60405160c081016001600160401b03811182821017156142b2576142b261427c565b604051601f8201601f191681016001600160401b03811182821017156143695761436961427c565b604052919050565b5f6001600160401b038211156143895761438961427c565b5060051b60200190565b80151581146131b6575f5ffd5b803560ff811681146128d2575f5ffd5b5f82601f8301126143bf575f5ffd5b81356143d26143cd82614371565b614341565b8082825260208201915060208360071b8601019250858311156143f3575f5ffd5b602085015b8381101561445d576080818803121561440f575f5ffd5b614417614290565b813561442281614393565b8152614430602083016143a0565b602082810191909152604083810135908301526060808401359083015290845292909201916080016143f8565b5095945050505050565b5f5f83601f840112614477575f5ffd5b5081356001600160401b0381111561448d575f5ffd5b60208301915083602082850101111561195e575f5ffd5b5f5f5f5f5f5f608087890312156144b9575f5ffd5b86356001600160401b038111156144ce575f5ffd5b6144da89828a01614266565b96505060208701356001600160401b038111156144f5575f5ffd5b61450189828a016143b0565b95505060408701356001600160401b0381111561451c575f5ffd5b61452889828a01614467565b90955093505060608701356001600160401b03811115614546575f5ffd5b61455289828a01614467565b979a9699509497509295939492505050565b602080825282518282018190525f918401906040840190835b818110156145a45783516001600160a01b031683526020938401939092019160010161457d565b509095945050505050565b5f6101208284031215614276575f5ffd5b5f5f61014083850312156145d2575f5ffd5b823591506145e384602085016145af565b90509250929050565b5f5f604083850312156145fd575f5ffd5b50508035926020909101359150565b5f5f5f5f5f5f5f87890360e0811215614623575f5ffd5b88356001600160401b03811115614638575f5ffd5b6146448b828c01614467565b90995097505060208901356001600160401b03811115614662575f5ffd5b61466e8b828c016143b0565b965050604089810135955060608a0135945060808a01359350609f1982011215614696575f5ffd5b5061469f6142b8565b60a08901356146ad81614393565b815260c08901356146bd81614393565b806020830152508091505092959891949750929550565b5f602082840312156146e4575f5ffd5b81356122ed816141c3565b5f6101208284031215614700575f5ffd5b6122ed83836145af565b815181526020808301519082015260408101611729565b5f5f5f5f5f5f5f6101a0888a031215614738575f5ffd5b87356001600160401b0381111561474d575f5ffd5b6147598a828b01614266565b97505060208801356001600160401b03811115614774575f5ffd5b6147808a828b016143b0565b96505060408801356001600160401b0381111561479b575f5ffd5b6147a78a828b01614467565b90965094505060608801356001600160401b038111156147c5575f5ffd5b6147d18a828b01614467565b90945092506147e590508960808a016145af565b905092959891949750929550565b5f5f60408385031215614804575f5ffd5b82359150602083013561481681614393565b809150509250929050565b60a08101611729828480518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b60ff60f81b8816815260e060208201525f6148a660e083018961485a565b82810360408401526148b8818961485a565b606084018890526001600160a01b038716608085015260a0840186905283810360c0850152845180825260208087019350909101905f5b8181101561490d5783518352602093840193909201916001016148ef565b50909b9a5050505050505050505050565b5f5f6020838503121561492f575f5ffd5b82356001600160401b03811115614944575f5ffd5b61495085828601614467565b90969095509350505050565b5f8151808452602084019350602083015f5b8281101561498c57815186526020958601959091019060010161496e565b5093949350505050565b606081525f6149a8606083018661495c565b60208301949094525060400152919050565b5f5f5f5f5f5f5f5f610160898b0312156149d2575f5ffd5b8835975061010089018a8111156149e7575f5ffd5b60208a019750356001600160401b03811115614a01575f5ffd5b8901601f81018b13614a11575f5ffd5b80356001600160401b03811115614a26575f5ffd5b8b60208260051b8401011115614a3a575f5ffd5b602091909101965094506101208901356001600160401b03811115614a5d575f5ffd5b614a698b828c01614467565b9095509350506101408901356001600160401b03811115614a88575f5ffd5b614a948b828c01614467565b999c989b5096995094979396929594505050565b602081525f6122ed602083018461495c565b63ffffffff811681146131b6575f5ffd5b5f60a0828403128015614adc575f5ffd5b50614ae56142da565b8235815260208084013590820152604080840135908201526060830135614b0b816141c3565b60608201526080830135614b1e81614aba565b60808201529392505050565b5f60208284031215614b3a575f5ffd5b81356001600160401b03811115614b4f575f5ffd5b820161018081850312156122ed575f5ffd5b5f5f60408385031215614b72575f5ffd5b8235614b7d816141c3565b91506020830135614816816141c3565b5f60208284031215614b9d575f5ffd5b81356001600160401b03811115614bb2575f5ffd5b8201601f81018413614bc2575f5ffd5b8035614bd06143cd82614371565b8082825260208201915060208360071b850101925086831115614bf1575f5ffd5b6020840193505b82841015614c675760808488031215614c0f575f5ffd5b614c17614290565b8435614c22816141c3565b81526020850135614c32816141c3565b60208201526040850135614c45816141c3565b6040820152606085810135908201528252608090930192602090910190614bf8565b9695505050505050565b634e487b7160e01b5f52602160045260245ffd5b815181526020808301516001600160a01b0390811691830191909152604080840151909116908201526060820151608082019060048110614cc857614cc8614c71565b8060608401525092915050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b604081525f614d10604083018587614cd5565b90508215156020830152949350505050565b5f82601f830112614d31575f5ffd5b8151614d3f6143cd82614371565b8082825260208201915060208360051b860101925085831115614d60575f5ffd5b602085015b8381101561445d578051835260209283019201614d65565b5f5f5f60608486031215614d8f575f5ffd5b83516001600160401b03811115614da4575f5ffd5b614db086828701614d22565b60208601516040909601519097959650949350505050565b5f5f8335601e19843603018112614ddd575f5ffd5b8301803591506001600160401b03821115614df6575f5ffd5b60200191503681900382131561195e575f5ffd5b602081525f61228b602083018486614cd5565b5f60408284031215614e2d575f5ffd5b614e356142b8565b825181526020830151909150614e4a81614aba565b602082015292915050565b5f818303610140811215614e67575f5ffd5b614e6f6142b8565b9150614e7b8484614e1d565b8252610100603f1982011215614e8f575f5ffd5b50614e98614290565b614ea58460408501614e1d565b8152614eb48460808501614e1d565b6020820152614ec68460c08501614e1d565b6040820152614ed9846101008501614e1d565b6060820152602082015292915050565b5f60408284031215614ef9575f5ffd5b614f016142b8565b825181526020928301519281019290925250919050565b5f6101208284031215614f29575f5ffd5b614f316142fc565b825181526020808401519082015260408084015190820152606080840151908201526080808401519082015260a0830151909150614f6e816141c3565b60a082015260c08281015190820152614f8a8360e08401614ee9565b60e082015292915050565b5f81830361036081128015614fa8575f5ffd5b50614fb161431f565b614fbb8585614e1d565b81526080603f1983011215614fce575f5ffd5b614fd6614290565b604085810151825260608087015160208085019190915260808801519284019290925260a087015190830152820181905291506150168560c08601614e55565b6040820152615029856102008601614f18565b606082015261032084015160808201526103409093015160a0840152509092915050565b5f82601f83011261505c575f5ffd5b81356001600160401b038111156150755761507561427c565b615088601f8201601f1916602001614341565b81815284602083860101111561509c575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f82601f8301126150c7575f5ffd5b81356150d56143cd82614371565b8082825260208201915060208360051b8601019250858311156150f6575f5ffd5b602085015b8381101561445d5780358352602092830192016150fb565b5f81360360c0811215615124575f5ffd5b61512c6142da565b83358152602080850135908201526040603f198301121561514b575f5ffd5b6151536142b8565b604085810135825260608601356020830152820152608084013591506001600160401b03821115615182575f5ffd5b61518e3683860161504d565b606082015260a084013591506001600160401b038211156151ad575f5ffd5b614b1e368386016150b8565b634e487b7160e01b5f52601160045260245ffd5b5f600182016151de576151de6151b9565b5060010190565b5f602082840312156151f5575f5ffd5b5051919050565b80820180821115611729576117296151b9565b5f6020828403121561521f575f5ffd5b81516122ed816141c3565b5f6020828403121561523a575f5ffd5b81516001600160401b0381111561524f575f5ffd5b8201601f8101841361525f575f5ffd5b805161526d6143cd82614371565b8082825260208201915060208360051b85010192508683111561528e575f5ffd5b6020840193505b82841015614c675783516152a8816141c3565b825260209384019390910190615295565b8a81526001600160a01b038a1660208083019190915260408083018b905260608084018b9052893560808501529189013560a084015288013560c0830152610240820190880135615309816141c3565b6001600160a01b031660e0830152608088013561532581614aba565b63ffffffff1661010083015260a088013561533f81614393565b151561012083015260ff61535560c08a016143a0565b1661014083015260e0880135610160830152610100909701356101808201526101a08101959095526101c08501939093526101e08401919091526102008301526001600160a01b031661022090910152949350505050565b5f602082840312156153bd575f5ffd5b81356122ed81614aba565b84815260a081016153e6602083018680518252602090810151910152565b60608201939093526080015292915050565b5f60a0828403128015615409575f5ffd5b506154126142da565b825181526020808401519082015260408084015190820152606080840151908201526080928301519281019290925250919050565b8183525f6001600160fb1b0383111561545e575f5ffd5b8260051b80836020870137939093016020019392505050565b89815288602082015260e08860408301376101806101208201525f6154a16101808301888a615447565b8281036101408401526154b5818789614cd5565b90508281036101608401526154cb818587614cd5565b9c9b505050505050505050505050565b5f602082840312156154eb575f5ffd5b81516001600160401b03811115615500575f5ffd5b61228b84828501614d22565b5f5f8335601e19843603018112615521575f5ffd5b83016020810192503590506001600160401b0381111561553f575f5ffd5b80360382131561195e575f5ffd5b8881526101e060208201525f5f89359050806101e08401525060e060208a01610200840137610100890135601e198a3603018112615589575f5ffd5b89016020810190356001600160401b038111156155a4575f5ffd5b8060051b36038213156155b5575f5ffd5b6101806102e08501526155cd61036085018284615447565b9150506155de6101208b018b61550c565b8483036101df19016103008601526155f7838284614cd5565b925050506156096101408b018b61550c565b8483036101df1901610320860152615622838284614cd5565b925050506156346101608b018b61550c565b8483036101df190161034086015261564d838284614cd5565b93505050506156ac60408301898051825260208101516020830152604081015160408301526060810151606083015260808101511515608083015260a0810151151560a083015260c081015160c083015260e081015160e08301525050565b6001600160a01b039687166101408301529486166101608201529285166101808401529084166101a08301529092166101c0909201919091529392505050565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215615710575f5ffd5b81516122ed81614393565b5f6002841061572c5761572c614c71565b838252604060208301528251604083015260208301516060830152604083015180516080840152602081015160a084015250606083015160c08084015261577761010084018261485a565b6080850151848203603f190160e08601528051808352602091820193505f9291909101905b808310156157bf578351825260208201915060208401935060018301925061579c565b509695505050505050565b6157e58282518051825260209081015163ffffffff16910152565b60208101516158086040840182518051825260209081015163ffffffff16910152565b602081810151805160808601529081015163ffffffff1660a0850152506040810151805160c0850152602081015163ffffffff1660e085015250606001518051610100840152602081015163ffffffff166101208401526130dd565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260018060a01b0360a08201511660a083015260c081015160c083015260e08101516130dd60e084018280518252602090810151910152565b6158e38282518051825260209081015163ffffffff16910152565b6020810151805160408401526020810151606084015260408101516080840152606081015160a084015250604081015161592060c08401826157ca565b506060810151615934610200840182615864565b50608081015161032083015260a0015161034090910152565b5f6104a0820190506159608285516158c8565b602084810151610360840152604085015161038084015260608501516103a084015260808501516103c084015260a0850151805115156103e08501520151151561040083015260c084015161042083015260e08401516001600160a01b03166104408301526101009093015167ffffffffffffffff1916610460820152610480015290565b81810381811115611729576117296151b9565b5f5f85851115615a06575f5ffd5b83861115615a12575f5ffd5b5050820193919092039150565b80356020831015611729575f19602084900360031b1b1692915050565b634e487b7160e01b5f52601260045260245ffd5b5f82615a5e57615a5e615a3c565b500690565b5f61012082018a83528960208401528860408401528760608401526101206080840152808751808352610140850191506020890192505f5b81811015615ae457835180511515845260ff6020820151166020850152604081015160408501526060810151606085015250608083019250602084019350600181019050615a9b565b505060a084018790528551151560c08501526020860151151560e08501529150615b0b9050565b826101008301529998505050505050505050565b5f82615b2d57615b2d615a3c565b500490565b8082028115828204841417611729576117296151b9565b5f600160ff1b8201615b5d57615b5d6151b9565b505f0390565b600181811c90821680615b7757607f821691505b60208210810361427657634e487b7160e01b5f52602260045260245ffdfecc2bde3d21ba778aa5c156bb6fc47381978b0054c8a1ef73f44234164324cbe1cc2bde3d21ba778aa5c156bb6fc47381978b0054c8a1ef73f44234164324cbe2cc2bde3d21ba778aa5c156bb6fc47381978b0054c8a1ef73f44234164324cbe0a26469706673582212206192a99fdb925ffcfa2049acf47ccde7aeb0acad64b610de0dba1a212f20b1a264736f6c634300081b0033",
        "sourceMapi;:::-;;:::i;:::-;;26039:148:22;26138:16;:35;26097:7;26119:55;;;:11;:55;;;;;:63;;;26039:148;;;951:25:66;;;939:2;924:18;26039:148:22;;;;;;;;3063:126:23;;;;;;:::i;:::-;;:::i;26465:316:22:-;;;;;;:::i;:::-;;:::i;:::-;;;;2142:13:66;;1665:12;;1653:25;;1727:4;1716:16;;;1710:23;1694:14;;;1687:47;1772:16;;;1766:23;1750:14;;;1743:47;1839:4;1828:16;;;1822:23;1806:14;;;1799:47;1895:4;1884:16;;;1878:23;1862:14;;;1855:47;;;;2211:17;;2205:24;2198:4;2183:20;;2176:54;2274:17;;;2268:24;2261:4;2246:20;;2239:54;2337:17;;2331:24;2324:4;2309:20;;2302:54;2101:3;2086:19;26465:316:22;1913:449:66;18873:3269:22;;;;;;:::i;:::-;;:::i;3931:49::-;;;;;;;;-1:-1:-1;;;;;7862:32:66;;;7844:51;;7832:2;7817:18;3931:49:22;7673:228:66;3793:31:22;;;;;6595:284:23;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;25224:703:22:-;;;;;;:::i;:::-;;:::i;14141:1045::-;;;;;;:::i;:::-;;:::i;:::-;;;;10210:25:66;;;10266:2;10251:18;;10244:34;;;;10183:18;14141:1045:22;10010:274:66;11789:163:22;;;:::i;:::-;;;;;;10522:13:66;;10504:32;;10592:4;10580:17;;;10574:24;10552:20;;;10545:54;10655:4;10643:17;;;10637:24;10615:20;;;10608:54;10722:4;10710:17;;;10704:24;-1:-1:-1;;;;;10700:50:66;;;10678:20;;;10671:80;;;;10811:4;10799:17;;;10793:24;10789:50;10767:20;;;10760:80;;;;10491:3;10476:19;;10289:557;15763:474:22;;;;;;:::i;:::-;;:::i;28196:226::-;;;;;;:::i;:::-;;:::i;4040:128:23:-;;;:::i;10063:154::-;;;:::i;3657:51:22:-;;;;;12072:649;;;;;;:::i;:::-;;:::i;:::-;;;;13313:25:66;;;13369:2;13354:18;;13347:34;;;;13397:18;;;13390:34;;;;13455:2;13440:18;;13433:34;13498:3;13483:19;;13476:35;13542:3;13527:19;;13520:35;13300:3;13285:19;12072:649:22;12999:562:66;4042:29:22;;;;;26327:134;26421:16;:35;26327:134;;2937:122:23;;;;;;:::i;:::-;;:::i;8865:153::-;;;:::i;22266:571:22:-;;;:::i;17408:937::-;;;;;;:::i;:::-;;:::i;7764:132::-;;;;;;:::i;:::-;;:::i;3497:142:23:-;;;:::i;5051:149::-;;;;;;:::i;:::-;;:::i;:::-;;;;14755:13:66;;14737:32;;14829:4;14817:17;;;14811:24;-1:-1:-1;;;;;14807:50:66;14785:20;;;14778:80;;;;14710:18;5051:149:23;14545:319:66;23202:287:22;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4321:186:23:-;;;;;;:::i;:::-;;:::i;8867:315:22:-;;;;;;:::i;:::-;;:::i;8132:202::-;;;;;;:::i;:::-;;:::i;28426:130::-;;;:::i;:::-;;;16860:14:66;;16853:22;16835:41;;16823:2;16808:18;28426:130:22;16695:187:66;5801:196:23;;;;;;:::i;:::-;;:::i;24398:625:22:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2293:101:1:-;;;:::i;3193:156:23:-;-1:-1:-1;;;;;;;;;;;3311:32:23;3193:156;;7420:150:22;;;;;;:::i;:::-;;:::i;3624:28::-;;;;;;;;;12419:163:23;;;;;;:::i;:::-;;:::i;23659:217:22:-;;;;;;:::i;:::-;;:::i;3712:44::-;;;;;7073:215:23;;;;;;:::i;:::-;;:::i;26976:358:22:-;;;;;;:::i;:::-;;:::i;5144:557:13:-;;;:::i;:::-;;;;;;;;;;;;;:::i;11956:112:22:-;-1:-1:-1;;;;;;;;;;;;;;;;;12040:23:22;;;;;;;;12047:16;12040:23;;;;;;;;;11956:112;;1638:85:1;1710:6;;-1:-1:-1;;;;;1710:6:1;1638:85;;3984:54:22;;;;;26785:187;;;;;;:::i;:::-;26895:7;26919:48;;;:34;:48;;;;;;;26785:187;4172:145:23;;;:::i;6124:283::-;;;:::i;4672:196::-;;;;;;:::i;:::-;;:::i;16366:214:22:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;6755:121::-;;;:::i;13413:406::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3769:131:23:-;;;:::i;7015:220:22:-;;;;;;:::i;:::-;;:::i;1566:46:23:-;;;;;4511:157;;;;;;:::i;:::-;;:::i;3417:92:22:-;;3478:28;3417:92;;26191:132;26284:34;;26191:132;;3760:29;;;;;25027:193;;;;;;:::i;:::-;;:::i;16746:658::-;;;:::i;9120:146:23:-;;;:::i;3828:63:22:-;;;;;12110:132:23;;;;;;:::i;:::-;;:::i;27705:286:22:-;;;:::i;3341:71::-;;-1:-1:-1;;;3341:71:22;;11311:333:23;;;;;;:::i;:::-;;:::i;22968:230:22:-;;;:::i;3353:140:23:-;-1:-1:-1;;;;;;;;;;;3455:33:23;3353:140;;11811:135;;;;;;:::i;:::-;;:::i;9697:170::-;;;;;;:::i;:::-;;:::i;3643:122::-;;;:::i;10481:1304:22:-;;;;;;:::i;:::-;;:::i;2792:44::-;;2834:1;2792:44;;9366:143:23;;;:::i;3904:132::-;;;:::i;28560:1367:22:-;;;;;;:::i;:::-;;:::i;5204:311:23:-;;;;;;:::i;:::-;;:::i;:::-;;;;25651:13:66;;-1:-1:-1;;;;;25647:39:66;;;25629:58;;25747:4;25735:17;;;25729:24;25725:50;25703:20;;;25696:80;;;;25602:18;5204:311:23;25421:361:66;8131:557:23;;;:::i;3067:70:22:-;;3133:4;3067:70;;7416:191:23;;;:::i;2603:330::-;;;;;;:::i;:::-;;:::i;3513:37:22:-;;;;;2543:215:1;;;;;;:::i;:::-;;:::i;2840:39:22:-;;2877:1;2840:39;;6267:304;;;;;;:::i;:::-;;:::i;3895:32::-;;;;;4872:175:23;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2229:370::-;2366:12;:10;:12::i;:::-;-1:-1:-1;;;;;2399:23:23;;;;;;:50;;-1:-1:-1;;;;;;2426:23:23;;;;2399:50;2499:9;2510;2384:142;;;;;;-1:-1:-1;;;2384:142:23;;-1:-1:-1;;;;;28673:32:66;;;2384:142:23;;;28655:51:66;28742:32;;28722:18;;;28715:60;28628:18;;2384:142:23;;;;;;;;;-1:-1:-1;;2532:62:23;;-1:-1:-1;;;2532:62:23;;-1:-1:-1;;;;;29043:32:66;;;2532:62:23;;;29025:51:66;29112:32;;;29092:18;;;29085:60;29181:32;;29161:18;;;29154:60;29230:18;;;29223:34;;;2532:10:23;;:18;;28997:19:66;;2532:62:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2229:370;;;;:::o;3063:126::-;3148:36;;-1:-1:-1;;;3148:36:23;;-1:-1:-1;;;;;29468:32:66;;3148:36:23;;;29450:51:66;29517:18;;;29510:34;;;3148:10:23;;:16;;29423:18:66;;3148:36:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3063:126;;:::o;26465:316:22:-;26544:15;;:::i;:::-;26598:16;:35;26582:12;:51;;;;26567:164;;;;-1:-1:-1;;;26567:164:22;;;;;10210:25:66;;;;10251:18;;;10244:34;10183:18;;26567:164:22;10010:274:66;26567:164:22;-1:-1:-1;;;26744:18:22;:32;;;:11;:32;;;;;;;;;26737:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26737:39:22;;;;26465:316::o;18873:3269::-;19127:10;:8;:10::i;:::-;19123:39;;;19147:8;:6;:8::i;:::-;19167:22;:20;:22::i;:::-;19488:9;;19449:49;;-1:-1:-1;;;19449:49:22;;19351:27;;;;;;19449:12;;:26;;:49;;19476:10;;;;19488:9;;;;;19449:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19449:49:22;;;;;;;;;;;;:::i;:::-;19350:148;;-1:-1:-1;19350:148:22;-1:-1:-1;19350:148:22;-1:-1:-1;19539:20:22;19562:12;:25;19588:12;;;;:5;:12;:::i;:::-;19562:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19539:62;;19608:12;:10;:12::i;:::-;19626:39;19674:65;19716:15;19734:4;19674:26;:65::i;:::-;19626:113;;19745:19;19767:26;:10;:24;:26::i;:::-;19745:48;;19799:337;19832:6;19859:11;19887:14;:5;:12;;;:::i;:::-;;:14::i;:::-;20056:73;;;;;;;;;-1:-1:-1;20056:73:22;;;;;;;19938:15;;19976:11;;20019:21;;19799:15;:337::i;:::-;20167:16;20165:37;;20143:19;;20167:16;20143:19;;20165:37;;;:::i;:::-;;;;;;;20143:59;;20251:58;20263:5;20270:11;20283:10;:25;;;20251:11;:58::i;:::-;20217:18;:31;;;:11;:31;;;;;;;;:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20322:47;;;;;;:70;;;20508:26;;-1:-1:-1;;;20508:26:22;;;;;951:25:66;;;20217:18:22;20508:5;-1:-1:-1;;;;;20508:13:22;;;;924:18:66;;20508:26:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20559:24;;;;:31;;;20491:43;;-1:-1:-1;20491:43:22;;20559:41;;;20542:145;;;;-1:-1:-1;;;20542:145:22;;;;;10210:25:66;;;;10251:18;;;10244:34;10183:18;;20542:145:22;10010:274:66;20542:145:22;;;20483:211;20856:11;20872:66;20906:6;:24;;;:31;;;20872:33;:66::i;:::-;20855:83;;;20944:6;-1:-1:-1;;;;;20944:13:22;;20958:11;20971:6;:24;;;:32;;;21005:3;21011:1;21005:7;;;;:::i;:::-;20944:69;;-1:-1:-1;;;;;;20944:69:22;;;;;;;;;;40414:25:66;;;;40455:18;;;40448:34;;;;40498:18;;;40491:34;40387:18;;20944:69:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21054:5;:13;;;21041:11;21025:55;21069:10;21025:55;;;;;;:::i;:::-;;;;;;;;21211:30;;21196:11;:45;21192:946;;21251:37;21276:11;21251:24;:37::i;:::-;21297:19;21336:16;-1:-1:-1;;;;;21336:32:22;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;21319:51:22;21327:4;-1:-1:-1;;;;;21319:51:22;;21297:73;;21378:33;21431:18;-1:-1:-1;;;;;21431:34:22;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;21414:53:22;21422:4;-1:-1:-1;;;;;21414:53:22;;21378:89;;21480:14;:63;;;;-1:-1:-1;21498:22:22;;;;:31;;;-1:-1:-1;;;;;21498:45:22;;;21480:63;:87;;;;;21566:1;21547:6;:16;;;:20;21480:87;21476:439;;;21856:22;;;;:31;;;21889:16;;;;21824:82;;-1:-1:-1;;;21824:82:22;;-1:-1:-1;;;;;21824:16:22;:31;;;;:82;;;;-1:-1:-1;;;;;29468:32:66;;;;29450:51;;29532:2;29517:18;;29510:34;29438:2;29423:18;;29268:282;21824:82:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21476:439;21926:28;:77;;;;-1:-1:-1;21958:22:22;;;;:31;;;-1:-1:-1;;;;;21958:45:22;;;21926:77;21922:159;;;22040:22;;;;:31;;;22015:57;;-1:-1:-1;;;22015:57:22;;-1:-1:-1;;;;;7862:32:66;;;22015:57:22;;;7844:51:66;22015:18:22;:24;;;;;;7817:18:66;;22015:57:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;21922:159;22094:37;;-1:-1:-1;;;22094:37:22;22110:11;;22094:37;;;;;21243:895;;21192:946;19117:3025;;;;;;;;18873:3269;;;;;;:::o;6595:284:23:-;6703:16;6736:21;:36;6780:23;6805:10;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6830:15;6841:3;6830:10;:15::i;:::-;6736:138;;-1:-1:-1;;;;;;6736:138:23;;;;;;;;;;41870:25:66;;;;41911:18;;;41904:34;;;;41954:18;;;41947:34;6847:21:23;41997:18:66;;;41990:34;41842:19;;6736:138:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6736:138:23;;;;;;;;;;;;:::i;:::-;6729:145;6595:284;-1:-1:-1;;6595:284:23:o;25224:703:22:-;25372:16;25391:14;25401:3;25391:9;:14::i;:::-;25372:33;;25411:23;25437:18;25451:3;25437:13;:18::i;:::-;25411:44;;25461:18;25482:17;:15;:17::i;:::-;25461:38;;25505:18;25526:36;25550:11;25526:23;:36::i;:::-;25505:57;-1:-1:-1;25568:14:22;25585:27;;;;;;;;25599:6;25585:27;:::i;:::-;25619:303;;-1:-1:-1;;;25619:303:22;;25568:44;;-1:-1:-1;25619:12:22;;:47;;:303;;25674:11;;25693:15;;25716:12;;25736:10;;25754:6;;25568:44;;25782:22;;25812:26;;3133:4;;25893:23;;25619:303;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25366:561;;;;;25224:703;;:::o;14141:1045::-;14257:4;14263:7;14280:9;14292:14;14302:3;14292:9;:14::i;:::-;14280:26;;14362;14397:19;14412:3;14397:14;:19::i;:::-;:94;;14456:16;:35;14397:94;;;14419:34;;14397:94;14498:13;14514:38;;;:11;:38;;;;;:49;;;:38;;-1:-1:-1;14514:49:22;-1:-1:-1;;;;14570:75:22;;;;-1:-1:-1;;;14570:75:22;;;;;10210:25:66;;;;10251:18;;;10244:34;10183:18;;14570:75:22;10010:274:66;14570:75:22;-1:-1:-1;;14739:18:22;14760:38;;;:11;:38;;;;;:46;;;;14834:8;14820:22;;;14812:84;;;;-1:-1:-1;;;14812:84:22;;;;;10210:25:66;;;;10251:18;;;10244:34;10183:18;;14812:84:22;10010:274:66;14812:84:22;-1:-1:-1;;14929:18:22;;;14903:23;14929:18;;;;;;;;;14903:23;14929:18;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14929:18:22;;-1:-1:-1;;14929:18:22;;;;;;;;;;;-1:-1:-1;15004:71:22;;;;;;;;;15045:4;15004:71;;;;;;;14903:44;;-1:-1:-1;15081:56:22;15109:4;14903:44;15121:8;15004:71;15081:27;:56::i;:::-;15152:4;15158:22;:18;15179:1;15158:22;:::i;:::-;15144:37;;;;;;;;;;14141:1045;;;;;;:::o;11789:163::-;11871:37;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11871:37:22;-1:-1:-1;11918:29:22;;;;;;;;11925:22;11918:29;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11918:29:22;;;;;;;;;;;;;;;11789:163::o;15763:474::-;16050:34;;-1:-1:-1;;;16050:34:22;;16027:205;;16050:12;;:25;;:34;;16076:7;;;;16050:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16092:11;16111:7;16126:12;16146:36;16163:12;16177:4;16146:16;:36::i;:::-;16190:22;16220:6;16027:15;:205::i;:::-;15763:474;;;;;;;:::o;28196:226::-;28314:16;:35;28276:7;;28298:51;;;:119;;28415:1;28298:119;;;-1:-1:-1;28358:18:22;:32;;;:11;:32;;;;;:40;;;;28196:226::o;4040:128:23:-;4106:9;4130:10;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:33;;;4123:40;;4040:128;:::o;10063:154::-;10144:7;10166:46;10195:15;10166:13;:46::i;:::-;10159:53;;10063:154;:::o;12072:649:22:-;12393:34;;12182:25;12435:54;;;12393:11;12435:54;;;;;;:62;;;;;12393:16;12505:35;12548:55;;;;;;:63;;;;12182:25;;;;;;;;;;;;12393:34;;12505:35;12619:31;12629:20;12619:9;:31::i;:::-;12675:34;;12658:52;;:16;:52::i;:::-;12378:338;;;;-1:-1:-1;12378:338:22;;-1:-1:-1;12378:338:22;-1:-1:-1;12378:338:22;-1:-1:-1;12378:338:22;;-1:-1:-1;12072:649:22;-1:-1:-1;;12072:649:22:o;2937:122:23:-;3016:38;;-1:-1:-1;;;3016:38:23;;-1:-1:-1;;;;;7862:32:66;;3016:38:23;;;7844:51:66;3016:10:23;;:27;;7817:18:66;;3016:38:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2937:122;:::o;8865:153::-;8940:16;8971:42;:10;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:33;;:40;:42::i;22266:571:22:-;22329:9;22341:16;:14;:16::i;:::-;22445:42;;22329:28;;-1:-1:-1;22423:19:22;;22445:61;;22491:14;2834:1;2877;22491:14;:::i;:::-;22445:61;:::i;:::-;22423:83;-1:-1:-1;;;;22513:48:22;;;22548:7;;22266:571::o;22513:48::-;22603:34;22567:70;22603:29;22567:70;;;;;22686:85;;;;;;;;22706:13;22686:85;;22730:39;;-1:-1:-1;;;22730:39:22;;7862:32:66;22730:39:22;;;7844:51:66;22686:85:22;;;;22730:12;;:27;;7817:18:66;;22730:39:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22686:85;;22643:128;;:34;:128;;;;;;22822:10;:4;22643:34;22822:10;:::i;:::-;22777:42;:55;-1:-1:-1;;22266:571:22:o;17408:937::-;17508:75;17558:15;17576:6;17508:34;:75::i;:::-;17590:16;17609;:14;:16::i;:::-;17590:35;;17631:18;17652:17;:15;:17::i;:::-;17631:38;-1:-1:-1;;;;;;17862:23:22;:33;;17896:19;;;;;;;;:::i;:::-;17917:23;17862:79;;;;;;-1:-1:-1;;;;;;17862:79:22;;;-1:-1:-1;;;;;29468:32:66;;;17862:79:22;;;29450:51:66;17917:23:22;;;29517:18:66;;;29510:34;29423:18;;17862:79:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17973:241;;;;;;;;18026:12;17973:241;;;;18061:6;:12;;:26;;;;;;;;;;:::i;:::-;17973:241;;;;18107:23;;;;;17973:241;;;;;18152:19;;;;;;;;:::i;:::-;-1:-1:-1;;;;;17973:241:22;;;;;18197:10;17973:241;;;;;;;17948:266;;:22;:266;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;17948:266:22;;;;;;;;;;;;;;;;;;;;;;;;18197:10;;18265:19;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;18226:114:22;18251:12;18226:114;18298:6;:12;;:23;;;18323:11;18226:114;;;;;;10210:25:66;;;10266:2;10251:18;;10244:34;10198:2;10183:18;;10010:274;18226:114:22;;;;;;;;17502:843;;17408:937;:::o;7764:132::-;1531:13:1;:11;:13::i;:::-;7855:22:22;:36;7764:132::o;3497:142:23:-;3578:7;-1:-1:-1;;;;;;;;;;;3600:20:23;:34;;;3593:41;;3497:142;:::o;5051:149::-;-1:-1:-1;;;;;;;;;;;;;;;;;5155:10:23;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5155:40:23;;;;;;;:29;;;;;:40;;;;;;;;;5148:47;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5148:47:23;5051:149::o;23202:287:22:-;-1:-1:-1;;;;;;;;;;;;;;;;;23333:66:22;:21;23343:10;23333:9;:21::i;:::-;23357:42;;-1:-1:-1;2041:33:46;1976:101;23333:66:22;:151;;23450:34;23333:151;;;23408:29;23333:151;23326:158;;;;;;;;;;;;;;;;;;;;;;;23202:287;-1:-1:-1;;23202:287:22:o;4321:186:23:-;4430:7;4454:10;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4454:39:23;;;;;;;:28;;;;;:39;;;;;:48;;;;;;;4321:186;-1:-1:-1;4321:186:23:o;8867:315:22:-;9097:46;9105:5;9112:11;9125:5;;9132:10;;9097:7;:46::i;:::-;9149:28;9170:6;9149:20;:28::i;8132:202::-;1531:13:1;:11;:13::i;:::-;8265:36:22;:64;8132:202::o;28426:130::-;28485:4;28504:47;28534:15;28504:14;:47::i;5801:196:23:-;5944:30;:38;;;:23;:38;;;;;;;;;5937:55;;;;;;;;;;;;;;;;;5911:16;;5937:55;;;5944:38;5937:55;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5937:55:23;;;;;;;;;;;;;;;;;;;;;;;5801:196;;;:::o;24398:625:22:-;24533:28;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24533:28:22;24648:23;24674:26;24689:10;24674:14;:26::i;:::-;:113;;24752:16;:35;24674:113;;;24709:34;;24674:113;24848:18;:35;;;:11;:35;;;;;24648:139;;-1:-1:-1;24801:12:22;;:39;;24901:23;24913:10;24901:11;:23::i;:::-;24932:11;:38;;24967:3;24932:38;;;24946:18;:16;:18::i;:::-;-1:-1:-1;;;;;;;;;;;24978:34:22;24801:217;;-1:-1:-1;;;;;;24801:217:22;;;;;;;;;;;;24978:34;24801:217;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24794:224;24398:625;-1:-1:-1;;;;24398:625:22:o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;7420:150:22:-;1531:13:1;:11;:13::i;:::-;7512:30:22;:53;;-1:-1:-1;;;;;;7512:53:22::1;-1:-1:-1::0;;;;;7512:53:22;;;::::1;::::0;;;::::1;::::0;;7420:150::o;12419:163:23:-;12528:5;12550:27;:11;:25;:27::i;23659:217:22:-;23780:7;23804:67;:51;23831:10;23843:11;23804:26;:51::i;:::-;:65;:67::i;:::-;23797:74;23659:217;-1:-1:-1;;;23659:217:22:o;7073:215:23:-;7182:7;7206:77;7242:23;7267:15;7278:3;7267:10;:15::i;:::-;7206:35;:77::i;26976:358:22:-;27107:16;:35;27063:5;;27091:12;:51;;;;27076:164;;;;-1:-1:-1;;;27076:164:22;;;;;10210:25:66;;;;10251:18;;;10244:34;10183:18;;27076:164:22;10010:274:66;27076:164:22;-1:-1:-1;;27284:18:22;:32;;;:11;:32;;;;;:43;;;27253:76;;27264:64;;:19;:64::i;5144:557:13:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5668;;;5652:1;5668:16;;;;;;;;;-1:-1:-1;;;5482:212:13;;;-1:-1:-1;5482:212:13;;-1:-1:-1;5590:13:13;;-1:-1:-1;5625:4:13;;-1:-1:-1;5652:1:13;-1:-1:-1;5668:16:13;-1:-1:-1;5482:212:13;-1:-1:-1;5144:557:13:o;4172:145:23:-;4248:7;4270:42;:10;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:33;;:40;:42::i;6124:283::-;6229:16;6262:21;:36;6306:23;6331:10;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6356:17;:15;:17::i;:::-;6262:140;;-1:-1:-1;;;;;;6262:140:23;;;;;;;;;;41870:25:66;;;;41911:18;;;41904:34;;;;41954:18;;;41947:34;6375:21:23;41997:18:66;;;41990:34;41842:19;;6262:140:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6262:140:23;;;;;;;;;;;;:::i;4672:196::-;4758:7;4780:10;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:28;;:74;4809:44;4846:6;4809:10;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:33;;;:36;:44::i;:::-;-1:-1:-1;;;;;4780:74:23;;;;;;;;;;;;;;-1:-1:-1;4780:74:23;:83;;;;;4672:196;-1:-1:-1;;4672:196:23:o;16366:214:22:-;16565:9;;16525:50;;-1:-1:-1;;;16525:50:22;;16474:16;;16492:7;;;;16525:12;;:26;;:50;;16552:11;;;;16565:9;;;;;16525:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16525:50:22;;;;;;;;;;;;:::i;:::-;16518:57;;;;;;16366:214;;;;;:::o;6755:121::-;6813:10;:8;:10::i;:::-;6805:52;;;;-1:-1:-1;;;6805:52:22;;;;;;;;;;;;6863:8;:6;:8::i;13413:406::-;13686:128;;-1:-1:-1;;;13686:128:22;;13655:16;;13686:12;;:38;;:128;;13732:11;;13745:10;;13757:5;;13764;;;;13771:17;;;;13790:18;;;;13686:128;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13686:128:22;;;;;;;;;;;;:::i;:::-;13679:135;13413:406;-1:-1:-1;;;;;;;;;13413:406:22:o;3769:131:23:-;3838:6;3859:10;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;-1:-1:-1;;;;;3859:36:23;;3769:131;-1:-1:-1;3769:131:23:o;7015:220:22:-;1531:13:1;:11;:13::i;:::-;7141:38:22::1;7166:12;7141:24;:38::i;:::-;7185:30;:45:::0;7015:220::o;4511:157:23:-;4597:7;4619:44;4656:6;4619:10;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25027:193:22;25136:7;25160:55;25177:37;25207:6;25177:29;:37::i;:::-;25160:16;:55::i;16746:658::-;16816:5;16829:18;16850:17;:15;:17::i;:::-;16955:22;:35;16829:38;;-1:-1:-1;2580:36:46;;;16955:364:22;;;-1:-1:-1;17270:35:22;;-1:-1:-1;;;;;17270:35:22;:49;16955:364;16873:501;;;;-1:-1:-1;;;16873:501:22;;;;;;;;;;;;17387:12;16746:658;-1:-1:-1;16746:658:22:o;9120:146:23:-;9198:5;9218:43;9244:15;9218:10;:43::i;12110:132::-;12195:4;12214:23;:3;:21;:23::i;27705:286:22:-;27837:16;:35;27799:34;;27771:5;;27799:73;;27784:133;;;;-1:-1:-1;;;27784:133:22;;;;;;;;;;;;27947:34;;27930:56;;27947:38;;:34;:38;:::i;11311:333:23:-;11400:7;11415:9;11427:14;11437:3;11427:9;:14::i;:::-;11415:26;;11447:17;11467:20;11482:4;11467:14;:20::i;:::-;11447:40;;11500:21;:35;11543:23;11568:10;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11500:139;;-1:-1:-1;;;;;;11500:139:23;;;;;;;;;;49637:25:66;;;;49678:18;;;49671:34;49721:18;;;49714:34;;;49764:18;;;49757:34;;;11612:21:23;49807:19:66;;;49800:35;49609:19;;11500:139:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;22968:230:22:-;23118:16;:35;23035:7;23099:55;;;:11;:55;;;;;:88;;;23057:136;;:34;:136::i;11811:135:23:-;11897:5;11917:24;:3;:22;:24::i;9697:170::-;9811:9;9837:25;:11;:23;:25::i;3643:122::-;3707:7;3729:10;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:31;;;-1:-1:-1;;;;;3729:31:23;;3643:122;-1:-1:-1;3643:122:23:o;10481:1304:22:-;10589:10;:8;:10::i;:::-;10585:39;;;10609:8;:6;:8::i;:::-;10868:54;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10868:54:22;10964:34;;10928:70;;;11035:51;;11071:15;;;11035:51;:::i;:::-;11004:28;;;:82;11366:33;;11349:55;;11366:37;;11402:1;11366:37;:::i;11349:55::-;11322:24;;;:82;11456:28;;;;11439:46;;:16;:46::i;:::-;11410:26;;;;:75;;;;11517:206;-1:-1:-1;;;11517:206:22;;11492:22;;11517:12;;:33;;:206;;11558:11;;11577:5;;11410:13;;11611:23;;11642:16;;11666:18;;11692:5;;-1:-1:-1;;;3380:32:22;11517:206;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11734:46;;11492:231;;-1:-1:-1;11766:13:22;;;;;11492:231;;11734:46;;;;;10579:1206;;10481:1304;:::o;9366:143:23:-;9443:4;9462:42;9487:15;9462:9;:42::i;3904:132::-;3973:7;3995:10;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;28560:1367:22:-;28700:34;;:16;28661:35;28638:4;;28661:73;;:154;;-1:-1:-1;28785:30:22;;28746:16;:35;:69;;28661:154;28650:199;;;-1:-1:-1;28837:5:22;;28560:1367;-1:-1:-1;28560:1367:22:o;28650:199::-;28855:16;28874:14;28884:3;28874:9;:14::i;:::-;28938:34;;28855:33;;-1:-1:-1;28894:24:22;;28921:56;;28938:38;;:34;:38;:::i;28921:56::-;28894:83;;28983:28;29014:35;29030:18;29014:15;:35::i;:::-;28983:66;;29417:17;29437:124;:11;29457:104;:56;:23;29483:30;29510:1;29483:15;:30::i;29457:56::-;29534:26;29457:104;:::i;:::-;-1:-1:-1;2041:33:46;1976:101;29437:124:22;29417:144;;29568:16;29587:70;:11;29601:56;:23;29627:30;29654:1;29627:15;:30::i;29587:70::-;:137;;;;-1:-1:-1;29667:22:22;:35;2470:36:46;;29667:57:22;29587:200;;;;-1:-1:-1;29734:39:22;;-1:-1:-1;;;;;29734:39:22;:53;;29587:200;29568:219;;29798:12;:27;;;;29814:11;29798:27;29794:112;;;-1:-1:-1;29894:5:22;;28560:1367;-1:-1:-1;;;;;;28560:1367:22:o;29794:112::-;-1:-1:-1;29918:4:22;;28560:1367;-1:-1:-1;;;;;;28560:1367:22:o;5204:311:23:-;-1:-1:-1;;;;;;;;;;;;;;;;;5335:16:23;5354:44;5391:6;5354:10;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:44;5335:63;;5417:93;;;;;;;;5441:10;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5441:38:23;;;;;;;:28;;;;;:38;;;;;;;;:47;;;;;;5417:93;;;;;;;5404:106;5204:311;-1:-1:-1;;5204:311:23:o;8131:557::-;8196:17;8216;:15;:17::i;:::-;8239:23;8265:43;;;:23;:43;;;;;8319:16;;;;8196:37;;-1:-1:-1;8265:43:23;8319:21;;8315:369;;8369:73;8405:23;8430:11;8369:35;:73::i;:::-;8350:16;;;:92;8502:29;8519:11;8502:16;:29::i;:::-;8467:23;:32;;:64;;;8450:5;:14;;:81;;;;8557:21;:38;8605:10;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8630:16;;;;8557:120;;-1:-1:-1;;;;;;8557:120:23;;;;;;;;;;40414:25:66;;;;40455:18;;;40448:34;8648:21:23;40498:18:66;;;40491:34;40387:18;;8557:120:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8557:120:23;;;;;;;;;;;;:::i;:::-;8539:138;;;;:5;;:138;;;;;;:::i;:::-;;8315:369;8190:498;;8131:557::o;7416:191::-;7501:7;7523:79;7559:23;7584:17;:15;:17::i;2603:330::-;2717:4;2853:12;:10;:12::i;:::-;2878:50;;-1:-1:-1;;;2878:50:23;;-1:-1:-1;;;;;28673:32:66;;;2878:50:23;;;28655:51:66;28742:32;;28722:18;;;28715:60;2878:10:23;;:27;;28628:18:66;;2878:50:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2543:215:1:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:1;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:1;;2700:1:::1;2672:31;::::0;::::1;7844:51:66::0;7817:18;;2672:31:1::1;7673:228:66::0;2623:91:1::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;6267:304:22:-;1531:13:1;:11;:13::i;:::-;6405:9:22::1;6400:149;6424:5;:12;6420:1;:16;6400:149;;;6451:91;6467:5;6473:1;6467:8;;;;;;;;:::i;:::-;;;;;;;:17;;;6486:5;6492:1;6486:8;;;;;;;;:::i;:::-;;;;;;;:17;;;6505:5;6511:1;6505:8;;;;;;;;:::i;:::-;;;;;;;:19;;;6526:5;6532:1;6526:8;;;;;;;;:::i;:::-;;;;;;;:15;;;6451;:91::i;:::-;6438:3;;6400:149;;;;6554:12;:10;:12::i;4872:175:23:-:0;4966:20;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4966:20:23;5003:10;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5003:39:23;;;;;;;:28;;;;;:39;;;;;;;;;4996:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5003:39;4996:46;;;;-1:-1:-1;;;4996:46:23;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;4996:46:23;4872:175;-1:-1:-1;;4872:175:23:o;29931:653:22:-;29989:22;;29982:29;;;;;;;;;;;;-1:-1:-1;;;;;;29982:29:22;;;;;;;;;;;;;;30036:16;:35;;30475:34;;30437:72;;;;30521:58;;;10210:25:66;;;10266:2;10251:18;;10244:34;;;30036:35:22;;30521:58;;10183:18:66;30521:58:22;;;;;;;29958:626;29931:653::o;559:149:42:-;647:7;669:34;691:11;669:21;:34::i;368:176:43:-;433:7;476:54;532:5;465:73;;;;;;;;;:::i;:::-;;;;;;;;;;;;;455:84;;;;;;448:91;;368:176;;;:::o;31123:1039:22:-;31395:26;31424:28;31439:12;31424:14;:28::i;:::-;:115;;31504:16;:35;31424:115;;;31461:34;;31424:115;31598:372;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31857:7;31598:372;;;;-1:-1:-1;;;;;31890:16:22;31598:372;;;;;31937:4;31598:372;;31937:24;31598:372;;;;;;;31546:456;;-1:-1:-1;;;31546:456:22;;31395:144;;-1:-1:-1;31546:12:22;;:44;;:456;;31978:11;;31546:456;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32008:149;32072:7;:23;;;:34;;;32109:11;32122:7;32131:12;32145:6;32008:46;:149::i;34043:920::-;34174:15;;:::i;:::-;34199:32;34234:11;34199:32;34253:16;34268:1;34253:12;:16;:::i;:::-;34234:36;;;;;;;;;;;:46;;34199:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34293:665;;;;;;;;34461:490;;;;;;;;34493:47;34524:15;34493:30;:47::i;:::-;34461:490;;;34574:38;;;;34461:490;;;34574:110;;34635:39;;;;34574:49;:110::i;:::-;34461:490;;;;34720:12;;;;:5;:12;:::i;:::-;:27;;34740:6;;34733;;34720:27;:::i;:::-;34712:36;;;:::i;:::-;34461:490;;34788:43;;;;34461:490;;;;;34788:113;;34854:17;;;:37;34788:54;:113::i;:::-;34461:490;;;;;;;;;34293:665;;;34319:13;;34293:665;;;;34351:15;;;34293:665;;;;;;34412:12;;;;34319:5;34412:12;:::i;:::-;:27;;34432:6;;34425;;34412:27;:::i;:::-;34404:36;;;:::i;:::-;34293:665;;34286:672;34043:920;-1:-1:-1;;;;;34043:920:22:o;2917:1192:50:-;2990:7;2999;3028:1;3018:7;:11;3014:45;;;-1:-1:-1;3047:1:50;;;;-1:-1:-1;2917:1192:50;-1:-1:-1;2917:1192:50:o;3014:45::-;3065:19;3123:1;3065:19;;;3232:630;3239:12;;3232:630;;3364:7;3343:18;:28;3375:1;3343:33;3339:132;;3411:1;3388:24;;;;;3422:22;;;;:::i;:::-;;;;3454:8;;3339:132;3536:11;3551:1;3536:16;3532:63;;-1:-1:-1;3575:20:50;3532:63;3659:28;3669:18;3659:7;:28;:::i;:::-;3691:1;3659:33;3655:80;;3715:20;3694:41;;3655:80;3743:29;3754:18;3743:29;;:::i;:::-;;-1:-1:-1;3803:1:50;3780:24;;;;;3812:22;;;;:::i;:::-;;;;3842:13;;;;;:::i;:::-;;;;3232:630;;;3871:11;3886:1;3871:16;3867:117;;-1:-1:-1;3938:18:50;;;-1:-1:-1;2917:1192:50;-1:-1:-1;;;;;2917:1192:50:o;3867:117::-;3989:11;4038:1;4003:32;4024:11;4003:18;:32;:::i;:::-;:36;;;;:::i;:::-;3989:50;-1:-1:-1;4045:11:50;4059:22;:18;4080:1;4059:22;:::i;:::-;4095:3;;4045:36;;-1:-1:-1;2917:1192:50;;-1:-1:-1;;;;;;;;2917:1192:50:o;34967:834:22:-;35063:34;;35048:49;;:112;;;;-1:-1:-1;35125:16:22;:35;35109:51;;;35048:112;35037:760;;;35175:34;:49;;;35362:11;35376:30;35212:12;35376:16;:30::i;:::-;35362:44;-1:-1:-1;35427:24:22;;;:109;;-1:-1:-1;35500:22:22;:35;35465:71;;35427:109;35414:377;;;35580:202;;;;;;;;;;;-1:-1:-1;35580:202:22;;;;;;;;;;;;;;;;;;35761:10;35580:202;;;;;;;35555:22;:227;;;;;;;;;;;;;-1:-1:-1;;;;;;35555:227:22;;;;;;;;;;;;;;;;;-1:-1:-1;34967:834:22:o;1205:128:45:-;-1:-1:-1;;;;;;;;;;;1302:26:45;1262:7;;1284:44;;1296:2;1284:44;:::i;13873:460:23:-;14056:17;14076:21;14091:5;14076:14;:21::i;:::-;14056:41;;14103:21;:48;14159:23;14190:10;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14221:5;14234:11;14253;14272:7;14287:6;14301:21;14103:225;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14050:283;13873:460;;;;:::o;10243:273:19:-;10306:16;10334:22;10359:19;10367:3;10359:7;:19::i;1652:113:46:-;1701:4;1728:33;1758:2;1740;1728:33;:::i;1537:113::-;1586:4;1613:33;1643:2;1625;1613:33;:::i;1796:162:1:-;1710:6;;-1:-1:-1;;;;;1710:6:1;735:10:8;1855:23:1;1851:101;;1901:40;;-1:-1:-1;;;1901:40:1;;735:10:8;1901:40:1;;;7844:51:66;7817:18;;1901:40:1;7673:228:66;2912:187:1;3004:6;;;-1:-1:-1;;;;;3020:17:1;;;-1:-1:-1;;;;;;3020:17:1;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;1833:136:45:-;-1:-1:-1;;;;;;;;;;;1937:26:45;1888:5;;1919:44;;1931:2;1919:44;:::i;5727:547:47:-;5859:7;5893:6;5904:1;5880:25;5876:70;;-1:-1:-1;;;5915:24:47;;5876:70;5951:18;5972:39;;;;;;;;;;:50;;;6032:15;;6028:53;;6064:10;-1:-1:-1;6057:17:47;;6028:53;6100:24;:31;6132:22;:6;6152:1;6132:22;:::i;:::-;6100:55;;;;;;;;;;;:64;;;6087:77;;6174:10;6188:1;6174:15;6170:53;;6206:10;-1:-1:-1;6199:17:47;;6170:53;-1:-1:-1;;;6236:33:47;;;;5727:547::o;6021:126:13:-;6067:13;6099:41;:5;6126:13;6099:26;:41::i;6473:135::-;6522:13;6554:47;:8;6584:16;6554:29;:47::i;9090:115:19:-;9153:7;9179:19;9187:3;4556:18;;4474:107;9547:156;9621:7;9671:22;9675:3;9687:5;9671:3;:22::i;417:138:42:-;497:7;519:31;543:6;519:23;:31::i;4917:176:13:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;3501:4:14;3495:11;-1:-1:-1;;;3519:23:14;;3571:4;3562:14;;3555:39;;;;3623:4;3614:14;;3607:34;3679:4;3664:20;;;3326:374;993:208:45;-1:-1:-1;;;;;;;;;;;1177:18:45;-1:-1:-1;;;;;;;;;;;1156:17:45;;1057:4;;1177:18;1133:40;;1150:2;1133:40;:::i;:::-;1132:63;;;;:::i;835:142:42:-;909:7;931:41;961:10;931:29;:41::i;1582:247:45:-;-1:-1:-1;;;;;;;;;;;1799:18:45;-1:-1:-1;;;;;;;;;;;1777:19:45;1647:5;;-1:-1:-1;;;;;;;;;;;464:31:45;1777:40;;1799:18;1777:40;:::i;:::-;1755:17;;1732:40;;1749:2;1732:40;:::i;773:216::-;-1:-1:-1;;;;;;;;;;;911:17:45;;-1:-1:-1;;;;;;;;;;;965:18:45;826:9;;464:31;896:88;;947:36;;959:2;947:36;:::i;1337:130::-;-1:-1:-1;;;;;;;;;;;1435:26:45;1387:4;;1416:45;;1429:2;1416:45;:::i;14644:145:23:-;14706:7;14757:6;14765:16;14746:36;;;;;;;;10210:25:66;;;10266:2;10251:18;;10244:34;10198:2;10183:18;;10010:274;14746:36:23;;;;-1:-1:-1;;14746:36:23;;;;;;;;;14736:47;;14746:36;14736:47;;;;;14644:145;-1:-1:-1;;14644:145:23:o;4878:218:40:-;4966:7;5065:11;:26;;;5033:11;:23;;;5011:11;:19;;;4988:11;:20;;;:42;;;;:::i;:::-;:68;;;;:::i;:::-;:103;;;;:::i;32991:1012:22:-;33279:16;33298:23;33308:12;33298:9;:23::i;:::-;33279:42;-1:-1:-1;33279:42:22;2470:36:46;;;;33327:86:22;;;;-1:-1:-1;;;33327:86:22;;;;;10210:25:66;;;;10251:18;;;10244:34;10183:18;;33327:86:22;10010:274:66;33327:86:22;;;33720:17;33740:38;33751:26;33771:5;33751:19;:26::i;33740:38::-;33720:58;;33784:18;33805:24;33816:12;33805:10;:24::i;:::-;33784:45;-1:-1:-1;33784:45:22;2470:36:46;;;;33835:92:22;;;;-1:-1:-1;;;33835:92:22;;;;;10210:25:66;;;;10251:18;;;10244:34;10183:18;;33835:92:22;10010:274:66;33835:92:22;;;33934:64;33962:5;33969:11;33982:7;33991:6;33934:27;:64::i;981:183:42:-;1060:7;1082:77;1117:10;:19;;;1093:10;:21;;;:43;;;;:::i;:::-;1138:20;927:9:40;1138:20:42;:::i;:::-;778:7;800:26;819:2;823;800:18;:26::i;5581:109:19:-;5637:16;5672:3;:11;;5665:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5581:109;;;:::o;3358:267:10:-;3452:13;1390:66;3481:46;;3477:142;;3550:15;3559:5;3550:8;:15::i;:::-;3543:22;;;;3477:142;3603:5;3596:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4923:118:19;4990:7;5016:3;:11;;5028:5;5016:18;;;;;;;;:::i;:::-;;;;;;;;;5009:25;;4923:118;;;;:::o;1151:312:38:-;1219:7;1010:136;1314:6;:19;;;1343:6;:21;;;1374:6;:17;;;1401:6;:13;;;1424:6;:20;;;1258:194;;;;;;;;;;;;64252:25:66;;;64308:2;64293:18;;64286:34;;;;64351:2;64336:18;;64329:34;;;;64394:2;64379:18;;64372:34;-1:-1:-1;;;;;64443:32:66;64437:3;64422:19;;64415:61;64525:10;64513:23;64463:3;64492:19;;64485:52;64239:3;64224:19;;63914:629;3845:262:13;3898:7;3929:4;-1:-1:-1;;;;;3938:11:13;3921:28;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;-1:-1:-1;4007:22:13;;3845:262::o;3917:184::-;4067:23;4204:80;;;2079:95;4204:80;;;64807:25:66;4226:11:13;64848:18:66;;;64841:34;;;;4239:14:13;64891:18:66;;;64884:34;4255:13:13;64934:18:66;;;64927:34;4278:4:13;64977:19:66;;;64970:61;4168:7:13;;64779:19:66;;4204:80:13;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;4498:186:40;4572:7;4594:85;588:11;4635:10;712:12;4594:15;:85::i;4066:243::-;4132:7;4157:1;4151:2;:7;4147:54;;4180:14;:2;:12;:14::i;:::-;4175:19;;:2;:19;:::i;4147:54::-;2436:3:18;2431:8;;;2576;;;2575:17;4250:8:40;;;4246:44;;;4275:8;4280:3;4275:2;:8;:::i;:::-;4268:15;;;;;4246:44;-1:-1:-1;4303:1:40;;4066:243;-1:-1:-1;;;4066:243:40:o;2078:378:10:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2300:14;;;2311:2;2300:14;;;;;;;;;2162:30;;-1:-1:-1;2280:17:10;;2300:14;;;;;;;;;-1:-1:-1;;;2363:16:10;;;-1:-1:-1;2408:4:10;2399:14;;2392:28;;;;-1:-1:-1;2363:16:10;2078:378::o;7222:454:40:-;7340:7;7369:1;7340:7;;7431:22;7441:12;7431:7;:22;:::i;:::-;7400:53;;7459:179;7466:24;;7459:179;;7500:30;7510:20;7500:30;;:::i;:::-;;-1:-1:-1;7600:16:40;7615:1;7600:12;:16;:::i;:::-;7562:33;7585:10;7562:20;:33;:::i;:::-;7561:56;;;;:::i;:::-;7538:79;-1:-1:-1;7625:6:40;7630:1;7625:6;;:::i;:::-;;;7459:179;;;7650:21;7659:12;7650:6;:21;:::i;:::-;7643:28;7222:454;-1:-1:-1;;;;;;;7222:454:40:o;17171:193:17:-;17227:7;17258:1;17250:5;:9;17246:81;;;17282:34;;-1:-1:-1;;;17282:34:17;;;;;951:25:66;;;924:18;;17282:34:17;805:177:66;17246:81:17;-1:-1:-1;17351:5:17;17171:193::o;2528:245:10:-;2589:7;2661:4;2625:40;;2688:2;2679:11;;2675:69;;;2713:20;;-1:-1:-1;;;2713:20:10;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:131:66;-1:-1:-1;;;;;89:31:66;;79:42;;69:70;;135:1;132;125:12;150:650;236:6;244;252;260;313:3;301:9;292:7;288:23;284:33;281:53;;;330:1;327;320:12;281:53;369:9;356:23;388:31;413:5;388:31;:::i;:::-;438:5;-1:-1:-1;495:2:66;480:18;;467:32;508:33;467:32;508:33;:::i;:::-;560:7;-1:-1:-1;619:2:66;604:18;;591:32;632:33;591:32;632:33;:::i;:::-;150:650;;;;-1:-1:-1;684:7:66;;764:2;749:18;736:32;;-1:-1:-1;;150:650:66:o;987:367::-;1055:6;1063;1116:2;1104:9;1095:7;1091:23;1087:32;1084:52;;;1132:1;1129;1122:12;1084:52;1171:9;1158:23;1190:31;1215:5;1190:31;:::i;:::-;1240:5;1318:2;1303:18;;;;1290:32;;-1:-1:-1;;;987:367:66:o;1359:226::-;1418:6;1471:2;1459:9;1450:7;1446:23;1442:32;1439:52;;;1487:1;1484;1477:12;1439:52;-1:-1:-1;1532:23:66;;1359:226;-1:-1:-1;1359:226:66:o;2367:160::-;2431:5;2476:3;2467:6;2462:3;2458:16;2454:26;2451:46;;;2493:1;2490;2483:12;2451:46;-1:-1:-1;2515:6:66;2367:160;-1:-1:-1;2367:160:66:o;2532:127::-;2593:10;2588:3;2584:20;2581:1;2574:31;2624:4;2621:1;2614:15;2648:4;2645:1;2638:15;2664:253;2736:2;2730:9;2778:4;2766:17;;-1:-1:-1;;;;;2798:34:66;;2834:22;;;2795:62;2792:88;;;2860:18;;:::i;:::-;2896:2;2889:22;2664:253;:::o;2922:251::-;2994:2;2988:9;;;3024:15;;-1:-1:-1;;;;;3054:34:66;;3090:22;;;3051:62;3048:88;;;3116:18;;:::i;3178:252::-;3250:2;3244:9;3292:3;3280:16;;-1:-1:-1;;;;;3311:34:66;;3347:22;;;3308:62;3305:88;;;3373:18;;:::i;3435:255::-;3507:2;3501:9;3549:6;3537:19;;-1:-1:-1;;;;;3571:34:66;;3607:22;;;3568:62;3565:88;;;3633:18;;:::i;3695:253::-;3767:2;3761:9;3809:4;3797:17;;-1:-1:-1;;;;;3829:34:66;;3865:22;;;3826:62;3823:88;;;3891:18;;:::i;3953:275::-;4024:2;4018:9;4089:2;4070:13;;-1:-1:-1;;4066:27:66;4054:40;;-1:-1:-1;;;;;4109:34:66;;4145:22;;;4106:62;4103:88;;;4171:18;;:::i;:::-;4207:2;4200:22;3953:275;;-1:-1:-1;3953:275:66:o;4233:192::-;4302:4;-1:-1:-1;;;;;4327:6:66;4324:30;4321:56;;;4357:18;;:::i;:::-;-1:-1:-1;4402:1:66;4398:14;4414:4;4394:25;;4233:192::o;4430:118::-;4516:5;4509:13;4502:21;4495:5;4492:32;4482:60;;4538:1;4535;4528:12;4553:156;4619:20;;4679:4;4668:16;;4658:27;;4648:55;;4699:1;4696;4689:12;4714:1220;4777:5;4830:3;4823:4;4815:6;4811:17;4807:27;4797:55;;4848:1;4845;4838:12;4797:55;4888:6;4875:20;4915:73;4931:56;4980:6;4931:56;:::i;:::-;4915:73;:::i;:::-;5012:3;5036:6;5031:3;5024:19;5068:4;5063:3;5059:14;5052:21;;5129:4;5119:6;5116:1;5112:14;5104:6;5100:27;5096:38;5082:52;;5157:3;5149:6;5146:15;5143:35;;;5174:1;5171;5164:12;5143:35;5210:4;5202:6;5198:17;5224:679;5240:6;5235:3;5232:15;5224:679;;;5318:4;5312:3;5307;5303:13;5299:24;5296:44;;;5336:1;5333;5326:12;5296:44;5366:22;;:::i;:::-;5429:3;5416:17;5446:30;5468:7;5446:30;:::i;:::-;5489:22;;5549:32;5575:4;5566:14;;5549:32;:::i;:::-;5542:4;5531:16;;;5524:58;;;;5657:2;5648:12;;;5635:26;5681:14;;;5674:31;5780:2;5771:12;;;5758:26;5804:14;;;5797:31;5841:18;;;5879:14;;;;;5266:4;5257:14;5224:679;;;-1:-1:-1;5921:7:66;4714:1220;-1:-1:-1;;;;;4714:1220:66:o;5939:347::-;5990:8;6000:6;6054:3;6047:4;6039:6;6035:17;6031:27;6021:55;;6072:1;6069;6062:12;6021:55;-1:-1:-1;6095:20:66;;-1:-1:-1;;;;;6127:30:66;;6124:50;;;6170:1;6167;6160:12;6124:50;6207:4;6199:6;6195:17;6183:29;;6259:3;6252:4;6243:6;6235;6231:19;6227:30;6224:39;6221:59;;;6276:1;6273;6266:12;6291:1251;6484:6;6492;6500;6508;6516;6524;6577:3;6565:9;6556:7;6552:23;6548:33;6545:53;;;6594:1;6591;6584:12;6545:53;6634:9;6621:23;-1:-1:-1;;;;;6659:6:66;6656:30;6653:50;;;6699:1;6696;6689:12;6653:50;6722:71;6785:7;6776:6;6765:9;6761:22;6722:71;:::i;:::-;6712:81;;;6846:2;6835:9;6831:18;6818:32;-1:-1:-1;;;;;6865:8:66;6862:32;6859:52;;;6907:1;6904;6897:12;6859:52;6930:72;6994:7;6983:8;6972:9;6968:24;6930:72;:::i;:::-;6920:82;;;7055:2;7044:9;7040:18;7027:32;-1:-1:-1;;;;;7074:8:66;7071:32;7068:52;;;7116:1;7113;7106:12;7068:52;7155:60;7207:7;7196:8;7185:9;7181:24;7155:60;:::i;:::-;7234:8;;-1:-1:-1;7129:86:66;-1:-1:-1;;7322:2:66;7307:18;;7294:32;-1:-1:-1;;;;;7338:32:66;;7335:52;;;7383:1;7380;7373:12;7335:52;7422:60;7474:7;7463:8;7452:9;7448:24;7422:60;:::i;:::-;6291:1251;;;;-1:-1:-1;6291:1251:66;;-1:-1:-1;6291:1251:66;;7501:8;;6291:1251;-1:-1:-1;;;6291:1251:66:o;8393:637::-;8583:2;8595:21;;;8665:13;;8568:18;;;8687:22;;;8535:4;;8766:15;;;8740:2;8725:18;;;8535:4;8809:195;8823:6;8820:1;8817:13;8809:195;;;8888:13;;-1:-1:-1;;;;;8884:39:66;8872:52;;8953:2;8979:15;;;;8944:12;;;;8920:1;8838:9;8809:195;;;-1:-1:-1;9021:3:66;;8393:637;-1:-1:-1;;;;;8393:637:66:o;9035:170::-;9109:5;9154:3;9145:6;9140:3;9136:16;9132:26;9129:46;;;9171:1;9168;9161:12;9210:413;9351:6;9359;9412:3;9400:9;9391:7;9387:23;9383:33;9380:53;;;9429:1;9426;9419:12;9380:53;9474:23;;;-1:-1:-1;9540:77:66;9609:7;9604:2;9589:18;;9540:77;:::i;:::-;9530:87;;9210:413;;;;;:::o;9628:377::-;9727:6;9735;9788:2;9776:9;9767:7;9763:23;9759:32;9756:52;;;9804:1;9801;9794:12;9756:52;-1:-1:-1;;9849:23:66;;;9969:2;9954:18;;;9941:32;;-1:-1:-1;9628:377:66:o;10851:1540::-;11083:6;11091;11099;11107;11115;11123;11131;11175:9;11166:7;11162:23;11205:3;11201:2;11197:12;11194:32;;;11222:1;11219;11212:12;11194:32;11262:9;11249:23;-1:-1:-1;;;;;11287:6:66;11284:30;11281:50;;;11327:1;11324;11317:12;11281:50;11366:58;11416:7;11407:6;11396:9;11392:22;11366:58;:::i;:::-;11443:8;;-1:-1:-1;11340:84:66;-1:-1:-1;;11531:2:66;11516:18;;11503:32;-1:-1:-1;;;;;11547:32:66;;11544:52;;;11592:1;11589;11582:12;11544:52;11615:72;11679:7;11668:8;11657:9;11653:24;11615:72;:::i;:::-;11605:82;-1:-1:-1;;11756:2:66;11741:18;;;11728:32;;-1:-1:-1;11857:2:66;11842:18;;11829:32;;-1:-1:-1;11960:3:66;11945:19;;11932:33;;-1:-1:-1;;;12007:17:66;;12003:26;12000:46;;;12042:1;12039;12032:12;12000:46;;12070:22;;:::i;:::-;12144:3;12133:9;12129:19;12116:33;12158:30;12180:7;12158:30;:::i;:::-;12197:24;;12273:3;12258:19;;12245:33;12287:30;12245:33;12287:30;:::i;:::-;12351:7;12346:2;12337:7;12333:16;12326:33;;12378:7;12368:17;;;10851:1540;;;;;;;;;;:::o;13789:247::-;13848:6;13901:2;13889:9;13880:7;13876:23;13872:32;13869:52;;;13917:1;13914;13907:12;13869:52;13956:9;13943:23;13975:31;14000:5;13975:31;:::i;14041:268::-;14142:6;14195:3;14183:9;14174:7;14170:23;14166:33;14163:53;;;14212:1;14209;14202:12;14163:53;14235:68;14295:7;14284:9;14235:68;:::i;15024:254::-;14944:12;;14932:25;;15006:4;14995:16;;;14989:23;14973:14;;;14966:47;15214:2;15199:18;;15226:46;14869:150;15283:1407;15527:6;15535;15543;15551;15559;15567;15575;15628:3;15616:9;15607:7;15603:23;15599:33;15596:53;;;15645:1;15642;15635:12;15596:53;15685:9;15672:23;-1:-1:-1;;;;;15710:6:66;15707:30;15704:50;;;15750:1;15747;15740:12;15704:50;15773:71;15836:7;15827:6;15816:9;15812:22;15773:71;:::i;:::-;15763:81;;;15897:2;15886:9;15882:18;15869:32;-1:-1:-1;;;;;15916:8:66;15913:32;15910:52;;;15958:1;15955;15948:12;15910:52;15981:72;16045:7;16034:8;16023:9;16019:24;15981:72;:::i;:::-;15971:82;;;16106:2;16095:9;16091:18;16078:32;-1:-1:-1;;;;;16125:8:66;16122:32;16119:52;;;16167:1;16164;16157:12;16119:52;16206:60;16258:7;16247:8;16236:9;16232:24;16206:60;:::i;:::-;16285:8;;-1:-1:-1;16180:86:66;-1:-1:-1;;16373:2:66;16358:18;;16345:32;-1:-1:-1;;;;;16389:32:66;;16386:52;;;16434:1;16431;16424:12;16386:52;16473:60;16525:7;16514:8;16503:9;16499:24;16473:60;:::i;:::-;16552:8;;-1:-1:-1;16447:86:66;-1:-1:-1;16606:78:66;;-1:-1:-1;16676:7:66;16670:3;16655:19;;16606:78;:::i;:::-;16596:88;;15283:1407;;;;;;;;;;:::o;17145:392::-;17241:6;17249;17302:2;17290:9;17281:7;17277:23;17273:32;17270:52;;;17318:1;17315;17308:12;17270:52;17363:23;;;-1:-1:-1;17462:2:66;17447:18;;17434:32;17475:30;17434:32;17475:30;:::i;:::-;17524:7;17514:17;;;17145:392;;;;;:::o;17542:279::-;17756:3;17741:19;;17769:46;17745:9;17797:6;1671:5;1665:12;1660:3;1653:25;1727:4;1720:5;1716:16;1710:23;1703:4;1698:3;1694:14;1687:47;1783:4;1776:5;1772:16;1766:23;1759:4;1754:3;1750:14;1743:47;1839:4;1832:5;1828:16;1822:23;1815:4;1810:3;1806:14;1799:47;1895:4;1888:5;1884:16;1878:23;1871:4;1866:3;1862:14;1855:47;;;1590:318;18292:289;18334:3;18372:5;18366:12;18399:6;18394:3;18387:19;18455:6;18448:4;18441:5;18437:16;18430:4;18425:3;18421:14;18415:47;18507:1;18500:4;18491:6;18486:3;18482:16;18478:27;18471:38;18570:4;18563:2;18559:7;18554:2;18546:6;18542:15;18538:29;18533:3;18529:39;18525:50;18518:57;;;18292:289;;;;:::o;18586:1238::-;18992:3;18987;18983:13;18975:6;18971:26;18960:9;18953:45;19034:3;19029:2;19018:9;19014:18;19007:31;18934:4;19061:46;19102:3;19091:9;19087:19;19079:6;19061:46;:::i;:::-;19155:9;19147:6;19143:22;19138:2;19127:9;19123:18;19116:50;19189:33;19215:6;19207;19189:33;:::i;:::-;19253:2;19238:18;;19231:34;;;-1:-1:-1;;;;;19302:32:66;;19296:3;19281:19;;19274:61;19322:3;19351:19;;19344:35;;;19416:22;;;19410:3;19395:19;;19388:51;19488:13;;19510:22;;;19560:2;19586:15;;;;-1:-1:-1;19548:15:66;;;;-1:-1:-1;19629:169:66;19643:6;19640:1;19637:13;19629:169;;;19704:13;;19692:26;;19747:2;19773:15;;;;19738:12;;;;19665:1;19658:9;19629:169;;;-1:-1:-1;19815:3:66;;18586:1238;-1:-1:-1;;;;;;;;;;;18586:1238:66:o;20324:409::-;20394:6;20402;20455:2;20443:9;20434:7;20430:23;20426:32;20423:52;;;20471:1;20468;20461:12;20423:52;20511:9;20498:23;-1:-1:-1;;;;;20536:6:66;20533:30;20530:50;;;20576:1;20573;20566:12;20530:50;20615:58;20665:7;20656:6;20645:9;20641:22;20615:58;:::i;:::-;20692:8;;20589:84;;-1:-1:-1;20324:409:66;-1:-1:-1;;;;20324:409:66:o;20738:420::-;20791:3;20829:5;20823:12;20856:6;20851:3;20844:19;20888:4;20883:3;20879:14;20872:21;;20927:4;20920:5;20916:16;20950:1;20960:173;20974:6;20971:1;20968:13;20960:173;;;21035:13;;21023:26;;21078:4;21069:14;;;;21106:17;;;;20996:1;20989:9;20960:173;;;-1:-1:-1;21149:3:66;;20738:420;-1:-1:-1;;;;20738:420:66:o;21163:403::-;21398:2;21387:9;21380:21;21361:4;21418:56;21470:2;21459:9;21455:18;21447:6;21418:56;:::i;:::-;21505:2;21490:18;;21483:34;;;;-1:-1:-1;21548:2:66;21533:18;21526:34;21410:64;21163:403;-1:-1:-1;21163:403:66:o;21571:1478::-;21740:6;21748;21756;21764;21772;21780;21788;21796;21849:3;21837:9;21828:7;21824:23;21820:33;21817:53;;;21866:1;21863;21856:12;21817:53;21911:23;;;-1:-1:-1;21992:3:66;21977:19;;22008:15;;;22005:35;;;22036:1;22033;22026:12;22005:35;22074:2;22059:18;;;-1:-1:-1;22100:16:66;-1:-1:-1;;;;;22128:30:66;;22125:50;;;22171:1;22168;22161:12;22125:50;22194:22;;22247:4;22239:13;;22235:27;-1:-1:-1;22225:55:66;;22276:1;22273;22266:12;22225:55;22316:2;22303:16;-1:-1:-1;;;;;22334:6:66;22331:30;22328:50;;;22374:1;22371;22364:12;22328:50;22427:7;22422:2;22412:6;22409:1;22405:14;22401:2;22397:23;22393:32;22390:45;22387:65;;;22448:1;22445;22438:12;22387:65;22479:2;22471:11;;;;;-1:-1:-1;22501:6:66;-1:-1:-1;22560:3:66;22545:19;;22532:33;-1:-1:-1;;;;;22577:32:66;;22574:52;;;22622:1;22619;22612:12;22574:52;22661:60;22713:7;22702:8;22691:9;22687:24;22661:60;:::i;:::-;22740:8;;-1:-1:-1;22635:86:66;-1:-1:-1;;22828:3:66;22813:19;;22800:33;-1:-1:-1;;;;;22845:32:66;;22842:52;;;22890:1;22887;22880:12;22842:52;22929:60;22981:7;22970:8;22959:9;22955:24;22929:60;:::i;:::-;21571:1478;;;;-1:-1:-1;21571:1478:66;;-1:-1:-1;21571:1478:66;;;;;;23008:8;-1:-1:-1;;;21571:1478:66:o;23054:261::-;23233:2;23222:9;23215:21;23196:4;23253:56;23305:2;23294:9;23290:18;23282:6;23253:56;:::i;23544:121::-;23629:10;23622:5;23618:22;23611:5;23608:33;23598:61;;23655:1;23652;23645:12;23670:888;23763:6;23823:3;23811:9;23802:7;23798:23;23794:33;23839:2;23836:22;;;23854:1;23851;23844:12;23836:22;-1:-1:-1;23896:22:66;;:::i;:::-;23963:23;;23995:22;;24090:2;24075:18;;;24062:32;24110:14;;;24103:31;24207:2;24192:18;;;24179:32;24227:14;;;24220:31;24303:2;24288:18;;24275:32;24316:33;24275:32;24316:33;:::i;:::-;24376:2;24365:14;;24358:31;24441:3;24426:19;;24413:33;24455:32;24413:33;24455:32;:::i;:::-;24514:3;24503:15;;24496:32;24507:5;23670:888;-1:-1:-1;;;23670:888:66:o;25011:405::-;25115:6;25168:2;25156:9;25147:7;25143:23;25139:32;25136:52;;;25184:1;25181;25174:12;25136:52;25224:9;25211:23;-1:-1:-1;;;;;25249:6:66;25246:30;25243:50;;;25289:1;25286;25279:12;25243:50;25312:22;;25368:3;25350:16;;;25346:26;25343:46;;;25385:1;25382;25375:12;25787:388;25855:6;25863;25916:2;25904:9;25895:7;25891:23;25887:32;25884:52;;;25932:1;25929;25922:12;25884:52;25971:9;25958:23;25990:31;26015:5;25990:31;:::i;:::-;26040:5;-1:-1:-1;26097:2:66;26082:18;;26069:32;26110:33;26069:32;26110:33;:::i;26180:1566::-;26299:6;26352:2;26340:9;26331:7;26327:23;26323:32;26320:52;;;26368:1;26365;26358:12;26320:52;26408:9;26395:23;-1:-1:-1;;;;;26433:6:66;26430:30;26427:50;;;26473:1;26470;26463:12;26427:50;26496:22;;26549:4;26541:13;;26537:27;-1:-1:-1;26527:55:66;;26578:1;26575;26568:12;26527:55;26618:2;26605:16;26641:73;26657:56;26706:6;26657:56;:::i;26641:73::-;26736:3;26760:6;26755:3;26748:19;26792:2;26787:3;26783:12;26776:19;;26847:2;26837:6;26834:1;26830:14;26826:2;26822:23;26818:32;26804:46;;26873:7;26865:6;26862:19;26859:39;;;26894:1;26891;26884:12;26859:39;26926:2;26922;26918:11;26907:22;;26938:778;26954:6;26949:3;26946:15;26938:778;;;27036:4;27030:3;27021:7;27017:17;27013:28;27010:48;;;27054:1;27051;27044:12;27010:48;27084:22;;:::i;:::-;27147:3;27134:17;27164:33;27189:7;27164:33;:::i;:::-;27210:22;;27282:2;27273:12;;27260:26;27299:33;27260:26;27299:33;:::i;:::-;27363:2;27352:14;;27345:31;27426:2;27417:12;;27404:26;27443:33;27404:26;27443:33;:::i;:::-;27507:2;27496:14;;27489:31;27595:2;27586:12;;;27573:26;27619:14;;;27612:31;27656:18;;26980:4;26971:14;;;;27703:2;27694:12;;;;26938:778;;;27735:5;26180:1566;-1:-1:-1;;;;;;26180:1566:66:o;27751:127::-;27812:10;27807:3;27803:20;27800:1;27793:31;27843:4;27840:1;27833:15;27867:4;27864:1;27857:15;27883:593;28112:13;;28094:32;;28186:4;28174:17;;;28168:24;-1:-1:-1;;;;;28164:50:66;;;28142:20;;;28135:80;;;;28275:4;28263:17;;;28257:24;28253:50;;;28231:20;;;28224:80;28351:4;28339:17;;28333:24;28081:3;28066:19;;;28393:1;28376:19;;28366:53;;28399:18;;:::i;:::-;28457:12;28450:4;28439:9;28435:20;28428:42;;27883:593;;;;:::o;29808:266::-;29896:6;29891:3;29884:19;29948:6;29941:5;29934:4;29929:3;29925:14;29912:43;-1:-1:-1;30000:1:66;29975:16;;;29993:4;29971:27;;;29964:38;;;;30056:2;30035:15;;;-1:-1:-1;;30031:29:66;30022:39;;;30018:50;;29808:266::o;30079:333::-;30266:2;30255:9;30248:21;30229:4;30286:61;30343:2;30332:9;30328:18;30320:6;30312;30286:61;:::i;:::-;30278:69;;30397:6;30390:14;30383:22;30378:2;30367:9;30363:18;30356:50;30079:333;;;;;;:::o;30417:729::-;30482:5;30535:3;30528:4;30520:6;30516:17;30512:27;30502:55;;30553:1;30550;30543:12;30502:55;30586:6;30580:13;30613:73;30629:56;30678:6;30629:56;:::i;30613:73::-;30710:3;30734:6;30729:3;30722:19;30766:4;30761:3;30757:14;30750:21;;30827:4;30817:6;30814:1;30810:14;30802:6;30798:27;30794:38;30780:52;;30855:3;30847:6;30844:15;30841:35;;;30872:1;30869;30862:12;30841:35;30908:4;30900:6;30896:17;30922:193;30938:6;30933:3;30930:15;30922:193;;;31030:10;;31053:18;;31100:4;31091:14;;;;30955;30922:193;;31151:583;31264:6;31272;31280;31333:2;31321:9;31312:7;31308:23;31304:32;31301:52;;;31349:1;31346;31339:12;31301:52;31382:9;31376:16;-1:-1:-1;;;;;31407:6:66;31404:30;31401:50;;;31447:1;31444;31437:12;31401:50;31470:72;31534:7;31525:6;31514:9;31510:22;31470:72;:::i;:::-;31604:2;31589:18;;31583:25;31698:2;31683:18;;;31677:25;31460:82;;31583:25;;-1:-1:-1;31677:25:66;31151:583;-1:-1:-1;;;;31151:583:66:o;31739:521::-;31816:4;31822:6;31882:11;31869:25;31976:2;31972:7;31961:8;31945:14;31941:29;31937:43;31917:18;31913:68;31903:96;;31995:1;31992;31985:12;31903:96;32022:33;;32074:20;;;-1:-1:-1;;;;;;32106:30:66;;32103:50;;;32149:1;32146;32139:12;32103:50;32182:4;32170:17;;-1:-1:-1;32213:14:66;32209:27;;;32199:38;;32196:58;;;32250:1;32247;32240:12;32265:252;32430:2;32419:9;32412:21;32393:4;32450:61;32507:2;32496:9;32492:18;32484:6;32476;32450:61;:::i;32522:418::-;32602:5;32650:4;32638:9;32633:3;32629:19;32625:30;32622:50;;;32668:1;32665;32658:12;32622:50;32690:22;;:::i;:::-;32757:16;;32782:22;;32849:2;32834:18;;32828:25;32681:31;;-1:-1:-1;32862:32:66;32828:25;32862:32;:::i;:::-;32921:2;32910:14;;32903:31;32914:5;32522:418;-1:-1:-1;;32522:418:66:o;32945:898::-;33017:5;33056:9;33051:3;33047:19;33086:6;33082:2;33078:15;33075:35;;;33106:1;33103;33096:12;33075:35;33128:22;;:::i;:::-;33119:31;;33173:67;33236:3;33225:9;33173:67;:::i;:::-;33159:82;;33275:6;-1:-1:-1;;33257:16:66;;33253:29;33250:49;;;33295:1;33292;33285:12;33250:49;;33323:22;;:::i;:::-;33370:78;33444:3;33437:4;33426:9;33422:20;33370:78;:::i;:::-;33361:7;33354:95;33485:78;33559:3;33552:4;33541:9;33537:20;33485:78;:::i;:::-;33478:4;33469:7;33465:18;33458:106;33600:77;33673:3;33667;33656:9;33652:19;33600:77;:::i;:::-;33593:4;33584:7;33580:18;33573:105;33714:80;33790:3;33781:6;33770:9;33766:22;33714:80;:::i;:::-;33707:4;33694:18;;33687:108;33822:4;33811:16;;33804:33;33815:5;32945:898;-1:-1:-1;;32945:898:66:o;33848:383::-;33913:5;33961:4;33949:9;33944:3;33940:19;33936:30;33933:50;;;33979:1;33976;33969:12;33933:50;34001:22;;:::i;:::-;34068:16;;34093:22;;34181:2;34166:18;;;34160:25;34201:14;;;34194:31;;;;-1:-1:-1;33992:31:66;33848:383;-1:-1:-1;33848:383:66:o;34236:1066::-;34309:5;34357:6;34345:9;34340:3;34336:19;34332:32;34329:52;;;34377:1;34374;34367:12;34329:52;34399:22;;:::i;:::-;34466:16;;34491:22;;34579:2;34564:18;;;34558:25;34599:14;;;34592:31;34689:2;34674:18;;;34668:25;34709:14;;;34702:31;34799:2;34784:18;;;34778:25;34819:14;;;34812:31;34909:3;34894:19;;;34888:26;34930:15;;;34923:32;35000:3;34985:19;;34979:26;34390:31;;-1:-1:-1;35014:33:66;34979:26;35014:33;:::i;:::-;35074:3;35063:15;;35056:32;35154:3;35139:19;;;35133:26;35175:15;;;35168:32;35233:62;35291:3;35285;35270:19;;35233:62;:::i;:::-;35227:3;35220:5;35216:15;35209:87;34236:1066;;;;:::o;35307:1419::-;35402:6;35446:9;35437:7;35433:23;35483:3;35479:2;35475:12;35499:2;35496:22;;;35514:1;35511;35504:12;35496:22;-1:-1:-1;35556:22:66;;:::i;:::-;35601:71;35664:7;35653:9;35601:71;:::i;:::-;35587:86;;35707:4;-1:-1:-1;;35689:16:66;;35685:27;35682:47;;;35725:1;35722;35715:12;35682:47;35753:22;;:::i;:::-;35841:2;35826:18;;;35820:25;35854:24;;35944:2;35929:18;;;35923:25;35977:2;35964:16;;;35957:33;;;;36056:4;36041:20;;36035:27;36078:16;;;36071:33;;;;36170:3;36155:19;;36149:26;36191:16;;;36184:33;36233:14;;36226:31;;;35738:37;-1:-1:-1;36289:74:66;36355:7;36348:4;36333:20;;36289:74;:::i;:::-;36284:2;36277:5;36273:14;36266:98;36396:74;36462:7;36456:3;36445:9;36441:19;36396:74;:::i;:::-;36391:2;36380:14;;36373:98;36537:3;36522:19;;36516:26;36569:4;36558:16;;36551:33;36650:3;36635:19;;;36629:26;36682:3;36671:15;;36664:32;-1:-1:-1;36384:5:66;;35307:1419;-1:-1:-1;;35307:1419:66:o;36731:558::-;36773:5;36826:3;36819:4;36811:6;36807:17;36803:27;36793:55;;36844:1;36841;36834:12;36793:55;36884:6;36871:20;-1:-1:-1;;;;;36906:6:66;36903:30;36900:56;;;36936:18;;:::i;:::-;36980:59;37027:2;37004:17;;-1:-1:-1;;37000:31:66;37033:4;36996:42;36980:59;:::i;:::-;37064:6;37055:7;37048:23;37118:3;37111:4;37102:6;37094;37090:19;37086:30;37083:39;37080:59;;;37135:1;37132;37125:12;37080:59;37200:6;37193:4;37185:6;37181:17;37174:4;37165:7;37161:18;37148:59;37256:1;37227:20;;;37249:4;37223:31;37216:42;;;;37231:7;36731:558;-1:-1:-1;;;36731:558:66:o;37294:732::-;37348:5;37401:3;37394:4;37386:6;37382:17;37378:27;37368:55;;37419:1;37416;37409:12;37368:55;37459:6;37446:20;37486:73;37502:56;37551:6;37502:56;:::i;37486:73::-;37583:3;37607:6;37602:3;37595:19;37639:4;37634:3;37630:14;37623:21;;37700:4;37690:6;37687:1;37683:14;37675:6;37671:27;37667:38;37653:52;;37728:3;37720:6;37717:15;37714:35;;;37745:1;37742;37735:12;37714:35;37781:4;37773:6;37769:17;37795:200;37811:6;37806:3;37803:15;37795:200;;;37903:17;;37933:18;;37980:4;37971:14;;;;37828;37795:200;;38031:1286;38143:9;38197:5;38181:14;38177:26;38223:4;38219:2;38215:13;38212:33;;;38241:1;38238;38231:12;38212:33;38269:22;;:::i;:::-;38336:19;;38364:24;;38457:2;38446:14;;;38433:28;38477:16;;;38470:33;38537:2;-1:-1:-1;;38519:16:66;;38515:25;38512:45;;;38553:1;38550;38543:12;38512:45;38581:22;;:::i;:::-;38672:2;38661:14;;;38648:28;38685:24;;38778:2;38767:14;;38754:28;38811:2;38798:16;;38791:33;38840:16;;38833:33;38913:3;38902:15;;38889:29;;-1:-1:-1;;;;;;38930:30:66;;38927:50;;;38973:1;38970;38963:12;38927:50;39011:52;39048:14;39039:6;39032:5;39028:18;39011:52;:::i;:::-;39006:2;38997:7;38993:16;38986:78;39113:4;39106:5;39102:16;39089:30;39073:46;;-1:-1:-1;;;;;39134:8:66;39131:32;39128:52;;;39176:1;39173;39166:12;39128:52;39215:66;39266:14;39255:8;39248:5;39244:20;39215:66;:::i;39322:127::-;39383:10;39378:3;39374:20;39371:1;39364:31;39414:4;39411:1;39404:15;39438:4;39435:1;39428:15;39454:135;39493:3;39514:17;;;39511:43;;39534:18;;:::i;:::-;-1:-1:-1;39581:1:66;39570:13;;39454:135::o;39594:230::-;39664:6;39717:2;39705:9;39696:7;39692:23;39688:32;39685:52;;;39733:1;39730;39723:12;39685:52;-1:-1:-1;39778:16:66;;39594:230;-1:-1:-1;39594:230:66:o;40082:125::-;40147:9;;;40168:10;;;40165:36;;;40181:18;;:::i;40536:251::-;40606:6;40659:2;40647:9;40638:7;40634:23;40630:32;40627:52;;;40675:1;40672;40665:12;40627:52;40707:9;40701:16;40726:31;40751:5;40726:31;:::i;42035:960::-;42130:6;42183:2;42171:9;42162:7;42158:23;42154:32;42151:52;;;42199:1;42196;42189:12;42151:52;42232:9;42226:16;-1:-1:-1;;;;;42257:6:66;42254:30;42251:50;;;42297:1;42294;42287:12;42251:50;42320:22;;42373:4;42365:13;;42361:27;-1:-1:-1;42351:55:66;;42402:1;42399;42392:12;42351:55;42435:2;42429:9;42458:73;42474:56;42523:6;42474:56;:::i;42458:73::-;42553:3;42577:6;42572:3;42565:19;42609:2;42604:3;42600:12;42593:19;;42664:2;42654:6;42651:1;42647:14;42643:2;42639:23;42635:32;42621:46;;42690:7;42682:6;42679:19;42676:39;;;42711:1;42708;42701:12;42676:39;42743:2;42739;42735:11;42724:22;;42755:210;42771:6;42766:3;42763:15;42755:210;;;42844:3;42838:10;42861:31;42886:5;42861:31;:::i;:::-;42905:18;;42952:2;42788:12;;;;42943;;;;42755:210;;43000:2182;43605:25;;;-1:-1:-1;;;;;43666:32:66;;43661:2;43646:18;;;43639:60;;;;43730:2;43715:18;;;43708:34;;;43773:2;43758:18;;;43751:34;;;43826:20;;43877:3;43862:19;;43855:34;43947:15;;;43934:29;43686:3;43979:19;;43972:36;44066:15;;44053:29;44113:3;44098:19;;44091:36;43592:3;43577:19;;;44164:15;;44151:29;44189:33;44151:29;44189:33;:::i;:::-;-1:-1:-1;;;;;44259:33:66;44253:3;44238:19;;44231:62;44342:3;44330:16;;44317:30;44356:32;44317:30;44356:32;:::i;:::-;44438:10;44425:24;44419:3;44404:19;;44397:53;44499:3;44487:16;;44474:30;44513;44474;44513;:::i;:::-;44587:15;44580:23;44574:3;44559:19;;44552:52;44681:4;44645:34;44674:3;44662:16;;44645:34;:::i;:::-;44641:45;44635:3;44620:19;;44613:74;44757:3;44745:16;;44732:30;44793:3;44778:19;;44771:36;44877:3;44865:16;;;44852:30;44913:3;44898:19;;44891:36;44958:3;44943:19;;44936:35;;;;45002:3;44987:19;;44980:35;;;;45046:3;45031:19;;45024:35;;;;45090:3;45075:19;;45068:35;-1:-1:-1;;;;;7630:31:66;45171:3;45156:19;;;7618:44;43000:2182;;-1:-1:-1;;;;43000:2182:66:o;45708:245::-;45766:6;45819:2;45807:9;45798:7;45794:23;45790:32;45787:52;;;45835:1;45832;45825:12;45787:52;45874:9;45861:23;45893:30;45917:5;45893:30;:::i;46237:502::-;46557:25;;;46544:3;46529:19;;46591:55;46642:2;46627:18;;46619:6;14944:12;;14932:25;;15006:4;14995:16;;;14989:23;14973:14;;14966:47;14869:150;46591:55;46677:2;46662:18;;46655:34;;;;46720:3;46705:19;46698:35;46237:502;;-1:-1:-1;;46237:502:66:o;46744:829::-;46854:6;46914:3;46902:9;46893:7;46889:23;46885:33;46930:2;46927:22;;;46945:1;46942;46935:12;46927:22;-1:-1:-1;46987:22:66;;:::i;:::-;47054:16;;47079:22;;47167:2;47152:18;;;47146:25;47187:14;;;47180:31;47277:2;47262:18;;;47256:25;47297:14;;;47290:31;47387:2;47372:18;;;47366:25;47407:14;;;47400:31;47497:3;47482:19;;;47476:26;47518:15;;;47511:32;;;;-1:-1:-1;47086:5:66;46744:829;-1:-1:-1;46744:829:66:o;47578:311::-;47666:19;;;47648:3;-1:-1:-1;;;;;47697:31:66;;47694:51;;;47741:1;47738;47731:12;47694:51;47777:6;47774:1;47770:14;47829:8;47822:5;47815:4;47810:3;47806:14;47793:45;47858:18;;;;47878:4;47854:29;;47578:311;-1:-1:-1;;;47578:311:66:o;47894:975::-;48362:6;48351:9;48344:25;48405:6;48400:2;48389:9;48385:18;48378:34;48462:4;48454:6;48449:2;48438:9;48434:18;48421:46;48504:3;48498;48487:9;48483:19;48476:32;48325:4;48531:74;48600:3;48589:9;48585:19;48577:6;48569;48531:74;:::i;:::-;48654:9;48646:6;48642:22;48636:3;48625:9;48621:19;48614:51;48688:49;48730:6;48722;48714;48688:49;:::i;:::-;48674:63;;48786:9;48778:6;48774:22;48768:3;48757:9;48753:19;48746:51;48814:49;48856:6;48848;48840;48814:49;:::i;:::-;48806:57;47894:975;-1:-1:-1;;;;;;;;;;;;47894:975:66:o;48874:363::-;48969:6;49022:2;49010:9;49001:7;48997:23;48993:32;48990:52;;;49038:1;49035;49028:12;48990:52;49071:9;49065:16;-1:-1:-1;;;;;49096:6:66;49093:30;49090:50;;;49136:1;49133;49126:12;49090:50;49159:72;49223:7;49214:6;49203:9;49199:22;49159:72;:::i;49846:500::-;49904:5;49911:6;49971:3;49958:17;50057:2;50053:7;50042:8;50026:14;50022:29;50018:43;49998:18;49994:68;49984:96;;50076:1;50073;50066:12;49984:96;50104:33;;50208:4;50195:18;;;-1:-1:-1;50156:21:66;;-1:-1:-1;;;;;;50225:30:66;;50222:50;;;50268:1;50265;50258:12;50222:50;50315:6;50299:14;50295:27;50288:5;50284:39;50281:59;;;50336:1;50333;50326:12;50898:2718;51550:6;51539:9;51532:25;51593:3;51588:2;51577:9;51573:18;51566:31;51513:4;51619:1;51651:6;51638:20;51629:29;;51695:5;51689:3;51678:9;51674:19;51667:34;;51761:4;51756:2;51748:6;51744:15;51738:3;51727:9;51723:19;51710:56;51826:6;51818;51814:19;51801:33;51914:2;51910:7;51901:6;51885:14;51881:27;51877:41;51857:18;51853:66;51843:94;;51933:1;51930;51923:12;51843:94;51961:31;;52073:2;52060:16;;;52015:21;-1:-1:-1;;;;;52088:30:66;;52085:50;;;52131:1;52128;52121:12;52085:50;52187:6;52184:1;52180:14;52164;52160:35;52151:7;52147:49;52144:69;;;52209:1;52206;52199:12;52144:69;52250:6;52244:3;52233:9;52229:19;52222:35;52280:75;52350:3;52339:9;52335:19;52327:6;52318:7;52280:75;:::i;:::-;52266:89;;;52398:59;52449:6;52441;52437:19;52429:6;52398:59;:::i;:::-;52498:22;;;-1:-1:-1;;52494:37:66;52488:3;52473:19;;52466:66;52555:61;52502:6;52595:12;52581;52555:61;:::i;:::-;52541:75;;;;52663:59;52714:6;52706;52702:19;52694:6;52663:59;:::i;:::-;52763:22;;;-1:-1:-1;;52759:37:66;52753:3;52738:19;;52731:66;52820:65;52767:6;52862:14;52846;52820:65;:::i;:::-;52806:79;;;;52932:59;52983:6;52975;52971:19;52963:6;52932:59;:::i;:::-;53032:22;;;-1:-1:-1;;53028:37:66;53022:3;53007:19;;53000:66;53083:65;53036:6;53125:14;53109;53083:65;:::i;:::-;53075:73;;;;;53157:79;53232:2;53221:9;53217:18;53209:6;50456:5;50450:12;50445:3;50438:25;50512:4;50505:5;50501:16;50495:23;50488:4;50483:3;50479:14;50472:47;50568:4;50561:5;50557:16;50551:23;50544:4;50539:3;50535:14;50528:47;50624:4;50617:5;50613:16;50607:23;50600:4;50595:3;50591:14;50584:47;50694:4;50687:5;50683:16;50677:23;50670:31;50663:39;50656:4;50651:3;50647:14;50640:63;50766:4;50759:5;50755:16;50749:23;50742:31;50735:39;50728:4;50723:3;50719:14;50712:63;50824:4;50817:5;50813:16;50807:23;50800:4;50795:3;50791:14;50784:47;50880:4;50873:5;50869:16;50863:23;50856:4;50851:3;50847:14;50840:47;;;50351:542;53157:79;-1:-1:-1;;;;;7630:31:66;;;53304:6;53289:22;;7618:44;7630:31;;;53380:6;53365:22;;7618:44;7630:31;;;53456:6;53441:22;;7618:44;7630:31;;;53532:3;53517:19;;7618:44;7630:31;;;53605:3;53590:19;;;7618:44;;;;50898:2718;;-1:-1:-1;;;50898:2718:66:o;53621:127::-;53682:10;53677:3;53673:20;53670:1;53663:31;53713:4;53710:1;53703:15;53737:4;53734:1;53727:15;54432:245;54499:6;54552:2;54540:9;54531:7;54527:23;54523:32;54520:52;;;54568:1;54565;54558:12;54520:52;54600:9;54594:16;54619:28;54641:5;54619:28;:::i;54682:1332::-;54890:4;54930:1;54922:6;54919:13;54909:47;;54936:18;;:::i;:::-;54983:6;54972:9;54965:25;55026:2;55021;55010:9;55006:18;54999:30;55071:6;55065:13;55060:2;55049:9;55045:18;55038:41;55133:2;55125:6;55121:15;55115:22;55110:2;55099:9;55095:18;55088:50;55185:2;55177:6;55173:15;55167:22;55232:12;55226:19;55220:3;55209:9;55205:19;55198:48;55307:2;55293:12;55289:21;55283:28;55277:3;55266:9;55262:19;55255:57;;55361:2;55353:6;55349:15;55343:22;55403:4;55396;55385:9;55381:20;55374:34;55431:54;55480:3;55469:9;55465:19;55449:14;55431:54;:::i;:::-;55534:3;55522:16;;55516:23;55580:22;;;-1:-1:-1;;55576:36:66;55570:3;55555:19;;55548:65;55662:21;;55692:22;;;55742:2;55768:23;;;;-1:-1:-1;55809:1:66;;55730:15;;;;;55819:169;55833:6;55830:1;55827:13;55819:169;;;55900:6;55894:13;55889:3;55882:26;55937:2;55932:3;55928:12;55921:19;;55975:2;55967:6;55963:15;55953:25;;55855:1;55852;55848:9;55843:14;;55819:169;;;-1:-1:-1;56005:3:66;54682:1332;-1:-1:-1;;;;;;54682:1332:66:o;56204:694::-;56272:59;56327:3;56319:5;56313:12;56107;;56095:25;;56173:4;56162:16;;;56156:23;56181:10;56152:40;56136:14;;56129:64;56019:180;56272:59;56377:4;56370:5;56366:16;56360:23;56392:77;56463:4;56458:3;56454:14;56439:12;56433:19;56107:12;;56095:25;;56173:4;56162:16;;;56156:23;56181:10;56152:40;56136:14;;56129:64;56019:180;56392:77;56524:4;56506:23;;;56500:30;56107:12;;56605:3;56596:13;;56095:25;56162:16;;;56156:23;56181:10;56152:40;56136:14;;;56129:64;-1:-1:-1;56665:4:66;56647:23;;56641:30;56107:12;;56746:3;56737:13;;56095:25;56173:4;56162:16;;56156:23;56181:10;56152:40;56136:14;;;56129:64;-1:-1:-1;56806:4:66;56788:23;56782:30;56107:12;;56887:3;56878:13;;56095:25;56173:4;56162:16;;56156:23;56181:10;56152:40;56136:14;;;56129:64;56821:71;56019:180;56903:580;56990:5;56984:12;56979:3;56972:25;57046:4;57039:5;57035:16;57029:23;57022:4;57017:3;57013:14;57006:47;57102:4;57095:5;57091:16;57085:23;57078:4;57073:3;57069:14;57062:47;57158:4;57151:5;57147:16;57141:23;57134:4;57129:3;57125:14;57118:47;57214:4;57207:5;57203:16;57197:23;57190:4;57185:3;57181:14;57174:47;57299:1;57295;57290:3;57286:11;57282:19;57274:4;57267:5;57263:16;57257:23;57253:49;57246:4;57241:3;57237:14;57230:73;57352:4;57345:5;57341:16;57335:23;57328:4;57323:3;57319:14;57312:47;57405:4;57398:5;57394:16;57388:23;57420:57;57471:4;57466:3;57462:14;57448:12;14944;;14932:25;;15006:4;14995:16;;;14989:23;14973:14;;14966:47;14869:150;57488:781;57548:59;57603:3;57595:5;57589:12;56107;;56095:25;;56173:4;56162:16;;;56156:23;56181:10;56152:40;56136:14;;56129:64;56019:180;57548:59;57653:4;57646:5;57642:16;57636:23;57697:12;57691:19;57684:4;57679:3;57675:14;57668:43;57765:4;57751:12;57747:23;57741:30;57736:2;57731:3;57727:12;57720:52;57827:4;57813:12;57809:23;57803:30;57797:3;57792;57788:13;57781:53;57889:2;57875:12;57871:21;57865:28;57859:3;57854;57850:13;57843:51;;57942:4;57935:5;57931:16;57925:23;57957:64;58015:4;58010:3;58006:14;57990;57957:64;:::i;:::-;;58069:2;58062:5;58058:14;58052:21;58082:67;58141:6;58136:3;58132:16;58116:14;58082:67;:::i;:::-;-1:-1:-1;58200:3:66;58189:15;;58183:22;58174:6;58165:16;;58158:48;58257:3;58246:15;58240:22;58231:6;58222:16;;;58215:48;57488:781::o;58689:1208::-;58940:4;58982;58971:9;58967:20;58959:28;;58996:50;59036:9;59027:6;59021:13;58996:50;:::i;:::-;59104:4;59092:17;;;59086:24;59077:6;59062:22;;59055:56;59169:4;59157:17;;59151:24;59142:6;59127:22;;59120:56;59234:4;59222:17;;59216:24;59207:6;59192:22;;59185:56;59299:4;59287:17;;59281:24;59272:6;59257:22;;59250:56;59353:4;59341:17;;59335:24;58368:12;;58361:20;58354:28;59430:6;59415:22;;58342:41;58435:16;58429:23;58422:31;58415:39;58399:14;;;58392:63;59496:4;59484:17;;59478:24;59469:6;59454:22;;59447:56;59552:4;59540:17;;59534:24;-1:-1:-1;;;;;7630:31:66;59634:6;59619:22;;7618:44;59691:6;59679:19;;;59673:26;-1:-1:-1;;58627:50:66;59838:6;59823:22;;58615:63;59877:4;59862:20;59855:36;58689:1208;:::o;59902:128::-;59969:9;;;59990:11;;;59987:37;;;60004:18;;:::i;60035:331::-;60140:9;60151;60193:8;60181:10;60178:24;60175:44;;;60215:1;60212;60205:12;60175:44;60244:6;60234:8;60231:20;60228:40;;;60264:1;60261;60254:12;60228:40;-1:-1:-1;;60290:23:66;;;60335:25;;;;;-1:-1:-1;60035:331:66:o;60371:255::-;60491:19;;60530:2;60522:11;;60519:101;;;-1:-1:-1;;60591:2:66;60587:12;;;60584:1;60580:20;60576:33;60565:45;60371:255;;;;:::o;60631:127::-;60692:10;60687:3;60683:20;60680:1;60673:31;60723:4;60720:1;60713:15;60747:4;60744:1;60737:15;60763:112;60795:1;60821;60811:35;;60826:18;;:::i;:::-;-1:-1:-1;60860:9:66;;60763:112::o;60880:1618::-;61476:4;61524:3;61513:9;61509:19;61555:6;61544:9;61537:25;61598:6;61593:2;61582:9;61578:18;61571:34;61641:6;61636:2;61625:9;61621:18;61614:34;61684:6;61679:2;61668:9;61664:18;61657:34;61728:3;61722;61711:9;61707:19;61700:32;61752:6;61787;61781:13;61818:6;61810;61803:22;61856:3;61845:9;61841:19;61834:26;;61895:2;61887:6;61883:15;61869:29;;61916:1;61926:388;61940:6;61937:1;61934:13;61926:388;;;62005:6;61999:13;62057:2;62051:9;62044:17;62037:25;62032:3;62025:38;62121:4;62115:2;62111;62107:11;62101:18;62097:29;62092:2;62087:3;62083:12;62076:51;62175:2;62171;62167:11;62161:18;62156:2;62151:3;62147:12;62140:40;62228:2;62224;62220:11;62214:18;62209:2;62204:3;62200:12;62193:40;;62262:3;62257;62253:13;62246:20;;62301:2;62293:6;62289:15;62279:25;;61962:1;61959;61955:9;61950:14;;61926:388;;;-1:-1:-1;;62365:3:66;62350:19;;62343:35;;;58368:12;;58361:20;58354:28;62443:3;62428:19;;58342:41;58446:4;58435:16;;58429:23;58422:31;58415:39;58399:14;;;58392:63;62331:3;-1:-1:-1;62387:61:66;;-1:-1:-1;58274:187:66;62387:61;62485:6;62479:3;62468:9;62464:19;62457:35;60880:1618;;;;;;;;;;;:::o;62503:120::-;62543:1;62569;62559:35;;62574:18;;:::i;:::-;-1:-1:-1;62608:9:66;;62503:120::o;62628:168::-;62701:9;;;62732;;62749:15;;;62743:22;;62729:37;62719:71;;62770:18;;:::i;63388:136::-;63423:3;-1:-1:-1;;;63444:22:66;;63441:48;;63469:18;;:::i;:::-;-1:-1:-1;63509:1:66;63505:13;;63388:136::o;63529:380::-;63608:1;63604:12;;;;63651;;;63672:61;;63726:4;63718:6;63714:17;63704:27;;63672:61;63779:2;63771:6;63768:14;63748:18;63745:38;63742:161;;63825:10;63820:3;63816:20;63813:1;63806:31;63860:4;63857:1;63850:15;63888:4;63885:1;63878:15",
        "linkReferences": {
            "src/core/libraries/RollupLibs/ExtRollupLib.sol": {
                "ExtRollupLib": [
                    {
                        "start": 3939,
                        "length": 20
                    },
                    {
                        "start": 4062,
                        "length": 20
                    },
                    {
                        "start": 6019,
                        "length": 20
                    },
                    {
                        "start": 6648,
                        "length": 20
                    },
                    {
                        "start": 7394,
                        "length": 20
                    },
                    {
                        "start": 8671,
                        "length": 20
                    },
                    {
                        "start": 9819,
                        "length": 20
                    },
                    {
                        "start": 10008,
                        "length": 20
                    },
                    {
                        "start": 11190,
                        "length": 20
                    },
                    {
                        "start": 13540,
                        "length": 20
                    }
                ]
            },
            "src/core/libraries/ValidatorSelectionLib/ValidatorSelectionLib.sol": {
                "ValidatorSelectionLib": [
                    {
                        "start": 5640,
                        "length": 20
                    },
                    {
                        "start": 9237,
                        "length": 20
                    },
                    {
                        "start": 10559,
                        "length": 20
                    },
                    {
                        "start": 12215,
                        "length": 20
                    },
                    {
                        "start": 14369,
                        "length": 20
                    }
                ]
            },
            "src/core/libraries/staking/StakingLib.sol": {
                "StakingLib": [
                    {
                        "start": 3523,
                        "length": 20
                    },
                    {
                        "start": 3639,
                        "length": 20
                    },
                    {
                        "start": 5668,
                        "length": 20
                    },
                    {
                        "start": 6826,
                        "length": 20
                    },
                    {
                        "start": 7077,
                        "length": 20
                    },
                    {
                        "start": 7160,
                        "length": 20
                    },
                    {
                        "start": 8033,
                        "length": 20
                    },
                    {
                        "start": 8286,
                        "length": 20
                    },
                    {
                        "start": 9120,
                        "length": 20
                    },
                    {
                        "start": 9265,
                        "length": 20
                    },
                    {
                        "start": 9528,
                        "length": 20
                    },
                    {
                        "start": 9643,
                        "length": 20
                    },
                    {
                        "start": 10146,
                        "length": 20
                    },
                    {
                        "start": 10295,
                        "length": 20
                    },
                    {
                        "start": 10587,
                        "length": 20
                    },
                    {
                        "start": 10895,
                        "length": 20
                    },
                    {
                        "start": 11520,
                        "length": 20
                    },
                    {
                        "start": 11895,
                        "length": 20
                    },
                    {
                        "start": 11979,
                        "length": 20
                    },
                    {
                        "start": 12241,
                        "length": 20
                    },
                    {
                        "start": 12576,
                        "length": 20
                    },
                    {
                        "start": 12933,
                        "length": 20
                    },
                    {
                        "start": 14397,
                        "length": 20
                    }
                ]
            }
        },
        "immutableReferences": {
            "11620": [
                {
                    "start": 3220,
                    "length": 32
                }
            ],
            "11625": [
                {
                    "start": 1777,
                    "length": 32
                },
                {
                    "start": 6066,
                    "length": 32
                },
                {
                    "start": 11732,
                    "length": 32
                }
            ],
            "11627": [
                {
                    "start": 2325,
                    "length": 32
                }
            ],
            "11630": [
                {
                    "start": 2801,
                    "length": 32
                },
                {
                    "start": 4447,
                    "length": 32
                }
            ],
            "11633": [
                {
                    "start": 1509,
                    "length": 32
                },
                {
                    "start": 4641,
                    "length": 32
                }
            ],
            "11636": [
                {
                    "start": 2875,
                    "length": 32
                },
                {
                    "start": 6104,
                    "length": 32
                },
                {
                    "start": 7560,
                    "length": 32
                },
                {
                    "start": 11229,
                    "length": 32
                }
            ],
            "11638": [
                {
                    "start": 3305,
                    "length": 32
                },
                {
                    "start": 13423,
                    "length": 32
                }
            ],
            "11641": [
                {
                    "start": 1446,
                    "length": 32
                },
                {
                    "start": 4879,
                    "length": 32
                },
                {
                    "start": 5264,
                    "length": 32
                },
                {
                    "start": 11263,
                    "length": 32
                },
                {
                    "start": 13469,
                    "length": 32
                }
            ],
            "11644": [
                {
                    "start": 2490,
                    "length": 32
                },
                {
                    "start": 5030,
                    "length": 32
                },
                {
                    "start": 5455,
                    "length": 32
                },
                {
                    "start": 11297,
                    "length": 32
                }
            ],
            "11647": [
                {
                    "start": 1880,
                    "length": 32
                },
                {
                    "start": 11331,
                    "length": 32
                }
            ],
            "13706": [
                {
                    "start": 2696,
                    "length": 32
                },
                {
                    "start": 5825,
                    "length": 32
                },
                {
                    "start": 9421,
                    "length": 32
                },
                {
                    "start": 10741,
                    "length": 32
                },
                {
                    "start": 12386,
                    "length": 32
                },
                {
                    "start": 14509,
                    "length": 32
                }
            ],
            "6812": [
                {
                    "start": 16103,
                    "length": 32
                }
            ],
            "6814": [
                {
                    "start": 16061,
                    "length": 32
                }
            ],
            "6816": [
                {
                    "start": 16019,
                    "length": 32
                }
            ],
            "6818": [
                {
                    "start": 16184,
                    "length": 32
                }
            ],
            "6820": [
                {
                    "start": 16224,
                    "length": 32
                }
            ],
            "6823": [
                {
                    "start": 14922,
                    "length": 32
                }
            ],
            "6826": [
                {
                    "start": 14966,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "ASSET()": "4800d97f",
        "CLAIM_DURATION_IN_L2_SLOTS()": "3ceac569",
        "CUAUHXICALLI()": "c001ab82",
        "FEE_JUICE_PORTAL()": "1811f40b",
        "INBOX()": "b7010697",
        "IS_FOUNDRY_TEST()": "f1b98cea",
        "L1_BLOCK_AT_GENESIS()": "79ed8ead",
        "LAG()": "f7a0572b",
        "LIFETIME()": "d3c576d8",
        "OUTBOX()": "1b142ea7",
        "PROOF_COMMITMENT_ESCROW()": "b9802405",
        "PROOF_COMMITMENT_MIN_BOND_AMOUNT_IN_TST()": "e7142f7c",
        "REWARD_DISTRIBUTOR()": "8de728e4",
        "TARGET_COMMITTEE_SIZE()": "a575fcdc",
        "VERSION()": "ffa1ad74",
        "VM_ADDRESS()": "a9a1c6f4",
        "archive()": "02a21460",
        "archiveAt(uint256)": "3777e863",
        "canProposeAtTime(uint256,bytes32)": "33f9acb4",
        "canPrune()": "694223ac",
        "canPruneAtTime(uint256)": "dc1bb8f4",
        "cheat__InitialiseValidatorSet((address,address,address,uint256)[])": "f85d4eaa",
        "checkBlob()": "7468582f",
        "claimEpochProofRight(((uint256,uint256,uint256,address,uint32),(bool,uint8,bytes32,bytes32)))": "53a16024",
        "deposit(address,address,address,uint256)": "0284c3f5",
        "eip712Domain()": "84b0196e",
        "finaliseWithdraw(address)": "4a177008",
        "getActiveAttesterCount()": "90a3b386",
        "getAttesterAtIndex(uint256)": "a7f8e646",
        "getAttesters()": "4ed7e435",
        "getBlobPublicInputsHash(uint256)": "8f2a2b26",
        "getBlock(uint256)": "04c07569",
        "getClaimableEpoch()": "b8f31590",
        "getCommitteeAt(uint256)": "1cfe2878",
        "getCurrentEpoch()": "b97dd9e2",
        "getCurrentEpochCommittee()": "966ab4ee",
        "getCurrentProposer()": "3b10244b",
        "getCurrentSampleSeed()": "ede57c34",
        "getCurrentSlot()": "d8e3784c",
        "getEpochAt(uint256)": "c9d1e012",
        "getEpochAtSlot(uint256)": "74af185e",
        "getEpochCommittee(uint256)": "69457a6f",
        "getEpochDuration()": "5d3ea8f1",
        "getEpochForBlock(uint256)": "80edb5bd",
        "getEpochProofPublicInputs(uint256,bytes32[7],bytes32[],bytes,bytes)": "9fa50480",
        "getEpochToProve()": "bece308a",
        "getExit(address)": "5dc0ff94",
        "getExitDelay()": "386f56fc",
        "getFeeAssetPrice()": "c3778343",
        "getGenesisTime()": "723d8e96",
        "getInfo(address)": "ffdd5cf1",
        "getL1FeesAt(uint256)": "5f82401f",
        "getManaBaseFeeAt(uint256,bool)": "754eddb7",
        "getManaBaseFeeComponentsAt(uint256,bool)": "70192e56",
        "getMinimumStake()": "d9bbd278",
        "getOperatorAtIndex(uint256)": "ddf8d651",
        "getPendingBlockNumber()": "48b9e57b",
        "getProofClaim()": "35f38920",
        "getProposerAt(uint256)": "c27f08b5",
        "getProposerAtIndex(uint256)": "99d70604",
        "getProposerForAttester(address)": "61de7ac6",
        "getProvenBlockNumber()": "b67d057b",
        "getSampleSeedAt(uint256)": "7afeed28",
        "getSlasher()": "d0c80f13",
        "getSlotAt(uint256)": "b9d09163",
        "getSlotDuration()": "c4014c12",
        "getStakingAsset()": "a011f6a9",
        "getTimestampForSlot(uint256)": "d03b2bae",
        "getTips()": "88e4a073",
        "initiateWithdraw(address,address)": "ee3b8dc2",
        "owner()": "8da5cb5b",
        "propose((bytes32,bytes32,(int256,int256),bytes,bytes32[]),(bool,uint8,bytes32,bytes32)[],bytes,bytes)": "164552d8",
        "proposeAndClaim((bytes32,bytes32,(int256,int256),bytes,bytes32[]),(bool,uint8,bytes32,bytes32)[],bytes,bytes,((uint256,uint256,uint256,address,uint32),(bool,uint8,bytes32,bytes32)))": "63b03d33",
        "prune()": "9f2b3154",
        "quoteToDigest((uint256,uint256,uint256,address,uint32))": "b85e881d",
        "renounceOwnership()": "715018a6",
        "setAssumeProvenThroughBlockNumber(uint256)": "a0e6fc87",
        "setEpochVerifier(address)": "725e494e",
        "setProtocolContractTreeRoot(bytes32)": "68bdcbc5",
        "setVkTreeRoot(bytes32)": "5aa51600",
        "setupEpoch()": "e3380b79",
        "slash(address,uint256)": "02fb4d85",
        "status(uint256)": "42d21ef7",
        "submitEpochRootProof((uint256,bytes32[7],bytes32[],bytes,bytes,bytes))": "d0f1be49",
        "transferOwnership(address)": "f2fde38b",
        "updateL1GasFeeOracle()": "508ac49b",
        "validateBlobs(bytes)": "9e0fedd8",
        "validateEpochProofRightClaimAtTime(uint256,((uint256,uint256,uint256,address,uint32),(bool,uint8,bytes32,bytes32)))": "2716c737",
        "validateHeader(bytes,(bool,uint8,bytes32,bytes32)[],bytes32,uint256,bytes32,(bool,bool))": "36185aa1"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IFeeJuicePortal\",\"name\":\"_fpcJuicePortal\",\"type\":\"address\"},{\"internalType\":\"contract IRewardDistributor\",\"name\":\"_rewardDistributor\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_stakingAsset\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_vkTreeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_protocolContractTreeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_ares\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"aztecSlotDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aztecEpochDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetCommitteeSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aztecEpochProofClaimWindowInL2Slots\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slashingQuorum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slashingRoundSize\",\"type\":\"uint256\"}],\"internalType\":\"struct Config\",\"name\":\"_config\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"Slot\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"Slot\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"HeaderLib__InvalidSlotNumber\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"Rollup__InvalidArchive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"Rollup__InvalidBlockNumber\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"Epoch\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"Epoch\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"Rollup__InvalidEpoch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"Rollup__InvalidInHash\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Rollup__NoEpochToProve\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Rollup__NothingToPrune\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Rollup__ProofRightAlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"Slot\",\"name\":\"lastSlot\",\"type\":\"uint256\"},{\"internalType\":\"Slot\",\"name\":\"proposedSlot\",\"type\":\"uint256\"}],\"name\":\"Rollup__SlotAlreadyInChain\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"}],\"name\":\"ValidatorSelection__InvalidDeposit\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"archive\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"versionedBlobHashes\",\"type\":\"bytes32[]\"}],\"name\":\"L2BlockProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"proverId\",\"type\":\"bytes32\"}],\"name\":\"L2ProofVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"Epoch\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondProvider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"Slot\",\"name\":\"currentSlot\",\"type\":\"uint256\"}],\"name\":\"ProofRightClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"provenBlockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pendingBlockNumber\",\"type\":\"uint256\"}],\"name\":\"PrunedPending\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Slashed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawFinalised\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawInitiated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ASSET\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CLAIM_DURATION_IN_L2_SLOTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CUAUHXICALLI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_JUICE_PORTAL\",\"outputs\":[{\"internalType\":\"contract IFeeJuicePortal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INBOX\",\"outputs\":[{\"internalType\":\"contract IInbox\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_FOUNDRY_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"L1_BLOCK_AT_GENESIS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LAG\",\"outputs\":[{\"internalType\":\"Slot\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIFETIME\",\"outputs\":[{\"internalType\":\"Slot\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OUTBOX\",\"outputs\":[{\"internalType\":\"contract IOutbox\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROOF_COMMITMENT_ESCROW\",\"outputs\":[{\"internalType\":\"contract IProofCommitmentEscrow\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROOF_COMMITMENT_MIN_BOND_AMOUNT_IN_TST\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARD_DISTRIBUTOR\",\"outputs\":[{\"internalType\":\"contract IRewardDistributor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TARGET_COMMITTEE_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VM_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"archive\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"archiveAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Timestamp\",\"name\":\"_ts\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_archive\",\"type\":\"bytes32\"}],\"name\":\"canProposeAtTime\",\"outputs\":[{\"internalType\":\"Slot\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canPrune\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Timestamp\",\"name\":\"_ts\",\"type\":\"uint256\"}],\"name\":\"canPruneAtTime\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct CheatDepositArgs[]\",\"name\":\"_args\",\"type\":\"tuple[]\"}],\"name\":\"cheat__InitialiseValidatorSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkBlob\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"Epoch\",\"name\":\"epochToProve\",\"type\":\"uint256\"},{\"internalType\":\"Slot\",\"name\":\"validUntilSlot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"prover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"basisPointFee\",\"type\":\"uint32\"}],\"internalType\":\"struct EpochProofQuote\",\"name\":\"quote\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEmpty\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Signature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"internalType\":\"struct SignedEpochProofQuote\",\"name\":\"_quote\",\"type\":\"tuple\"}],\"name\":\"claimEpochProofRight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_attester\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_attester\",\"type\":\"address\"}],\"name\":\"finaliseWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveAttesterCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getAttesterAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAttesters\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"getBlobPublicInputsHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"getBlock\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"excessMana\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeAssetPriceNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"manaUsed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"provingCostPerManaNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"congestionCost\",\"type\":\"uint256\"}],\"internalType\":\"struct FeeHeader\",\"name\":\"feeHeader\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"archive\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"Slot\",\"name\":\"slotNumber\",\"type\":\"uint256\"}],\"internalType\":\"struct BlockLog\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimableEpoch\",\"outputs\":[{\"internalType\":\"Epoch\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Timestamp\",\"name\":\"_ts\",\"type\":\"uint256\"}],\"name\":\"getCommitteeAt\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentEpoch\",\"outputs\":[{\"internalType\":\"Epoch\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentEpochCommittee\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentProposer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentSampleSeed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentSlot\",\"outputs\":[{\"internalType\":\"Slot\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Timestamp\",\"name\":\"_ts\",\"type\":\"uint256\"}],\"name\":\"getEpochAt\",\"outputs\":[{\"internalType\":\"Epoch\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Slot\",\"name\":\"_slotNumber\",\"type\":\"uint256\"}],\"name\":\"getEpochAtSlot\",\"outputs\":[{\"internalType\":\"Epoch\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Epoch\",\"name\":\"_epoch\",\"type\":\"uint256\"}],\"name\":\"getEpochCommittee\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEpochDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"getEpochForBlock\",\"outputs\":[{\"internalType\":\"Epoch\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_epochSize\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[7]\",\"name\":\"_args\",\"type\":\"bytes32[7]\"},{\"internalType\":\"bytes32[]\",\"name\":\"_fees\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"_blobPublicInputs\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_aggregationObject\",\"type\":\"bytes\"}],\"name\":\"getEpochProofPublicInputs\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEpochToProve\",\"outputs\":[{\"internalType\":\"Epoch\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_attester\",\"type\":\"address\"}],\"name\":\"getExit\",\"outputs\":[{\"components\":[{\"internalType\":\"Timestamp\",\"name\":\"exitableAt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct Exit\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExitDelay\",\"outputs\":[{\"internalType\":\"Timestamp\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGenesisTime\",\"outputs\":[{\"internalType\":\"Timestamp\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_attester\",\"type\":\"address\"}],\"name\":\"getInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"enum Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct ValidatorInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Timestamp\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getL1FeesAt\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"baseFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blobFee\",\"type\":\"uint256\"}],\"internalType\":\"struct L1FeeData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Timestamp\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_inFeeAsset\",\"type\":\"bool\"}],\"name\":\"getManaBaseFeeAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Timestamp\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_inFeeAsset\",\"type\":\"bool\"}],\"name\":\"getManaBaseFeeComponentsAt\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"congestionCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"congestionMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"provingCost\",\"type\":\"uint256\"}],\"internalType\":\"struct ManaBaseFeeComponents\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinimumStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getOperatorAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"}],\"internalType\":\"struct OperatorInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPendingBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProofClaim\",\"outputs\":[{\"components\":[{\"internalType\":\"Epoch\",\"name\":\"epochToProve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"basisPointFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"bondProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proposerClaimant\",\"type\":\"address\"}],\"internalType\":\"struct DataStructures.EpochProofClaim\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Timestamp\",\"name\":\"_ts\",\"type\":\"uint256\"}],\"name\":\"getProposerAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getProposerAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_attester\",\"type\":\"address\"}],\"name\":\"getProposerForAttester\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProvenBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Timestamp\",\"name\":\"_ts\",\"type\":\"uint256\"}],\"name\":\"getSampleSeedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSlasher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Timestamp\",\"name\":\"_ts\",\"type\":\"uint256\"}],\"name\":\"getSlotAt\",\"outputs\":[{\"internalType\":\"Slot\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSlotDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingAsset\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Slot\",\"name\":\"_slotNumber\",\"type\":\"uint256\"}],\"name\":\"getTimestampForSlot\",\"outputs\":[{\"internalType\":\"Timestamp\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTips\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pendingBlockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"provenBlockNumber\",\"type\":\"uint256\"}],\"internalType\":\"struct ChainTips\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_attester\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"initiateWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"archive\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"provingCostModifier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeAssetPriceModifier\",\"type\":\"int256\"}],\"internalType\":\"struct OracleInput\",\"name\":\"oracleInput\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"txHashes\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct ProposeArgs\",\"name\":\"_args\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEmpty\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Signature[]\",\"name\":\"_signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_blobInput\",\"type\":\"bytes\"}],\"name\":\"propose\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"archive\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"provingCostModifier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeAssetPriceModifier\",\"type\":\"int256\"}],\"internalType\":\"struct OracleInput\",\"name\":\"oracleInput\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"txHashes\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct ProposeArgs\",\"name\":\"_args\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEmpty\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Signature[]\",\"name\":\"_signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"_body\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_blobInput\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"internalType\":\"Epoch\",\"name\":\"epochToProve\",\"type\":\"uint256\"},{\"internalType\":\"Slot\",\"name\":\"validUntilSlot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"prover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"basisPointFee\",\"type\":\"uint32\"}],\"internalType\":\"struct EpochProofQuote\",\"name\":\"quote\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEmpty\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Signature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"internalType\":\"struct SignedEpochProofQuote\",\"name\":\"_quote\",\"type\":\"tuple\"}],\"name\":\"proposeAndClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prune\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Epoch\",\"name\":\"epochToProve\",\"type\":\"uint256\"},{\"internalType\":\"Slot\",\"name\":\"validUntilSlot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"prover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"basisPointFee\",\"type\":\"uint32\"}],\"internalType\":\"struct EpochProofQuote\",\"name\":\"_quote\",\"type\":\"tuple\"}],\"name\":\"quoteToDigest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"setAssumeProvenThroughBlockNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_verifier\",\"type\":\"address\"}],\"name\":\"setEpochVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_protocolContractTreeRoot\",\"type\":\"bytes32\"}],\"name\":\"setProtocolContractTreeRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_vkTreeRoot\",\"type\":\"bytes32\"}],\"name\":\"setVkTreeRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setupEpoch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_attester\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"slash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_myHeaderBlockNumber\",\"type\":\"uint256\"}],\"name\":\"status\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"provenBlockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"provenArchive\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pendingBlockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"pendingArchive\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"archiveOfMyBlock\",\"type\":\"bytes32\"},{\"internalType\":\"Epoch\",\"name\":\"provenEpochNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"epochSize\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[7]\",\"name\":\"args\",\"type\":\"bytes32[7]\"},{\"internalType\":\"bytes32[]\",\"name\":\"fees\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"blobPublicInputs\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"aggregationObject\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"internalType\":\"struct SubmitEpochRootProofArgs\",\"name\":\"_args\",\"type\":\"tuple\"}],\"name\":\"submitEpochRootProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateL1GasFeeOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_blobsInput\",\"type\":\"bytes\"}],\"name\":\"validateBlobs\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Timestamp\",\"name\":\"_ts\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"Epoch\",\"name\":\"epochToProve\",\"type\":\"uint256\"},{\"internalType\":\"Slot\",\"name\":\"validUntilSlot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"prover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"basisPointFee\",\"type\":\"uint32\"}],\"internalType\":\"struct EpochProofQuote\",\"name\":\"quote\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEmpty\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Signature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"internalType\":\"struct SignedEpochProofQuote\",\"name\":\"_quote\",\"type\":\"tuple\"}],\"name\":\"validateEpochProofRightClaimAtTime\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_header\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEmpty\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Signature[]\",\"name\":\"_signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"Timestamp\",\"name\":\"_currentTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_blobsHashesCommitment\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"ignoreDA\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"ignoreSignatures\",\"type\":\"bool\"}],\"internalType\":\"struct DataStructures.ExecutionFlags\",\"name\":\"_flags\",\"type\":\"tuple\"}],\"name\":\"validateHeader\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aztec Labs\",\"details\":\"WARNING: This contract is VERY close to the size limit (500B at time of writing).\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"archive()\":{\"returns\":{\"_0\":\"bytes32 - The current archive root\"}},\"archiveAt(uint256)\":{\"params\":{\"_blockNumber\":\"- The block number to get the archive root of\"},\"returns\":{\"_0\":\"bytes32 - The archive root of the block\"}},\"canProposeAtTime(uint256,bytes32)\":{\"params\":{\"_archive\":\"- The archive to check (should be the latest archive)\",\"_ts\":\"- The timestamp to check\"},\"returns\":{\"_0\":\"uint256 - The slot at the given timestamp\",\"_1\":\"uint256 - The block number at the given timestamp\"}},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getAttesters()\":{\"details\":\"Consider removing this to replace with a `size` and individual getter.\",\"returns\":{\"_0\":\"The validator set\"}},\"getClaimableEpoch()\":{\"details\":\"Will revert if the epoch has already been claimed or if there is no epoch to prove\"},\"getCommitteeAt(uint256)\":{\"params\":{\"_ts\":\"- The timestamp to get the committee for\"},\"returns\":{\"_0\":\"The committee for the given timestamp\"}},\"getCurrentEpoch()\":{\"returns\":{\"_0\":\"The current epoch number\"}},\"getCurrentEpochCommittee()\":{\"returns\":{\"_0\":\"The validator set for the current epoch\"}},\"getCurrentProposer()\":{\"details\":\"Calls `getCurrentProposer(uint256)` with the current timestamp\",\"returns\":{\"_0\":\"The address of the proposer\"}},\"getCurrentSampleSeed()\":{\"returns\":{\"_0\":\"The sample seed for the current epoch\"}},\"getCurrentSlot()\":{\"returns\":{\"_0\":\"The current slot number\"}},\"getEpochAt(uint256)\":{\"params\":{\"_ts\":\"- The timestamp to compute the epoch for\"},\"returns\":{\"_0\":\"The computed epoch\"}},\"getEpochAtSlot(uint256)\":{\"params\":{\"_slotNumber\":\"- The slot number to compute the epoch for\"},\"returns\":{\"_0\":\"The computed epoch\"}},\"getEpochCommittee(uint256)\":{\"details\":\"Consider removing this to replace with a `size` and individual getter.\",\"params\":{\"_epoch\":\"The epoch number to get the validator set for\"},\"returns\":{\"_0\":\"The validator set for the given epoch\"}},\"getEpochProofPublicInputs(uint256,bytes32[7],bytes32[],bytes,bytes)\":{\"details\":\"Useful for debugging and testing. Allows submitter to compare their own public inputs used for generating the proof vs the ones assembled by this contract when verifying it.\",\"params\":{\"_aggregationObject\":\"- The aggregation object for the proof\",\"_args\":\"- Array of public inputs to the proof (previousArchive, endArchive, previousBlockHash, endBlockHash, endTimestamp, outHash, proverId)\",\"_epochSize\":\"- The size of the epoch (to be promoted to a constant)\",\"_fees\":\"- Array of recipient-value pairs with fees to be distributed for the epoch\"}},\"getEpochToProve()\":{\"details\":\"This is the epoch that should be proven. It does so by getting the epoch of the block        following the last proven block. If there is no such block (i.e. the pending chain is        the same as the proven chain), then revert.\",\"returns\":{\"_0\":\"uint256 - The epoch to prove\"}},\"getFeeAssetPrice()\":{\"returns\":{\"_0\":\"The fee asset price\"}},\"getManaBaseFeeAt(uint256,bool)\":{\"params\":{\"_inFeeAsset\":\"- Whether to return the fee in the fee asset or ETH\"},\"returns\":{\"_0\":\"The mana base fee\"}},\"getManaBaseFeeComponentsAt(uint256,bool)\":{\"details\":\"TODO #10004 - As part of the refactor, will likely get rid of this function or make it private          keeping it public for now makes it simpler to test.\",\"params\":{\"_inFeeAsset\":\"- Whether to return the fee in the fee asset or ETH\"},\"returns\":{\"_0\":\"The mana base fee components\"}},\"getProposerAt(uint256)\":{\"details\":\"This function is very useful for off-chain usage, as it easily allow a client to          determine who will be the proposer at the NEXT ethereum block.          Should not be trusted when moving beyond the current epoch, since changes to the          validator set might not be reflected when we actually reach that epoch (more changes          might have happened).The proposer is selected from the validator set of the current epoch.Should only be access on-chain if epoch is setup, otherwise very expensive.A return value of address(0) means that the proposer is \\\"open\\\" and can be anyone.If the current epoch is the first epoch, returns address(0)          If the current epoch is setup, we will return the proposer for the current slot          If the current epoch is not setup, we will perform a sample as if it was (gas heavy)\",\"returns\":{\"_0\":\"The address of the proposer\"}},\"getSampleSeedAt(uint256)\":{\"params\":{\"_ts\":\"- The timestamp to get the sample seed for\"},\"returns\":{\"_0\":\"The sample seed for the given timestamp\"}},\"getSlotAt(uint256)\":{\"params\":{\"_ts\":\"- The timestamp to compute the slot for\"},\"returns\":{\"_0\":\"The computed slot\"}},\"getTimestampForSlot(uint256)\":{\"params\":{\"_slotNumber\":\"- The slot number to get the timestamp for\"},\"returns\":{\"_0\":\"The timestamp for the given slot\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"propose((bytes32,bytes32,(int256,int256),bytes,bytes32[]),(bool,uint8,bytes32,bytes32)[],bytes,bytes)\":{\"details\":\"`eth_log_handlers` rely on this function\",\"params\":{\"\":\"- The body of the L2 block\",\"_args\":\"- The arguments to propose the block\",\"_blobInput\":\"- The blob evaluation KZG proof, challenge, and opening required for the precompile.\",\"_signatures\":\"- Signatures from the validators // TODO(#9101): The below _body should be removed once we can extract blobs. It's only here so the archiver can extract tx effects.\"}},\"proposeAndClaim((bytes32,bytes32,(int256,int256),bytes,bytes32[]),(bool,uint8,bytes32,bytes32)[],bytes,bytes,((uint256,uint256,uint256,address,uint32),(bool,uint8,bytes32,bytes32)))\":{\"details\":\"`eth_log_handlers` rely on this function\",\"params\":{\"_args\":\"- The arguments to propose the block\",\"_blobInput\":\"- The blob evaluation KZG proof, challenge, and opening required for the precompile.\",\"_body\":\"- The body of the L2 block\",\"_signatures\":\"- Signatures from the validators // TODO(#9101): The below _body should be removed once we can extract blobs. It's only here so the archiver can extract tx effects.\"}},\"prune()\":{\"details\":\"Will revert if there is nothing to prune or if the chain is not ready to be pruned\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setAssumeProvenThroughBlockNumber(uint256)\":{\"params\":{\"_blockNumber\":\"- New value.\"}},\"setEpochVerifier(address)\":{\"details\":\"This is only needed for testing, and should be removed\",\"params\":{\"_verifier\":\"- The new verifier contract\"}},\"setProtocolContractTreeRoot(bytes32)\":{\"details\":\"This is only needed for testing, and should be removed\",\"params\":{\"_protocolContractTreeRoot\":\"- The new protocolContractTreeRoot to be used by proofs\"}},\"setVkTreeRoot(bytes32)\":{\"details\":\"This is only needed for testing, and should be removed\",\"params\":{\"_vkTreeRoot\":\"- The new vkTreeRoot to be used by proofs\"}},\"setupEpoch()\":{\"details\":\"Since this is a reference optimising for simplicity, we ValidatorSelectionStore the actual validator set in the epoch structure.          This is very heavy on gas, so start crying because the gas here will melt the poles          https://i.giphy.com/U1aN4HTfJ2SmgB2BBK.webp\"},\"submitEpochRootProof((uint256,bytes32[7],bytes32[],bytes,bytes,bytes))\":{\"details\":\"Will emit `L2ProofVerified` if the proof is validWill throw if:          - The block number is past the pending chain          - The last archive root of the header does not match the archive root of parent block          - The archive root of the header does not match the archive root of the proposed block          - The proof is invalidWe provide the `_archive` and `_blockHash` even if it could be read from storage itself because it allow for          better error messages. Without passing it, we would just have a proof verification failure.\",\"params\":{\"_args\":\"- The arguments to submit the epoch root proof:          _epochSize - The size of the epoch (to be promoted to a constant)          _args - Array of public inputs to the proof (previousArchive, endArchive, previousBlockHash, endBlockHash, endTimestamp, outHash, proverId)          _fees - Array of recipient-value pairs with fees to be distributed for the epoch          _blobPublicInputs - The blob public inputs for the proof          _aggregationObject - The aggregation object for the proof          _proof - The proof to verify\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateL1GasFeeOracle()\":{\"details\":\"This function is called by the `propose` function\"},\"validateBlobs(bytes)\":{\"details\":\"Only exists here for gas estimation.\"},\"validateHeader(bytes,(bool,uint8,bytes32,bytes32)[],bytes32,uint256,bytes32,(bool,bool))\":{\"details\":\"This is a convenience function that can be used by the sequencer to validate a \\\"partial\\\" header          without having to deal with viem or anvil for simulating timestamps in the future.\",\"params\":{\"_blobsHashesCommitment\":\"- The blobs hash for this block\",\"_currentTime\":\"- The current time\",\"_digest\":\"- The digest to validate\",\"_flags\":\"- The flags to validate\",\"_header\":\"- The header to validate\",\"_signatures\":\"- The signatures to validate\"}}},\"title\":\"Rollup\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"archive()\":{\"notice\":\"Get the current archive root\"},\"archiveAt(uint256)\":{\"notice\":\"Get the archive root of a specific block\"},\"canProposeAtTime(uint256,bytes32)\":{\"notice\":\"Check if msg.sender can propose at a given time\"},\"getAttesters()\":{\"notice\":\"Get the attester set\"},\"getClaimableEpoch()\":{\"notice\":\"Get the next epoch that can be claimed\"},\"getCommitteeAt(uint256)\":{\"notice\":\"Get the committee for a given timestamp\"},\"getCurrentEpoch()\":{\"notice\":\"Get the current epoch number\"},\"getCurrentEpochCommittee()\":{\"notice\":\"Get the validator set for the current epoch\"},\"getCurrentProposer()\":{\"notice\":\"Get the proposer for the current slot\"},\"getCurrentSampleSeed()\":{\"notice\":\"Get the sample seed for the current epoch\"},\"getCurrentSlot()\":{\"notice\":\"Get the current slot number\"},\"getEpochAt(uint256)\":{\"notice\":\"Computes the epoch at a specific time\"},\"getEpochAtSlot(uint256)\":{\"notice\":\"Computes the epoch at a specific slot\"},\"getEpochCommittee(uint256)\":{\"notice\":\"Get the validator set for a given epoch\"},\"getEpochProofPublicInputs(uint256,bytes32[7],bytes32[],bytes,bytes)\":{\"notice\":\"Returns the computed public inputs for the given epoch proof.\"},\"getEpochToProve()\":{\"notice\":\"Get the epoch that should be proven\"},\"getFeeAssetPrice()\":{\"notice\":\"Gets the fee asset price as fee_asset / eth with 1e9 precision\"},\"getManaBaseFeeAt(uint256,bool)\":{\"notice\":\"Gets the mana base fee\"},\"getManaBaseFeeComponentsAt(uint256,bool)\":{\"notice\":\"Gets the mana base fee components          For more context, consult:          https://github.com/AztecProtocol/engineering-designs/blob/main/in-progress/8757-fees/design.md\"},\"getProposerAt(uint256)\":{\"notice\":\"Get the proposer for the slot at a specific timestamp\"},\"getSampleSeedAt(uint256)\":{\"notice\":\"Get the sample seed for a given timestamp\"},\"getSlotAt(uint256)\":{\"notice\":\"Computes the slot at a specific time\"},\"getTimestampForSlot(uint256)\":{\"notice\":\"Get the timestamp for a given slot\"},\"propose((bytes32,bytes32,(int256,int256),bytes,bytes32[]),(bool,uint8,bytes32,bytes32)[],bytes,bytes)\":{\"notice\":\"Publishes the body and propose the block\"},\"proposeAndClaim((bytes32,bytes32,(int256,int256),bytes,bytes32[]),(bool,uint8,bytes32,bytes32)[],bytes,bytes,((uint256,uint256,uint256,address,uint32),(bool,uint8,bytes32,bytes32)))\":{\"notice\":\"Publishes the body and propose the block\"},\"prune()\":{\"notice\":\"Prune the pending chain up to the last proven block\"},\"setAssumeProvenThroughBlockNumber(uint256)\":{\"notice\":\"Sets the assumeProvenThroughBlockNumber. Only the contract deployer can set it.\"},\"setEpochVerifier(address)\":{\"notice\":\"Set the verifier contract\"},\"setProtocolContractTreeRoot(bytes32)\":{\"notice\":\"Set the protocolContractTreeRoot\"},\"setVkTreeRoot(bytes32)\":{\"notice\":\"Set the vkTreeRoot\"},\"setupEpoch()\":{\"notice\":\"Performs a setup of an epoch if needed. The setup will          - Sample the validator set for the epoch          - Set the seed for the epoch          - Update the last seed\"},\"submitEpochRootProof((uint256,bytes32[7],bytes32[],bytes,bytes,bytes))\":{\"notice\":\"Submit a proof for an epoch in the pending chain\"},\"updateL1GasFeeOracle()\":{\"notice\":\"Updates the l1 gas fee oracle\"},\"validateBlobs(bytes)\":{\"notice\":\"Validate blob transactions against given inputs\"},\"validateHeader(bytes,(bool,uint8,bytes32,bytes32)[],bytes32,uint256,bytes32,(bool,bool))\":{\"notice\":\"Validate a header for submission\"}},\"notice\":\"Rollup contract that is concerned about readability and velocity of development not giving a damn about gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/core/Rollup.sol\":\"Rollup\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aztec/=src/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@oz/=lib/openzeppelin-contracts/contracts/\",\":@test/=test/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xf1592302e62bb1223e150fa902b5fdddf9eb0d165e7a31c9cd1445ce57e77dde\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://e3286d35934b4a1c51d87e99a0a1cbdd2d0735690c9f9d8a0c9e6a9ff8e79fc2\",\"dweb:/ipfs/QmNVkpXuKue8TsSPj198RaK5nArKctG5rgoD8z3MXgu6MU\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4251fed1ac036ad28996501522371736318527d7bf2bf7d66fbd2769d6c4771b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2df261bd4de240f54c5829faeaf0ffc919a01f1497cf7ffd8a9a544bdec8fca\",\"dweb:/ipfs/Qmb9ndUuv9RZPKJXZGzjVuhmNuoizxuGRn4QMBmdmLcxS3\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x9e82c00fb176503860139c6bbf593b1a954ee7ff97ab2969656571382b9b58a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34b4eb157b44d4441315db65561ba7cf0fe909dc598c2cfd7080d203077d5b57\",\"dweb:/ipfs/QmcNdvK3kDUAUr48urHxoeHd1TqVDya4YfZTM66i4goEJn\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c33f654cefbbe80a9b436b5792cfe8bda2e87f139f110073c99762558db252f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc7ebd80046a52f28978cf46a24ff3e4c8568264ab6bb138038951c75d576167\",\"dweb:/ipfs/QmQQjXVr4CbDR3DXd8GHEqn3JSJYTnbBHMJp9tvc29yXrc\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]},\"src/core//interfaces/messagebridge/IOutbox.sol\":{\"keccak256\":\"0x77eb91bec9c6cd1d2cf6ae8ea7452b29848d1047e92519e6562004364d2e0eb9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a794b428c9ab9324dfc3c0d6cd1c6f4704bc079b4e139e1f9dd572b255efabe\",\"dweb:/ipfs/QmYB4h9VWD8YT1Kpb7Su47RMQEM8bofDvJkskk8deQFv7X\"]},\"src/core/ProofCommitmentEscrow.sol\":{\"keccak256\":\"0x26d32c7657f38d592238b375bdc359d32b7644ec070d3b392472a6465fcda3c6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6e28b7afcd2de8149bd4c64ad485fbdd90b6cf9d8d05ab40d965ec4baa8fba7b\",\"dweb:/ipfs/QmdJo2qKdqKdXyQ5WaZkZG9g8t4Aqd2yk3zVVtLCZkPxKc\"]},\"src/core/Rollup.sol\":{\"keccak256\":\"0x5dccee483a008000d6a1a361d7a80d8bc72ff513bf0d2de2fbe9876bf8e1799a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://35079f805f960aedf8fe4cedb6f96b34dfa0e58fa2e9f78b01b9c8d6f1d93b2e\",\"dweb:/ipfs/Qmf1xzoGaz2HTgAwyN5tujLbgKtnzYsriAaMmYqrAqNoE4\"]},\"src/core/ValidatorSelection.sol\":{\"keccak256\":\"0x00ef5ecabbcd09b5df0910601c872f9cd770d458313e99fe0adf9741fc851b09\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://26a1d5ff9b519bc0d7874354edbb440259106d1ced3bed85bba547d842a64c98\",\"dweb:/ipfs/Qmd5CVBJXf1rzFTwo3fiVSYK2LHsHYaSL9jEHbybmWW7kb\"]},\"src/core/interfaces/IFeeJuicePortal.sol\":{\"keccak256\":\"0xfe695df7530a1a86c462c3067614f0bd6f25d4b7796336a172168cd148edf27c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ed014ca24172042d21d88ba2a6640ecb870bf66800a9c6f1ae2c35ffe3a35763\",\"dweb:/ipfs/QmfFr3LrBm6Cb4kxSdvxy14GAw7AqxHMe7NNHyf8gvAwWg\"]},\"src/core/interfaces/IProofCommitmentEscrow.sol\":{\"keccak256\":\"0xb166488971e97f41c9fe37fbadbcccf9eb243de74be8daf4fbddebaa24b0402d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d29c88abee97f1fff138b6bd5939a92b1e3d720f63f719e5b653b9e9b540e783\",\"dweb:/ipfs/QmSeV5534LYEbC6z3PB6vopsKxRQyK7531GTMqR8Q7X7ZD\"]},\"src/core/interfaces/IRollup.sol\":{\"keccak256\":\"0x9d8b394f687ecbcef4714eb0726173614523d8f17abaadc698fafef2db766f00\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d74cbd285d13571432f4c0c842fa7775345286f7f092001e7eecd1268adf83ed\",\"dweb:/ipfs/QmPQp4dVCQhUq9yW4AEZA1HJtvihpdDuQZaJJSDS42RaQd\"]},\"src/core/interfaces/ISlasher.sol\":{\"keccak256\":\"0xef10ef30e24940d7685191a2e698528c5dfe2993a95e316314446781f43317e9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://28b1dfbdea775fed1df06539ec20fb7ffbeb149bb80a1413aaad59e3167061cb\",\"dweb:/ipfs/QmPRSpAeZts5E3q41zpZbWmeZrqwdqkaPKKfj73vjvbfZ3\"]},\"src/core/interfaces/IStaking.sol\":{\"keccak256\":\"0xa0e4bdc3eaa735b41a8d25b1b37449d4b64d53663e03301b8e0c56680d6e1e10\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5a867007d89a8fbe95d5ae52d1f3eb822f65e79244610205156d25e1b8826672\",\"dweb:/ipfs/QmYxE4pbxWfiL8xwjaqLaqykbJFKUz6TjebTHVHrHkKitM\"]},\"src/core/interfaces/IValidatorSelection.sol\":{\"keccak256\":\"0x3514300c409249225718b7a45edb5d7a61022d734e0009ca6a49c8bde7175c6a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c693086746375f2e970e2891309d8a4060262ba80d59990c71fe1ccb87dc8372\",\"dweb:/ipfs/QmTjUKXFSkAbB4Z15SuN37ABgcrgwEGwVmGPLL9ZvXuQig\"]},\"src/core/interfaces/IVerifier.sol\":{\"keccak256\":\"0xc03b60799d731daed38340e0a058b427fccf356e4c373152e038d1b3a6cf2610\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://001323b0b0b5db41536210fd6b3d82e45e9c749a2e9f1c84ec45eec10121391d\",\"dweb:/ipfs/QmV1xhTLC3tqWiGxQgsrR23WY4zqp7B9hZrq8hExRVKuuh\"]},\"src/core/interfaces/messagebridge/IInbox.sol\":{\"keccak256\":\"0x27e6a7d08d3ce5bb07cd3d718c57ffc4d18432e8f8c485ddf22b4433cdf6b060\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c0f97c38feaa70e638737675c170313e22383bd7fd5252024bce830f1c5568c1\",\"dweb:/ipfs/QmNzLRXwqqxjJ6S81L66wZ8qD4YE2YcFWpcKtjAmNbkAad\"]},\"src/core/interfaces/messagebridge/IOutbox.sol\":{\"keccak256\":\"0x77eb91bec9c6cd1d2cf6ae8ea7452b29848d1047e92519e6562004364d2e0eb9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a794b428c9ab9324dfc3c0d6cd1c6f4704bc079b4e139e1f9dd572b255efabe\",\"dweb:/ipfs/QmYB4h9VWD8YT1Kpb7Su47RMQEM8bofDvJkskk8deQFv7X\"]},\"src/core/libraries/ConstantsGen.sol\":{\"keccak256\":\"0x1747d5c4890b75e730ac081756e6d1e53ca0fa1c0c47cfa9528b3dd9c72b94f8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://abb74449f26927d9c7e8324ecb5e7146a21609d3c606cead7168ab7b30a5bf14\",\"dweb:/ipfs/QmbBGaL24HwhaJ5WyxHtABZGBXbBMbqj3rXc6CkCWtKSxg\"]},\"src/core/libraries/DataStructures.sol\":{\"keccak256\":\"0xe7f2fbcf1d568c33a8a7d4e79cde54405a41362a5fc891af526db935afe6ce46\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fffa8e1d9f95f563e3664694ad7d3dac5bed96e5d07147c962977f921b1c2c62\",\"dweb:/ipfs/QmT2B2nZrv2ZyvJSGxJZJyzFmsTAdq5JnodZ6pinZtCkee\"]},\"src/core/libraries/Errors.sol\":{\"keccak256\":\"0x08c09ae2d11fc88b8279a14e5d72ca4b24551ae8dbfc3ffd6bd26927cb5ae912\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9edc4929748463bbae2b7b0459904b0894afe7762454343018118408110f78ee\",\"dweb:/ipfs/QmeGoHx7BUza2cabt13ofsr5s8JBfRyEj2dbjou6hnZbji\"]},\"src/core/libraries/RollupLibs/BlobLib.sol\":{\"keccak256\":\"0xd311fd9c16745779ba59663c19a77d2bd4ff77e0a44cd50cd23efd2cbdcf3cb9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://014d17dee522afa10b652d7c504b5e1be1b097d3ce5eddf033749550da4e56dc\",\"dweb:/ipfs/QmRjiZZYJLpnZSCZX2ACn96CQAhedzT5x48KfGFsy4ytST\"]},\"src/core/libraries/RollupLibs/EpochProofLib.sol\":{\"keccak256\":\"0x2e86be26b62e278afd93ae011db792110bd5aecdfb6f5a6b5f2e1e5fcac11475\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a8e46cd0885e80e86e0d65d0b240f3dd410284ce77eb279ecb6faaabe66b8f96\",\"dweb:/ipfs/Qmbk894sy3wLWNUB3vofyy7rsGLMs91PVh7jwHmFzKQxyf\"]},\"src/core/libraries/RollupLibs/EpochProofQuoteLib.sol\":{\"keccak256\":\"0x1efb9a0d8a1c334ddd9836ae9ba7be3730dbcfde6fd7be45b4c153e86905a581\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1cbd753d2622767a7daf4dc596e0853f774c5ad6b284740e4f9c094007e5087\",\"dweb:/ipfs/QmNR5wFBCnyjrfqJoLfAmkksCyUXaTkE7wePkDER79r9RB\"]},\"src/core/libraries/RollupLibs/ExtRollupLib.sol\":{\"keccak256\":\"0xfe24e4e1ccc2640812954ace10843fbf3ab2af85522a42f1894eee333beb2f63\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://553289d0ce8980441cf07daada3151b11d028663edc88f0b5fb1700ce5d0585b\",\"dweb:/ipfs/QmV6qkTp19Xo1Z4jS3sH9Vfir4asLrPVTfGYzVX4Kago3X\"]},\"src/core/libraries/RollupLibs/FeeMath.sol\":{\"keccak256\":\"0x0f275536a3b5e7f894ce86ca0303b0e5e3e09bfe3ec1b183a333ef55556c7cf9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ced6a8fc093d76985222cb07deba2b76541de9d15667a569f4c751abac371739\",\"dweb:/ipfs/QmY6Kk1hZHgin771gmx6hedzkQENG1nB1pxPWXv9RbQJzT\"]},\"src/core/libraries/RollupLibs/HeaderLib.sol\":{\"keccak256\":\"0x956327939302869373a18e70378012de1a5522e5dcd0cf2cb2bd6b49b512a838\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6d334e1459ce557f0b6e3f62d5a4dd2312fc6d8fe25ec74bb82910226e2cbf0e\",\"dweb:/ipfs/QmYeyCvoDnBSQo8DDcts3sRgBVMjVARjZYSMFUGavXhgqK\"]},\"src/core/libraries/RollupLibs/IntRollupLib.sol\":{\"keccak256\":\"0xefea90f36c06d460727df6584802d5c0fb9d940e38c7b037161e116270025ee3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://094f58f468a4c8c16eb9665c0627554cd45b25dbac7e7cddf2250e0770ffb6dd\",\"dweb:/ipfs/QmSS3FKnZPA4BUfUJkYfeu7SserTzHajw9kEegdxCgQLBL\"]},\"src/core/libraries/RollupLibs/ProposeLib.sol\":{\"keccak256\":\"0x7dbc401a78317cf9777d96035e2ff76a592b817a1066554da94279d350a9b351\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://922a84fa3ab06f6d263a0437d4aa2380bf2bfbb0d30323428bb24d8327d7776a\",\"dweb:/ipfs/Qmb9QE372UDQbFMkVD23ZC2wZA59ZeNPFP3ifKzQKmS9hR\"]},\"src/core/libraries/RollupLibs/ValidationLib.sol\":{\"keccak256\":\"0x366ce037ef75d157e8ad11dfc2667b90043d7c4af93a320a8bd41bb05428854c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2ee66b63c118a423cc489baeb596c9eb71c2a1f933de1cd2dbce0814c03c8847\",\"dweb:/ipfs/QmYprsRHCKsaRWryGFmPAvpZjC6YEAUvjCfEjmQN7tAtkt\"]},\"src/core/libraries/TimeLib.sol\":{\"keccak256\":\"0xf23bbdd4eb9f6d496eae97e036559dda8a106459304279da74781ee6694d878d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1ec5c0b8c8130622f80071f8c3626e1de5aac32ba8f40e730746b7c452d60627\",\"dweb:/ipfs/Qme5dbQdYBdyjCKeksqjzY4N21DFz7pEaVwKCo9edy6ytK\"]},\"src/core/libraries/TimeMath.sol\":{\"keccak256\":\"0xf1d1de946e60b96e6a86187b17928e124ba822ee0189a491503cf79f71287e0d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0575bc4dae4cf4605909a5cb64f6d21674996b286f837f57c3c3b656741f79c4\",\"dweb:/ipfs/QmXxrSF8KrxHhizVhpUSNDrknSTXKMBYtrwwyYW2ydoCAS\"]},\"src/core/libraries/ValidatorSelectionLib/ValidatorSelectionLib.sol\":{\"keccak256\":\"0xf14f1a5bf7099cbea6f8d82c3ce5109458a58fd11ffb04127e69213289fd8dff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a224d703dbfae904425a84535c4496e28aab4ee3ae1b2db05c2aae0e61650fc3\",\"dweb:/ipfs/QmbSSYEHieJMarvZcfQVJ6DRDw2uPqGmiMXiw76zAMErPi\"]},\"src/core/libraries/crypto/FrontierLib.sol\":{\"keccak256\":\"0xd0a77b213206a28fde27c0f5ad98ed38eeee01c8916664e37b5fdf35fa3738ab\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f7d872b7cb822efc15891b92afc6f66c12987856fe203db6db7cee3658224c19\",\"dweb:/ipfs/QmPyYzD5iFuoxgZ1kvW2adgPZvYHGH4rDQg4XfCge6LVAi\"]},\"src/core/libraries/crypto/Hash.sol\":{\"keccak256\":\"0xce89be3e053f6ad0d1e982bda6dd6b8cfeebd5324ef50fc3e6190a7f0a7b1f40\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4afa14e134fac170d24577771ad3e2730b8ada101d0a9547cd1441a86c6f2df1\",\"dweb:/ipfs/QmexC4obvjWycv6YSbDE5Lcj6t38YA5kZkRKkoKHPiGdTs\"]},\"src/core/libraries/crypto/MerkleLib.sol\":{\"keccak256\":\"0x36985e1dfd5d237bd8c1dd95dba61f6c4342d83192b9f6cddb785b6dd4b556d1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8d76093e2618e6fe1c4ebc90693f27b351fbe3fe73db4af095d0f73350d5d9c6\",\"dweb:/ipfs/QmVuZHWS2Cit9sYj81bQ5U94TtyhEoFc5y2E9gNEnSaZZx\"]},\"src/core/libraries/crypto/SampleLib.sol\":{\"keccak256\":\"0xabeb716838223186d2c98ccf1658c4979677b19bc73362e55a645329338d5bee\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d26321d236b6f3d74c1b811cdde75425404c13c89d58c10cf9a526e657f22809\",\"dweb:/ipfs/QmdYiV9oMSDERSuHiwUj6dRrHxQWFbPUEDYPmvFH5Cnm1Q\"]},\"src/core/libraries/crypto/SignatureLib.sol\":{\"keccak256\":\"0xeee7b82d4d7a718cc23bab4748432a1a67be630d7d76bd6d1f26f85fe1f5f1ff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b048817b0c1eb5123575da17ddf66365a04c9a847f769cc42645f559144b901b\",\"dweb:/ipfs/Qmb8Lj8jmFVUND59jgTRhvuVxjYQp2cJ9FejADZpjAp6Xq\"]},\"src/core/libraries/staking/StakingLib.sol\":{\"keccak256\":\"0xe3a4cd770146e69e6eca8a435c36abfcc6d624a4d41f90b4d14b7c572eda3942\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://53a7dd3cd3b6b85d1fd584344221388cd5b351db60e4375d5302d791afbc41ad\",\"dweb:/ipfs/QmQo3yTCTxbLL7voocpcW5vkVD8sfPE9Fp5mG4XrP77Pt7\"]},\"src/core/messagebridge/Inbox.sol\":{\"keccak256\":\"0x653ca789628f46007d2ecce929c1d98c086d61cdb71a7c78dd2567b3feb05d9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://45055d9584d093f08d12a44d187377658a14efde7c6c324990d8e6e608222150\",\"dweb:/ipfs/QmNjwRYAg7gy3ZDbi1r9CbgxCTdTcirCBPrPs9pKmAfKaF\"]},\"src/core/messagebridge/Outbox.sol\":{\"keccak256\":\"0x7b221f61d97479c8accc5b2220c7fc257420954582f7b2bd045438dcd2f7ba38\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f2df2a7c744fd9c3b7e18169718c7764cc268a01e9f65112e758d4bbbc8cb088\",\"dweb:/ipfs/QmdhYavgyDgArV3fRJsLctFZfAhpVWxwKTqr4YehERCykb\"]},\"src/core/staking/Slasher.sol\":{\"keccak256\":\"0x55849ffbf07dfc148f64e2a88cdf4ce2eb69df42924e462fdf85fac19f61c857\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://289f6937c195c7a0475d5c6b41d903a232c18a166348e7aa7a31cbbbabcb5dfe\",\"dweb:/ipfs/QmdnLuZ2CSz4E2hBYUCco8zDSaY4QjC6CDQBcuiy6zwnak\"]},\"src/core/staking/SlashingProposer.sol\":{\"keccak256\":\"0x4e60da0c7e81b258400f329ab461aed138207f5bcb9992049be95daedabed2bc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0272e22ee11a472a513b8eb65e72686a38928af3cc449ccc1c38d16e760f6e4a\",\"dweb:/ipfs/QmcATKdEy4CF1CqhWtrEczT5YxZWYK33JCAFevFawv6Juf\"]},\"src/governance/interfaces/IGovernanceProposer.sol\":{\"keccak256\":\"0xc7a516cc89ddaa9ab641e6ffd4dd5f9e198f708e95ecdbb7a512afd52fcb7fa2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1f34b8a33c4f49553d73eba9a11ac8c6009ee1c9f00b2d7b78c0a07612cb7899\",\"dweb:/ipfs/QmYjctKDvL3yWNro5X3QzgiRtQ52JV9Pt3rSFyCCAGXchC\"]},\"src/governance/interfaces/IPayload.sol\":{\"keccak256\":\"0x07a32aa633c48bdc07c34fefb86441ab2f8e0fdb9a4eca1b11ba806b5c4f1997\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://46e1161f04c655e8779fbf3d92ad827c80302f47da2be4024a14829955eeec87\",\"dweb:/ipfs/QmcAHwConVo4r79u7WGt7U3GbZzvcPp5rXiaaoskznENJX\"]},\"src/governance/interfaces/IRegistry.sol\":{\"keccak256\":\"0x973aa85eabf4fefd19c96f5205b4b4e3d6db9e701f4fbf4bfd517c631bc91bd2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0dbb13c314d9d2613208064ed6105cbc48e6c9ae68f93eb74294d58e67ff1c0d\",\"dweb:/ipfs/QmcYL77pnsGH2BLJNcx9Kxb4amMmRa6jc1zpb7X4o2UFJ1\"]},\"src/governance/interfaces/IRewardDistributor.sol\":{\"keccak256\":\"0xc22f9a0bac6f0646619b5a118a83e09b661a7f075e91da571378b0035749b7f5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://087ce30a8dd5c809937182a27b641ae474c19332f09c5d08103dfde5f1227985\",\"dweb:/ipfs/QmeWdp8zkA81H7CBe73NZhcnd7CjuKR72ov3XuMpqPi8a1\"]},\"src/governance/libraries/DataStructures.sol\":{\"keccak256\":\"0x9e1abc53c72a73df7e36d999910ffc7f8e652d9ab05e643b956593b776c38b25\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7b9625ac0569d8c403466cf5a2963cef94e758a04ce0d67818691c1afad03ac1\",\"dweb:/ipfs/QmP4Gve2FKGGDtxe37282UgRzXDQkWzSSucfUhu5rJan56\"]},\"src/governance/libraries/Errors.sol\":{\"keccak256\":\"0xa8778a2cd3efbc1243e8dcd8b2d3e7fef56d23d8d235c3112464e3411328efc9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0cf8183e25f5133c120c328177319315bc77f7b40a16d434d5926ad96f68e2c9\",\"dweb:/ipfs/QmQ1z23sdYiCnzvfWjmHNcPeCbbsW3itf1bvLDq9QhvRmG\"]},\"src/governance/proposer/EmpireBase.sol\":{\"keccak256\":\"0xc44649c622643c6a0217b32e5fb3302f5821eba92ac1765b6953fe57b5775f6c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ed5c63881c121d6aa2246f0009fd08fcf5a01cbc642bc1cde4e3b4fd94d8dcb7\",\"dweb:/ipfs/QmRo8gdgw3VV5sVjhtR2K6kYRwepeFE6uz7an2aqfBRyds\"]},\"src/mock/MockVerifier.sol\":{\"keccak256\":\"0x0479bb7f0e83c754d69a17215530e4a073434875cba76a1458931a58328f93ad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ad8084f60e55610e55fb80db20aed5ba82a6a2c07d92d6e4e64fb7b383d2b22c\",\"dweb:/ipfs/QmRUnDdwgNjMaZJ9MYsArXbN1QD8ojMcSmFnDxfJUoxRfv\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.27+commit.40a35a09"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "contract IFeeJuicePortal",
                            "name": "_fpcJuicePortal",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IRewardDistributor",
                            "name": "_rewardDistributor",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IERC20",
                            "name": "_stakingAsset",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "_vkTreeRoot",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "_protocolContractTreeRoot",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "address",
                            "name": "_ares",
                            "type": "address"
                        },
                        {
                            "internalType": "struct Config",
                            "name": "_config",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "aztecSlotDuration",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "aztecEpochDuration",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "targetCommitteeSize",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "aztecEpochProofClaimWindowInL2Slots",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "minimumStake",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "slashingQuorum",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "slashingRoundSize",
                                    "type": "uint256"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [
                        {
                            "internalType": "Slot",
                            "name": "expected",
                            "type": "uint256"
                        },
                        {
                            "internalType": "Slot",
                            "name": "actual",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "HeaderLib__InvalidSlotNumber"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidShortString"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "OwnableInvalidOwner"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "OwnableUnauthorizedAccount"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "expected",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "actual",
                            "type": "bytes32"
                        }
                    ],
                    "type": "error",
                    "name": "Rollup__InvalidArchive"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "expected",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "actual",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "Rollup__InvalidBlockNumber"
                },
                {
                    "inputs": [
                        {
                            "internalType": "Epoch",
                            "name": "expected",
                            "type": "uint256"
                        },
                        {
                            "internalType": "Epoch",
                            "name": "actual",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "Rollup__InvalidEpoch"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "expected",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "actual",
                            "type": "bytes32"
                        }
                    ],
                    "type": "error",
                    "name": "Rollup__InvalidInHash"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Rollup__NoEpochToProve"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Rollup__NothingToPrune"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Rollup__ProofRightAlreadyClaimed"
                },
                {
                    "inputs": [
                        {
                            "internalType": "Slot",
                            "name": "lastSlot",
                            "type": "uint256"
                        },
                        {
                            "internalType": "Slot",
                            "name": "proposedSlot",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "Rollup__SlotAlreadyInChain"
                },
                {
                    "inputs": [
                        {
                            "internalType": "int256",
                            "name": "value",
                            "type": "int256"
                        }
                    ],
                    "type": "error",
                    "name": "SafeCastOverflowedIntToUint"
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "str",
                            "type": "string"
                        }
                    ],
                    "type": "error",
                    "name": "StringTooLong"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "attester",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "proposer",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ValidatorSelection__InvalidDeposit"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "attester",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "proposer",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "withdrawer",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Deposit",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "type": "event",
                    "name": "EIP712DomainChanged",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "blockNumber",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes32",
                            "name": "archive",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes32[]",
                            "name": "versionedBlobHashes",
                            "type": "bytes32[]",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "L2BlockProposed",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "blockNumber",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes32",
                            "name": "proverId",
                            "type": "bytes32",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "L2ProofVerified",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "previousOwner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "OwnershipTransferred",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "Epoch",
                            "name": "epoch",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "bondProvider",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "proposer",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "bondAmount",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "Slot",
                            "name": "currentSlot",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ProofRightClaimed",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "provenBlockNumber",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "pendingBlockNumber",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "PrunedPending",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "attester",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Slashed",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "attester",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "recipient",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "WithdrawFinalised",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "attester",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "recipient",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "WithdrawInitiated",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "ASSET",
                    "outputs": [
                        {
                            "internalType": "contract IERC20",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "CLAIM_DURATION_IN_L2_SLOTS",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "CUAUHXICALLI",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "FEE_JUICE_PORTAL",
                    "outputs": [
                        {
                            "internalType": "contract IFeeJuicePortal",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "INBOX",
                    "outputs": [
                        {
                            "internalType": "contract IInbox",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "IS_FOUNDRY_TEST",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "L1_BLOCK_AT_GENESIS",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "LAG",
                    "outputs": [
                        {
                            "internalType": "Slot",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "LIFETIME",
                    "outputs": [
                        {
                            "internalType": "Slot",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "OUTBOX",
                    "outputs": [
                        {
                            "internalType": "contract IOutbox",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "PROOF_COMMITMENT_ESCROW",
                    "outputs": [
                        {
                            "internalType": "contract IProofCommitmentEscrow",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "PROOF_COMMITMENT_MIN_BOND_AMOUNT_IN_TST",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "REWARD_DISTRIBUTOR",
                    "outputs": [
                        {
                            "internalType": "contract IRewardDistributor",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "TARGET_COMMITTEE_SIZE",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "VERSION",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "VM_ADDRESS",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "archive",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_blockNumber",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "archiveAt",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "Timestamp",
                            "name": "_ts",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "_archive",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "canProposeAtTime",
                    "outputs": [
                        {
                            "internalType": "Slot",
                            "name": "",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "canPrune",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "Timestamp",
                            "name": "_ts",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "canPruneAtTime",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct CheatDepositArgs[]",
                            "name": "_args",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "proposer",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "withdrawer",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "amount",
                                    "type": "uint256"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "cheat__InitialiseValidatorSet"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "checkBlob",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct SignedEpochProofQuote",
                            "name": "_quote",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct EpochProofQuote",
                                    "name": "quote",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "Epoch",
                                            "name": "epochToProve",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "Slot",
                                            "name": "validUntilSlot",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "bondAmount",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "prover",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "uint32",
                                            "name": "basisPointFee",
                                            "type": "uint32"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct Signature",
                                    "name": "signature",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "bool",
                                            "name": "isEmpty",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "uint8",
                                            "name": "v",
                                            "type": "uint8"
                                        },
                                        {
                                            "internalType": "bytes32",
                                            "name": "r",
                                            "type": "bytes32"
                                        },
                                        {
                                            "internalType": "bytes32",
                                            "name": "s",
                                            "type": "bytes32"
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "claimEpochProofRight"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_attester",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "_proposer",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "_withdrawer",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "deposit"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "eip712Domain",
                    "outputs": [
                        {
                            "internalType": "bytes1",
                            "name": "fields",
                            "type": "bytes1"
                        },
                        {
                            "internalType": "string",
                            "name": "name",
                            "type": "string"
                        },
                        {
                            "internalType": "string",
                            "name": "version",
                            "type": "string"
                        },
                        {
                            "internalType": "uint256",
                            "name": "chainId",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "verifyingContract",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "salt",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "extensions",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_attester",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "finaliseWithdraw"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getActiveAttesterCount",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_index",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getAttesterAtIndex",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getAttesters",
                    "outputs": [
                        {
                            "internalType": "address[]",
                            "name": "",
                            "type": "address[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_blockNumber",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getBlobPublicInputsHash",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_blockNumber",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getBlock",
                    "outputs": [
                        {
                            "internalType": "struct BlockLog",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct FeeHeader",
                                    "name": "feeHeader",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "uint256",
                                            "name": "excessMana",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "feeAssetPriceNumerator",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "manaUsed",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "provingCostPerManaNumerator",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "congestionCost",
                                            "type": "uint256"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "archive",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "blockHash",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "Slot",
                                    "name": "slotNumber",
                                    "type": "uint256"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getClaimableEpoch",
                    "outputs": [
                        {
                            "internalType": "Epoch",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "Timestamp",
                            "name": "_ts",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getCommitteeAt",
                    "outputs": [
                        {
                            "internalType": "address[]",
                            "name": "",
                            "type": "address[]"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getCurrentEpoch",
                    "outputs": [
                        {
                            "internalType": "Epoch",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getCurrentEpochCommittee",
                    "outputs": [
                        {
                            "internalType": "address[]",
                            "name": "",
                            "type": "address[]"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getCurrentProposer",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getCurrentSampleSeed",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getCurrentSlot",
                    "outputs": [
                        {
                            "internalType": "Slot",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "Timestamp",
                            "name": "_ts",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getEpochAt",
                    "outputs": [
                        {
                            "internalType": "Epoch",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "Slot",
                            "name": "_slotNumber",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getEpochAtSlot",
                    "outputs": [
                        {
                            "internalType": "Epoch",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "Epoch",
                            "name": "_epoch",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getEpochCommittee",
                    "outputs": [
                        {
                            "internalType": "address[]",
                            "name": "",
                            "type": "address[]"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getEpochDuration",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_blockNumber",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getEpochForBlock",
                    "outputs": [
                        {
                            "internalType": "Epoch",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_epochSize",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes32[7]",
                            "name": "_args",
                            "type": "bytes32[7]"
                        },
                        {
                            "internalType": "bytes32[]",
                            "name": "_fees",
                            "type": "bytes32[]"
                        },
                        {
                            "internalType": "bytes",
                            "name": "_blobPublicInputs",
                            "type": "bytes"
                        },
                        {
                            "internalType": "bytes",
                            "name": "_aggregationObject",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getEpochProofPublicInputs",
                    "outputs": [
                        {
                            "internalType": "bytes32[]",
                            "name": "",
                            "type": "bytes32[]"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getEpochToProve",
                    "outputs": [
                        {
                            "internalType": "Epoch",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_attester",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getExit",
                    "outputs": [
                        {
                            "internalType": "struct Exit",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Timestamp",
                                    "name": "exitableAt",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getExitDelay",
                    "outputs": [
                        {
                            "internalType": "Timestamp",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getFeeAssetPrice",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getGenesisTime",
                    "outputs": [
                        {
                            "internalType": "Timestamp",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_attester",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getInfo",
                    "outputs": [
                        {
                            "internalType": "struct ValidatorInfo",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "stake",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "address",
                                    "name": "withdrawer",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "proposer",
                                    "type": "address"
                                },
                                {
                                    "internalType": "enum Status",
                                    "name": "status",
                                    "type": "uint8"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "Timestamp",
                            "name": "_timestamp",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getL1FeesAt",
                    "outputs": [
                        {
                            "internalType": "struct L1FeeData",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "baseFee",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "blobFee",
                                    "type": "uint256"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "Timestamp",
                            "name": "_timestamp",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bool",
                            "name": "_inFeeAsset",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getManaBaseFeeAt",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "Timestamp",
                            "name": "_timestamp",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bool",
                            "name": "_inFeeAsset",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getManaBaseFeeComponentsAt",
                    "outputs": [
                        {
                            "internalType": "struct ManaBaseFeeComponents",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "congestionCost",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "congestionMultiplier",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "dataCost",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "gasCost",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "provingCost",
                                    "type": "uint256"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getMinimumStake",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_index",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getOperatorAtIndex",
                    "outputs": [
                        {
                            "internalType": "struct OperatorInfo",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "proposer",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getPendingBlockNumber",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getProofClaim",
                    "outputs": [
                        {
                            "internalType": "struct DataStructures.EpochProofClaim",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Epoch",
                                    "name": "epochToProve",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "basisPointFee",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "bondAmount",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "address",
                                    "name": "bondProvider",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "proposerClaimant",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "Timestamp",
                            "name": "_ts",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getProposerAt",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_index",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getProposerAtIndex",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_attester",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getProposerForAttester",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getProvenBlockNumber",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "Timestamp",
                            "name": "_ts",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getSampleSeedAt",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getSlasher",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "Timestamp",
                            "name": "_ts",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getSlotAt",
                    "outputs": [
                        {
                            "internalType": "Slot",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getSlotDuration",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getStakingAsset",
                    "outputs": [
                        {
                            "internalType": "contract IERC20",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "Slot",
                            "name": "_slotNumber",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getTimestampForSlot",
                    "outputs": [
                        {
                            "internalType": "Timestamp",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getTips",
                    "outputs": [
                        {
                            "internalType": "struct ChainTips",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "pendingBlockNumber",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "provenBlockNumber",
                                    "type": "uint256"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_attester",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "_recipient",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "initiateWithdraw",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "owner",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct ProposeArgs",
                            "name": "_args",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "archive",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "blockHash",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "struct OracleInput",
                                    "name": "oracleInput",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "int256",
                                            "name": "provingCostModifier",
                                            "type": "int256"
                                        },
                                        {
                                            "internalType": "int256",
                                            "name": "feeAssetPriceModifier",
                                            "type": "int256"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "header",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "bytes32[]",
                                    "name": "txHashes",
                                    "type": "bytes32[]"
                                }
                            ]
                        },
                        {
                            "internalType": "struct Signature[]",
                            "name": "_signatures",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "isEmpty",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "uint8",
                                    "name": "v",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "r",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "s",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        },
                        {
                            "internalType": "bytes",
                            "name": "_blobInput",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "propose"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct ProposeArgs",
                            "name": "_args",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "archive",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "blockHash",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "struct OracleInput",
                                    "name": "oracleInput",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "int256",
                                            "name": "provingCostModifier",
                                            "type": "int256"
                                        },
                                        {
                                            "internalType": "int256",
                                            "name": "feeAssetPriceModifier",
                                            "type": "int256"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "header",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "bytes32[]",
                                    "name": "txHashes",
                                    "type": "bytes32[]"
                                }
                            ]
                        },
                        {
                            "internalType": "struct Signature[]",
                            "name": "_signatures",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "isEmpty",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "uint8",
                                    "name": "v",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "r",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "s",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "_body",
                            "type": "bytes"
                        },
                        {
                            "internalType": "bytes",
                            "name": "_blobInput",
                            "type": "bytes"
                        },
                        {
                            "internalType": "struct SignedEpochProofQuote",
                            "name": "_quote",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct EpochProofQuote",
                                    "name": "quote",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "Epoch",
                                            "name": "epochToProve",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "Slot",
                                            "name": "validUntilSlot",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "bondAmount",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "prover",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "uint32",
                                            "name": "basisPointFee",
                                            "type": "uint32"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct Signature",
                                    "name": "signature",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "bool",
                                            "name": "isEmpty",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "uint8",
                                            "name": "v",
                                            "type": "uint8"
                                        },
                                        {
                                            "internalType": "bytes32",
                                            "name": "r",
                                            "type": "bytes32"
                                        },
                                        {
                                            "internalType": "bytes32",
                                            "name": "s",
                                            "type": "bytes32"
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "proposeAndClaim"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "prune"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct EpochProofQuote",
                            "name": "_quote",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Epoch",
                                    "name": "epochToProve",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "Slot",
                                    "name": "validUntilSlot",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "bondAmount",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "address",
                                    "name": "prover",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint32",
                                    "name": "basisPointFee",
                                    "type": "uint32"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "quoteToDigest",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "renounceOwnership"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_blockNumber",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setAssumeProvenThroughBlockNumber"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_verifier",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setEpochVerifier"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_protocolContractTreeRoot",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setProtocolContractTreeRoot"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_vkTreeRoot",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setVkTreeRoot"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setupEpoch"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_attester",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "slash"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_myHeaderBlockNumber",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "status",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "provenBlockNumber",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "provenArchive",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256",
                            "name": "pendingBlockNumber",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "pendingArchive",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "archiveOfMyBlock",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "Epoch",
                            "name": "provenEpochNumber",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct SubmitEpochRootProofArgs",
                            "name": "_args",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "epochSize",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "bytes32[7]",
                                    "name": "args",
                                    "type": "bytes32[7]"
                                },
                                {
                                    "internalType": "bytes32[]",
                                    "name": "fees",
                                    "type": "bytes32[]"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "blobPublicInputs",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "aggregationObject",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "proof",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "submitEpochRootProof"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferOwnership"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "updateL1GasFeeOracle"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes",
                            "name": "_blobsInput",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "validateBlobs",
                    "outputs": [
                        {
                            "internalType": "bytes32[]",
                            "name": "",
                            "type": "bytes32[]"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "Timestamp",
                            "name": "_ts",
                            "type": "uint256"
                        },
                        {
                            "internalType": "struct SignedEpochProofQuote",
                            "name": "_quote",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct EpochProofQuote",
                                    "name": "quote",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "Epoch",
                                            "name": "epochToProve",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "Slot",
                                            "name": "validUntilSlot",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "bondAmount",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "prover",
                                            "type": "address"
                                        },
                                        {
                                            "internalType": "uint32",
                                            "name": "basisPointFee",
                                            "type": "uint32"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "struct Signature",
                                    "name": "signature",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "bool",
                                            "name": "isEmpty",
                                            "type": "bool"
                                        },
                                        {
                                            "internalType": "uint8",
                                            "name": "v",
                                            "type": "uint8"
                                        },
                                        {
                                            "internalType": "bytes32",
                                            "name": "r",
                                            "type": "bytes32"
                                        },
                                        {
                                            "internalType": "bytes32",
                                            "name": "s",
                                            "type": "bytes32"
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "validateEpochProofRightClaimAtTime"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes",
                            "name": "_header",
                            "type": "bytes"
                        },
                        {
                            "internalType": "struct Signature[]",
                            "name": "_signatures",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "isEmpty",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "uint8",
                                    "name": "v",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "r",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "s",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes32",
                            "name": "_digest",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "Timestamp",
                            "name": "_currentTime",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "_blobsHashesCommitment",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "struct DataStructures.ExecutionFlags",
                            "name": "_flags",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "ignoreDA",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "ignoreSignatures",
                                    "type": "bool"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "validateHeader"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "archive()": {
                        "returns": {
                            "_0": "bytes32 - The current archive root"
                        }
                    },
                    "archiveAt(uint256)": {
                        "params": {
                            "_blockNumber": "- The block number to get the archive root of"
                        },
                        "returns": {
                            "_0": "bytes32 - The archive root of the block"
                        }
                    },
                    "canProposeAtTime(uint256,bytes32)": {
                        "params": {
                            "_archive": "- The archive to check (should be the latest archive)",
                            "_ts": "- The timestamp to check"
                        },
                        "returns": {
                            "_0": "uint256 - The slot at the given timestamp",
                            "_1": "uint256 - The block number at the given timestamp"
                        }
                    },
                    "eip712Domain()": {
                        "details": "See {IERC-5267}."
                    },
                    "getAttesters()": {
                        "details": "Consider removing this to replace with a `size` and individual getter.",
                        "returns": {
                            "_0": "The validator set"
                        }
                    },
                    "getClaimableEpoch()": {
                        "details": "Will revert if the epoch has already been claimed or if there is no epoch to prove"
                    },
                    "getCommitteeAt(uint256)": {
                        "params": {
                            "_ts": "- The timestamp to get the committee for"
                        },
                        "returns": {
                            "_0": "The committee for the given timestamp"
                        }
                    },
                    "getCurrentEpoch()": {
                        "returns": {
                            "_0": "The current epoch number"
                        }
                    },
                    "getCurrentEpochCommittee()": {
                        "returns": {
                            "_0": "The validator set for the current epoch"
                        }
                    },
                    "getCurrentProposer()": {
                        "details": "Calls `getCurrentProposer(uint256)` with the current timestamp",
                        "returns": {
                            "_0": "The address of the proposer"
                        }
                    },
                    "getCurrentSampleSeed()": {
                        "returns": {
                            "_0": "The sample seed for the current epoch"
                        }
                    },
                    "getCurrentSlot()": {
                        "returns": {
                            "_0": "The current slot number"
                        }
                    },
                    "getEpochAt(uint256)": {
                        "params": {
                            "_ts": "- The timestamp to compute the epoch for"
                        },
                        "returns": {
                            "_0": "The computed epoch"
                        }
                    },
                    "getEpochAtSlot(uint256)": {
                        "params": {
                            "_slotNumber": "- The slot number to compute the epoch for"
                        },
                        "returns": {
                            "_0": "The computed epoch"
                        }
                    },
                    "getEpochCommittee(uint256)": {
                        "details": "Consider removing this to replace with a `size` and individual getter.",
                        "params": {
                            "_epoch": "The epoch number to get the validator set for"
                        },
                        "returns": {
                            "_0": "The validator set for the given epoch"
                        }
                    },
                    "getEpochProofPublicInputs(uint256,bytes32[7],bytes32[],bytes,bytes)": {
                        "details": "Useful for debugging and testing. Allows submitter to compare their own public inputs used for generating the proof vs the ones assembled by this contract when verifying it.",
                        "params": {
                            "_aggregationObject": "- The aggregation object for the proof",
                            "_args": "- Array of public inputs to the proof (previousArchive, endArchive, previousBlockHash, endBlockHash, endTimestamp, outHash, proverId)",
                            "_epochSize": "- The size of the epoch (to be promoted to a constant)",
                            "_fees": "- Array of recipient-value pairs with fees to be distributed for the epoch"
                        }
                    },
                    "getEpochToProve()": {
                        "details": "This is the epoch that should be proven. It does so by getting the epoch of the block        following the last proven block. If there is no such block (i.e. the pending chain is        the same as the proven chain), then revert.",
                        "returns": {
                            "_0": "uint256 - The epoch to prove"
                        }
                    },
                    "getFeeAssetPrice()": {
                        "returns": {
                            "_0": "The fee asset price"
                        }
                    },
                    "getManaBaseFeeAt(uint256,bool)": {
                        "params": {
                            "_inFeeAsset": "- Whether to return the fee in the fee asset or ETH"
                        },
                        "returns": {
                            "_0": "The mana base fee"
                        }
                    },
                    "getManaBaseFeeComponentsAt(uint256,bool)": {
                        "details": "TODO #10004 - As part of the refactor, will likely get rid of this function or make it private          keeping it public for now makes it simpler to test.",
                        "params": {
                            "_inFeeAsset": "- Whether to return the fee in the fee asset or ETH"
                        },
                        "returns": {
                            "_0": "The mana base fee components"
                        }
                    },
                    "getProposerAt(uint256)": {
                        "details": "This function is very useful for off-chain usage, as it easily allow a client to          determine who will be the proposer at the NEXT ethereum block.          Should not be trusted when moving beyond the current epoch, since changes to the          validator set might not be reflected when we actually reach that epoch (more changes          might have happened).The proposer is selected from the validator set of the current epoch.Should only be access on-chain if epoch is setup, otherwise very expensive.A return value of address(0) means that the proposer is \"open\" and can be anyone.If the current epoch is the first epoch, returns address(0)          If the current epoch is setup, we will return the proposer for the current slot          If the current epoch is not setup, we will perform a sample as if it was (gas heavy)",
                        "returns": {
                            "_0": "The address of the proposer"
                        }
                    },
                    "getSampleSeedAt(uint256)": {
                        "params": {
                            "_ts": "- The timestamp to get the sample seed for"
                        },
                        "returns": {
                            "_0": "The sample seed for the given timestamp"
                        }
                    },
                    "getSlotAt(uint256)": {
                        "params": {
                            "_ts": "- The timestamp to compute the slot for"
                        },
                        "returns": {
                            "_0": "The computed slot"
                        }
                    },
                    "getTimestampForSlot(uint256)": {
                        "params": {
                            "_slotNumber": "- The slot number to get the timestamp for"
                        },
                        "returns": {
                            "_0": "The timestamp for the given slot"
                        }
                    },
                    "owner()": {
                        "details": "Returns the address of the current owner."
                    },
                    "propose((bytes32,bytes32,(int256,int256),bytes,bytes32[]),(bool,uint8,bytes32,bytes32)[],bytes,bytes)": {
                        "details": "`eth_log_handlers` rely on this function",
                        "params": {
                            "": "- The body of the L2 block",
                            "_args": "- The arguments to propose the block",
                            "_blobInput": "- The blob evaluation KZG proof, challenge, and opening required for the precompile.",
                            "_signatures": "- Signatures from the validators // TODO(#9101): The below _body should be removed once we can extract blobs. It's only here so the archiver can extract tx effects."
                        }
                    },
                    "proposeAndClaim((bytes32,bytes32,(int256,int256),bytes,bytes32[]),(bool,uint8,bytes32,bytes32)[],bytes,bytes,((uint256,uint256,uint256,address,uint32),(bool,uint8,bytes32,bytes32)))": {
                        "details": "`eth_log_handlers` rely on this function",
                        "params": {
                            "_args": "- The arguments to propose the block",
                            "_blobInput": "- The blob evaluation KZG proof, challenge, and opening required for the precompile.",
                            "_body": "- The body of the L2 block",
                            "_signatures": "- Signatures from the validators // TODO(#9101): The below _body should be removed once we can extract blobs. It's only here so the archiver can extract tx effects."
                        }
                    },
                    "prune()": {
                        "details": "Will revert if there is nothing to prune or if the chain is not ready to be pruned"
                    },
                    "renounceOwnership()": {
                        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
                    },
                    "setAssumeProvenThroughBlockNumber(uint256)": {
                        "params": {
                            "_blockNumber": "- New value."
                        }
                    },
                    "setEpochVerifier(address)": {
                        "details": "This is only needed for testing, and should be removed",
                        "params": {
                            "_verifier": "- The new verifier contract"
                        }
                    },
                    "setProtocolContractTreeRoot(bytes32)": {
                        "details": "This is only needed for testing, and should be removed",
                        "params": {
                            "_protocolContractTreeRoot": "- The new protocolContractTreeRoot to be used by proofs"
                        }
                    },
                    "setVkTreeRoot(bytes32)": {
                        "details": "This is only needed for testing, and should be removed",
                        "params": {
                            "_vkTreeRoot": "- The new vkTreeRoot to be used by proofs"
                        }
                    },
                    "setupEpoch()": {
                        "details": "Since this is a reference optimising for simplicity, we ValidatorSelectionStore the actual validator set in the epoch structure.          This is very heavy on gas, so start crying because the gas here will melt the poles          https://i.giphy.com/U1aN4HTfJ2SmgB2BBK.webp"
                    },
                    "submitEpochRootProof((uint256,bytes32[7],bytes32[],bytes,bytes,bytes))": {
                        "details": "Will emit `L2ProofVerified` if the proof is validWill throw if:          - The block number is past the pending chain          - The last archive root of the header does not match the archive root of parent block          - The archive root of the header does not match the archive root of the proposed block          - The proof is invalidWe provide the `_archive` and `_blockHash` even if it could be read from storage itself because it allow for          better error messages. Without passing it, we would just have a proof verification failure.",
                        "params": {
                            "_args": "- The arguments to submit the epoch root proof:          _epochSize - The size of the epoch (to be promoted to a constant)          _args - Array of public inputs to the proof (previousArchive, endArchive, previousBlockHash, endBlockHash, endTimestamp, outHash, proverId)          _fees - Array of recipient-value pairs with fees to be distributed for the epoch          _blobPublicInputs - The blob public inputs for the proof          _aggregationObject - The aggregation object for the proof          _proof - The proof to verify"
                        }
                    },
                    "transferOwnership(address)": {
                        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
                    },
                    "updateL1GasFeeOracle()": {
                        "details": "This function is called by the `propose` function"
                    },
                    "validateBlobs(bytes)": {
                        "details": "Only exists here for gas estimation."
                    },
                    "validateHeader(bytes,(bool,uint8,bytes32,bytes32)[],bytes32,uint256,bytes32,(bool,bool))": {
                        "details": "This is a convenience function that can be used by the sequencer to validate a \"partial\" header          without having to deal with viem or anvil for simulating timestamps in the future.",
                        "params": {
                            "_blobsHashesCommitment": "- The blobs hash for this block",
                            "_currentTime": "- The current time",
                            "_digest": "- The digest to validate",
                            "_flags": "- The flags to validate",
                            "_header": "- The header to validate",
                            "_signatures": "- The signatures to validate"
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "archive()": {
                        "notice": "Get the current archive root"
                    },
                    "archiveAt(uint256)": {
                        "notice": "Get the archive root of a specific block"
                    },
                    "canProposeAtTime(uint256,bytes32)": {
                        "notice": "Check if msg.sender can propose at a given time"
                    },
                    "getAttesters()": {
                        "notice": "Get the attester set"
                    },
                    "getClaimableEpoch()": {
                        "notice": "Get the next epoch that can be claimed"
                    },
                    "getCommitteeAt(uint256)": {
                        "notice": "Get the committee for a given timestamp"
                    },
                    "getCurrentEpoch()": {
                        "notice": "Get the current epoch number"
                    },
                    "getCurrentEpochCommittee()": {
                        "notice": "Get the validator set for the current epoch"
                    },
                    "getCurrentProposer()": {
                        "notice": "Get the proposer for the current slot"
                    },
                    "getCurrentSampleSeed()": {
                        "notice": "Get the sample seed for the current epoch"
                    },
                    "getCurrentSlot()": {
                        "notice": "Get the current slot number"
                    },
                    "getEpochAt(uint256)": {
                        "notice": "Computes the epoch at a specific time"
                    },
                    "getEpochAtSlot(uint256)": {
                        "notice": "Computes the epoch at a specific slot"
                    },
                    "getEpochCommittee(uint256)": {
                        "notice": "Get the validator set for a given epoch"
                    },
                    "getEpochProofPublicInputs(uint256,bytes32[7],bytes32[],bytes,bytes)": {
                        "notice": "Returns the computed public inputs for the given epoch proof."
                    },
                    "getEpochToProve()": {
                        "notice": "Get the epoch that should be proven"
                    },
                    "getFeeAssetPrice()": {
                        "notice": "Gets the fee asset price as fee_asset / eth with 1e9 precision"
                    },
                    "getManaBaseFeeAt(uint256,bool)": {
                        "notice": "Gets the mana base fee"
                    },
                    "getManaBaseFeeComponentsAt(uint256,bool)": {
                        "notice": "Gets the mana base fee components          For more context, consult:          https://github.com/AztecProtocol/engineering-designs/blob/main/in-progress/8757-fees/design.md"
                    },
                    "getProposerAt(uint256)": {
                        "notice": "Get the proposer for the slot at a specific timestamp"
                    },
                    "getSampleSeedAt(uint256)": {
                        "notice": "Get the sample seed for a given timestamp"
                    },
                    "getSlotAt(uint256)": {
                        "notice": "Computes the slot at a specific time"
                    },
                    "getTimestampForSlot(uint256)": {
                        "notice": "Get the timestamp for a given slot"
                    },
                    "propose((bytes32,bytes32,(int256,int256),bytes,bytes32[]),(bool,uint8,bytes32,bytes32)[],bytes,bytes)": {
                        "notice": "Publishes the body and propose the block"
                    },
                    "proposeAndClaim((bytes32,bytes32,(int256,int256),bytes,bytes32[]),(bool,uint8,bytes32,bytes32)[],bytes,bytes,((uint256,uint256,uint256,address,uint32),(bool,uint8,bytes32,bytes32)))": {
                        "notice": "Publishes the body and propose the block"
                    },
                    "prune()": {
                        "notice": "Prune the pending chain up to the last proven block"
                    },
                    "setAssumeProvenThroughBlockNumber(uint256)": {
                        "notice": "Sets the assumeProvenThroughBlockNumber. Only the contract deployer can set it."
                    },
                    "setEpochVerifier(address)": {
                        "notice": "Set the verifier contract"
                    },
                    "setProtocolContractTreeRoot(bytes32)": {
                        "notice": "Set the protocolContractTreeRoot"
                    },
                    "setVkTreeRoot(bytes32)": {
                        "notice": "Set the vkTreeRoot"
                    },
                    "setupEpoch()": {
                        "notice": "Performs a setup of an epoch if needed. The setup will          - Sample the validator set for the epoch          - Set the seed for the epoch          - Update the last seed"
                    },
                    "submitEpochRootProof((uint256,bytes32[7],bytes32[],bytes,bytes,bytes))": {
                        "notice": "Submit a proof for an epoch in the pending chain"
                    },
                    "updateL1GasFeeOracle()": {
                        "notice": "Updates the l1 gas fee oracle"
                    },
                    "validateBlobs(bytes)": {
                        "notice": "Validate blob transactions against given inputs"
                    },
                    "validateHeader(bytes,(bool,uint8,bytes32,bytes32)[],bytes32,uint256,bytes32,(bool,bool))": {
                        "notice": "Validate a header for submission"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@aztec/=src/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                "@oz/=lib/openzeppelin-contracts/contracts/",
                "@test/=test/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/core/Rollup.sol": "Rollup"
            },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "lib/forge-std/src/Vm.sol": {
                "keccak256": "0xf1592302e62bb1223e150fa902b5fdddf9eb0d165e7a31c9cd1445ce57e77dde",
                "urls": [
                    "bzz-raw://e3286d35934b4a1c51d87e99a0a1cbdd2d0735690c9f9d8a0c9e6a9ff8e79fc2",
                    "dweb:/ipfs/QmNVkpXuKue8TsSPj198RaK5nArKctG5rgoD8z3MXgu6MU"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
                "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
                "urls": [
                    "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
                    "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
                "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
                "urls": [
                    "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
                    "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
                "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
                "urls": [
                    "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
                    "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
                "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
                "urls": [
                    "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
                    "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": {
                "keccak256": "0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92",
                "urls": [
                    "bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a",
                    "dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
                "urls": [
                    "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
                    "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
                "keccak256": "0x4251fed1ac036ad28996501522371736318527d7bf2bf7d66fbd2769d6c4771b",
                "urls": [
                    "bzz-raw://b2df261bd4de240f54c5829faeaf0ffc919a01f1497cf7ffd8a9a544bdec8fca",
                    "dweb:/ipfs/Qmb9ndUuv9RZPKJXZGzjVuhmNuoizxuGRn4QMBmdmLcxS3"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
                "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
                "urls": [
                    "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
                    "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
                "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
                "urls": [
                    "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
                    "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol": {
                "keccak256": "0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549",
                "urls": [
                    "bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a",
                    "dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
                "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
                "urls": [
                    "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
                    "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
                "keccak256": "0x9e82c00fb176503860139c6bbf593b1a954ee7ff97ab2969656571382b9b58a2",
                "urls": [
                    "bzz-raw://34b4eb157b44d4441315db65561ba7cf0fe909dc598c2cfd7080d203077d5b57",
                    "dweb:/ipfs/QmcNdvK3kDUAUr48urHxoeHd1TqVDya4YfZTM66i4goEJn"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
                "keccak256": "0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d",
                "urls": [
                    "bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c",
                    "dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol": {
                "keccak256": "0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575",
                "urls": [
                    "bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e",
                    "dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
                "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
                "urls": [
                    "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
                    "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
                "keccak256": "0x2c33f654cefbbe80a9b436b5792cfe8bda2e87f139f110073c99762558db252f",
                "urls": [
                    "bzz-raw://dc7ebd80046a52f28978cf46a24ff3e4c8568264ab6bb138038951c75d576167",
                    "dweb:/ipfs/QmQQjXVr4CbDR3DXd8GHEqn3JSJYTnbBHMJp9tvc29yXrc"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
                "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
                "urls": [
                    "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
                    "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
                "keccak256": "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
                "urls": [
                    "bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
                    "dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
                "keccak256": "0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212",
                "urls": [
                    "bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f",
                    "dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz"
                ],
                "license": "MIT"
            },
            "src/core//interfaces/messagebridge/IOutbox.sol": {
                "keccak256": "0x77eb91bec9c6cd1d2cf6ae8ea7452b29848d1047e92519e6562004364d2e0eb9",
                "urls": [
                    "bzz-raw://4a794b428c9ab9324dfc3c0d6cd1c6f4704bc079b4e139e1f9dd572b255efabe",
                    "dweb:/ipfs/QmYB4h9VWD8YT1Kpb7Su47RMQEM8bofDvJkskk8deQFv7X"
                ],
                "license": "Apache-2.0"
            },
            "src/core/ProofCommitmentEscrow.sol": {
                "keccak256": "0x26d32c7657f38d592238b375bdc359d32b7644ec070d3b392472a6465fcda3c6",
                "urls": [
                    "bzz-raw://6e28b7afcd2de8149bd4c64ad485fbdd90b6cf9d8d05ab40d965ec4baa8fba7b",
                    "dweb:/ipfs/QmdJo2qKdqKdXyQ5WaZkZG9g8t4Aqd2yk3zVVtLCZkPxKc"
                ],
                "license": "Apache-2.0"
            },
            "src/core/Rollup.sol": {
                "keccak256": "0x5dccee483a008000d6a1a361d7a80d8bc72ff513bf0d2de2fbe9876bf8e1799a",
                "urls": [
                    "bzz-raw://35079f805f960aedf8fe4cedb6f96b34dfa0e58fa2e9f78b01b9c8d6f1d93b2e",
                    "dweb:/ipfs/Qmf1xzoGaz2HTgAwyN5tujLbgKtnzYsriAaMmYqrAqNoE4"
                ],
                "license": "Apache-2.0"
            },
            "src/core/ValidatorSelection.sol": {
                "keccak256": "0x00ef5ecabbcd09b5df0910601c872f9cd770d458313e99fe0adf9741fc851b09",
                "urls": [
                    "bzz-raw://26a1d5ff9b519bc0d7874354edbb440259106d1ced3bed85bba547d842a64c98",
                    "dweb:/ipfs/Qmd5CVBJXf1rzFTwo3fiVSYK2LHsHYaSL9jEHbybmWW7kb"
                ],
                "license": "Apache-2.0"
            },
            "src/core/interfaces/IFeeJuicePortal.sol": {
                "keccak256": "0xfe695df7530a1a86c462c3067614f0bd6f25d4b7796336a172168cd148edf27c",
                "urls": [
                    "bzz-raw://ed014ca24172042d21d88ba2a6640ecb870bf66800a9c6f1ae2c35ffe3a35763",
                    "dweb:/ipfs/QmfFr3LrBm6Cb4kxSdvxy14GAw7AqxHMe7NNHyf8gvAwWg"
                ],
                "license": "Apache-2.0"
            },
            "src/core/interfaces/IProofCommitmentEscrow.sol": {
                "keccak256": "0xb166488971e97f41c9fe37fbadbcccf9eb243de74be8daf4fbddebaa24b0402d",
                "urls": [
                    "bzz-raw://d29c88abee97f1fff138b6bd5939a92b1e3d720f63f719e5b653b9e9b540e783",
                    "dweb:/ipfs/QmSeV5534LYEbC6z3PB6vopsKxRQyK7531GTMqR8Q7X7ZD"
                ],
                "license": "Apache-2.0"
            },
            "src/core/interfaces/IRollup.sol": {
                "keccak256": "0x9d8b394f687ecbcef4714eb0726173614523d8f17abaadc698fafef2db766f00",
                "urls": [
                    "bzz-raw://d74cbd285d13571432f4c0c842fa7775345286f7f092001e7eecd1268adf83ed",
                    "dweb:/ipfs/QmPQp4dVCQhUq9yW4AEZA1HJtvihpdDuQZaJJSDS42RaQd"
                ],
                "license": "Apache-2.0"
            },
            "src/core/interfaces/ISlasher.sol": {
                "keccak256": "0xef10ef30e24940d7685191a2e698528c5dfe2993a95e316314446781f43317e9",
                "urls": [
                    "bzz-raw://28b1dfbdea775fed1df06539ec20fb7ffbeb149bb80a1413aaad59e3167061cb",
                    "dweb:/ipfs/QmPRSpAeZts5E3q41zpZbWmeZrqwdqkaPKKfj73vjvbfZ3"
                ],
                "license": "Apache-2.0"
            },
            "src/core/interfaces/IStaking.sol": {
                "keccak256": "0xa0e4bdc3eaa735b41a8d25b1b37449d4b64d53663e03301b8e0c56680d6e1e10",
                "urls": [
                    "bzz-raw://5a867007d89a8fbe95d5ae52d1f3eb822f65e79244610205156d25e1b8826672",
                    "dweb:/ipfs/QmYxE4pbxWfiL8xwjaqLaqykbJFKUz6TjebTHVHrHkKitM"
                ],
                "license": "Apache-2.0"
            },
            "src/core/interfaces/IValidatorSelection.sol": {
                "keccak256": "0x3514300c409249225718b7a45edb5d7a61022d734e0009ca6a49c8bde7175c6a",
                "urls": [
                    "bzz-raw://c693086746375f2e970e2891309d8a4060262ba80d59990c71fe1ccb87dc8372",
                    "dweb:/ipfs/QmTjUKXFSkAbB4Z15SuN37ABgcrgwEGwVmGPLL9ZvXuQig"
                ],
                "license": "Apache-2.0"
            },
            "src/core/interfaces/IVerifier.sol": {
                "keccak256": "0xc03b60799d731daed38340e0a058b427fccf356e4c373152e038d1b3a6cf2610",
                "urls": [
                    "bzz-raw://001323b0b0b5db41536210fd6b3d82e45e9c749a2e9f1c84ec45eec10121391d",
                    "dweb:/ipfs/QmV1xhTLC3tqWiGxQgsrR23WY4zqp7B9hZrq8hExRVKuuh"
                ],
                "license": "Apache-2.0"
            },
            "src/core/interfaces/messagebridge/IInbox.sol": {
                "keccak256": "0x27e6a7d08d3ce5bb07cd3d718c57ffc4d18432e8f8c485ddf22b4433cdf6b060",
                "urls": [
                    "bzz-raw://c0f97c38feaa70e638737675c170313e22383bd7fd5252024bce830f1c5568c1",
                    "dweb:/ipfs/QmNzLRXwqqxjJ6S81L66wZ8qD4YE2YcFWpcKtjAmNbkAad"
                ],
                "license": "Apache-2.0"
            },
            "src/core/interfaces/messagebridge/IOutbox.sol": {
                "keccak256": "0x77eb91bec9c6cd1d2cf6ae8ea7452b29848d1047e92519e6562004364d2e0eb9",
                "urls": [
                    "bzz-raw://4a794b428c9ab9324dfc3c0d6cd1c6f4704bc079b4e139e1f9dd572b255efabe",
                    "dweb:/ipfs/QmYB4h9VWD8YT1Kpb7Su47RMQEM8bofDvJkskk8deQFv7X"
                ],
                "license": "Apache-2.0"
            },
            "src/core/libraries/ConstantsGen.sol": {
                "keccak256": "0x1747d5c4890b75e730ac081756e6d1e53ca0fa1c0c47cfa9528b3dd9c72b94f8",
                "urls": [
                    "bzz-raw://abb74449f26927d9c7e8324ecb5e7146a21609d3c606cead7168ab7b30a5bf14",
                    "dweb:/ipfs/QmbBGaL24HwhaJ5WyxHtABZGBXbBMbqj3rXc6CkCWtKSxg"
                ],
                "license": "Apache-2.0"
            },
            "src/core/libraries/DataStructures.sol": {
                "keccak256": "0xe7f2fbcf1d568c33a8a7d4e79cde54405a41362a5fc891af526db935afe6ce46",
                "urls": [
                    "bzz-raw://fffa8e1d9f95f563e3664694ad7d3dac5bed96e5d07147c962977f921b1c2c62",
                    "dweb:/ipfs/QmT2B2nZrv2ZyvJSGxJZJyzFmsTAdq5JnodZ6pinZtCkee"
                ],
                "license": "Apache-2.0"
            },
            "src/core/libraries/Errors.sol": {
                "keccak256": "0x08c09ae2d11fc88b8279a14e5d72ca4b24551ae8dbfc3ffd6bd26927cb5ae912",
                "urls": [
                    "bzz-raw://9edc4929748463bbae2b7b0459904b0894afe7762454343018118408110f78ee",
                    "dweb:/ipfs/QmeGoHx7BUza2cabt13ofsr5s8JBfRyEj2dbjou6hnZbji"
                ],
                "license": "Apache-2.0"
            },
            "src/core/libraries/RollupLibs/BlobLib.sol": {
                "keccak256": "0xd311fd9c16745779ba59663c19a77d2bd4ff77e0a44cd50cd23efd2cbdcf3cb9",
                "urls": [
                    "bzz-raw://014d17dee522afa10b652d7c504b5e1be1b097d3ce5eddf033749550da4e56dc",
                    "dweb:/ipfs/QmRjiZZYJLpnZSCZX2ACn96CQAhedzT5x48KfGFsy4ytST"
                ],
                "license": "Apache-2.0"
            },
            "src/core/libraries/RollupLibs/EpochProofLib.sol": {
                "keccak256": "0x2e86be26b62e278afd93ae011db792110bd5aecdfb6f5a6b5f2e1e5fcac11475",
                "urls": [
                    "bzz-raw://a8e46cd0885e80e86e0d65d0b240f3dd410284ce77eb279ecb6faaabe66b8f96",
                    "dweb:/ipfs/Qmbk894sy3wLWNUB3vofyy7rsGLMs91PVh7jwHmFzKQxyf"
                ],
                "license": "Apache-2.0"
            },
            "src/core/libraries/RollupLibs/EpochProofQuoteLib.sol": {
                "keccak256": "0x1efb9a0d8a1c334ddd9836ae9ba7be3730dbcfde6fd7be45b4c153e86905a581",
                "urls": [
                    "bzz-raw://a1cbd753d2622767a7daf4dc596e0853f774c5ad6b284740e4f9c094007e5087",
                    "dweb:/ipfs/QmNR5wFBCnyjrfqJoLfAmkksCyUXaTkE7wePkDER79r9RB"
                ],
                "license": "Apache-2.0"
            },
            "src/core/libraries/RollupLibs/ExtRollupLib.sol": {
                "keccak256": "0xfe24e4e1ccc2640812954ace10843fbf3ab2af85522a42f1894eee333beb2f63",
                "urls": [
                    "bzz-raw://553289d0ce8980441cf07daada3151b11d028663edc88f0b5fb1700ce5d0585b",
                    "dweb:/ipfs/QmV6qkTp19Xo1Z4jS3sH9Vfir4asLrPVTfGYzVX4Kago3X"
                ],
                "license": "Apache-2.0"
            },
            "src/core/libraries/RollupLibs/FeeMath.sol": {
                "keccak256": "0x0f275536a3b5e7f894ce86ca0303b0e5e3e09bfe3ec1b183a333ef55556c7cf9",
                "urls": [
                    "bzz-raw://ced6a8fc093d76985222cb07deba2b76541de9d15667a569f4c751abac371739",
                    "dweb:/ipfs/QmY6Kk1hZHgin771gmx6hedzkQENG1nB1pxPWXv9RbQJzT"
                ],
                "license": "Apache-2.0"
            },
            "src/core/libraries/RollupLibs/HeaderLib.sol": {
                "keccak256": "0x956327939302869373a18e70378012de1a5522e5dcd0cf2cb2bd6b49b512a838",
                "urls": [
                    "bzz-raw://6d334e1459ce557f0b6e3f62d5a4dd2312fc6d8fe25ec74bb82910226e2cbf0e",
                    "dweb:/ipfs/QmYeyCvoDnBSQo8DDcts3sRgBVMjVARjZYSMFUGavXhgqK"
                ],
                "license": "Apache-2.0"
            },
            "src/core/libraries/RollupLibs/IntRollupLib.sol": {
                "keccak256": "0xefea90f36c06d460727df6584802d5c0fb9d940e38c7b037161e116270025ee3",
                "urls": [
                    "bzz-raw://094f58f468a4c8c16eb9665c0627554cd45b25dbac7e7cddf2250e0770ffb6dd",
                    "dweb:/ipfs/QmSS3FKnZPA4BUfUJkYfeu7SserTzHajw9kEegdxCgQLBL"
                ],
                "license": "Apache-2.0"
            },
            "src/core/libraries/RollupLibs/ProposeLib.sol": {
                "keccak256": "0x7dbc401a78317cf9777d96035e2ff76a592b817a1066554da94279d350a9b351",
                "urls": [
                    "bzz-raw://922a84fa3ab06f6d263a0437d4aa2380bf2bfbb0d30323428bb24d8327d7776a",
                    "dweb:/ipfs/Qmb9QE372UDQbFMkVD23ZC2wZA59ZeNPFP3ifKzQKmS9hR"
                ],
                "license": "Apache-2.0"
            },
            "src/core/libraries/RollupLibs/ValidationLib.sol": {
                "keccak256": "0x366ce037ef75d157e8ad11dfc2667b90043d7c4af93a320a8bd41bb05428854c",
                "urls": [
                    "bzz-raw://2ee66b63c118a423cc489baeb596c9eb71c2a1f933de1cd2dbce0814c03c8847",
                    "dweb:/ipfs/QmYprsRHCKsaRWryGFmPAvpZjC6YEAUvjCfEjmQN7tAtkt"
                ],
                "license": "Apache-2.0"
            },
            "src/core/libraries/TimeLib.sol": {
                "keccak256": "0xf23bbdd4eb9f6d496eae97e036559dda8a106459304279da74781ee6694d878d",
                "urls": [
                    "bzz-raw://1ec5c0b8c8130622f80071f8c3626e1de5aac32ba8f40e730746b7c452d60627",
                    "dweb:/ipfs/Qme5dbQdYBdyjCKeksqjzY4N21DFz7pEaVwKCo9edy6ytK"
                ],
                "license": "Apache-2.0"
            },
            "src/core/libraries/TimeMath.sol": {
                "keccak256": "0xf1d1de946e60b96e6a86187b17928e124ba822ee0189a491503cf79f71287e0d",
                "urls": [
                    "bzz-raw://0575bc4dae4cf4605909a5cb64f6d21674996b286f837f57c3c3b656741f79c4",
                    "dweb:/ipfs/QmXxrSF8KrxHhizVhpUSNDrknSTXKMBYtrwwyYW2ydoCAS"
                ],
                "license": "Apache-2.0"
            },
            "src/core/libraries/ValidatorSelectionLib/ValidatorSelectionLib.sol": {
                "keccak256": "0xf14f1a5bf7099cbea6f8d82c3ce5109458a58fd11ffb04127e69213289fd8dff",
                "urls": [
                    "bzz-raw://a224d703dbfae904425a84535c4496e28aab4ee3ae1b2db05c2aae0e61650fc3",
                    "dweb:/ipfs/QmbSSYEHieJMarvZcfQVJ6DRDw2uPqGmiMXiw76zAMErPi"
                ],
                "license": "Apache-2.0"
            },
            "src/core/libraries/crypto/FrontierLib.sol": {
                "keccak256": "0xd0a77b213206a28fde27c0f5ad98ed38eeee01c8916664e37b5fdf35fa3738ab",
                "urls": [
                    "bzz-raw://f7d872b7cb822efc15891b92afc6f66c12987856fe203db6db7cee3658224c19",
                    "dweb:/ipfs/QmPyYzD5iFuoxgZ1kvW2adgPZvYHGH4rDQg4XfCge6LVAi"
                ],
                "license": "Apache-2.0"
            },
            "src/core/libraries/crypto/Hash.sol": {
                "keccak256": "0xce89be3e053f6ad0d1e982bda6dd6b8cfeebd5324ef50fc3e6190a7f0a7b1f40",
                "urls": [
                    "bzz-raw://4afa14e134fac170d24577771ad3e2730b8ada101d0a9547cd1441a86c6f2df1",
                    "dweb:/ipfs/QmexC4obvjWycv6YSbDE5Lcj6t38YA5kZkRKkoKHPiGdTs"
                ],
                "license": "Apache-2.0"
            },
            "src/core/libraries/crypto/MerkleLib.sol": {
                "keccak256": "0x36985e1dfd5d237bd8c1dd95dba61f6c4342d83192b9f6cddb785b6dd4b556d1",
                "urls": [
                    "bzz-raw://8d76093e2618e6fe1c4ebc90693f27b351fbe3fe73db4af095d0f73350d5d9c6",
                    "dweb:/ipfs/QmVuZHWS2Cit9sYj81bQ5U94TtyhEoFc5y2E9gNEnSaZZx"
                ],
                "license": "Apache-2.0"
            },
            "src/core/libraries/crypto/SampleLib.sol": {
                "keccak256": "0xabeb716838223186d2c98ccf1658c4979677b19bc73362e55a645329338d5bee",
                "urls": [
                    "bzz-raw://d26321d236b6f3d74c1b811cdde75425404c13c89d58c10cf9a526e657f22809",
                    "dweb:/ipfs/QmdYiV9oMSDERSuHiwUj6dRrHxQWFbPUEDYPmvFH5Cnm1Q"
                ],
                "license": "Apache-2.0"
            },
            "src/core/libraries/crypto/SignatureLib.sol": {
                "keccak256": "0xeee7b82d4d7a718cc23bab4748432a1a67be630d7d76bd6d1f26f85fe1f5f1ff",
                "urls": [
                    "bzz-raw://b048817b0c1eb5123575da17ddf66365a04c9a847f769cc42645f559144b901b",
                    "dweb:/ipfs/Qmb8Lj8jmFVUND59jgTRhvuVxjYQp2cJ9FejADZpjAp6Xq"
                ],
                "license": "Apache-2.0"
            },
            "src/core/libraries/staking/StakingLib.sol": {
                "keccak256": "0xe3a4cd770146e69e6eca8a435c36abfcc6d624a4d41f90b4d14b7c572eda3942",
                "urls": [
                    "bzz-raw://53a7dd3cd3b6b85d1fd584344221388cd5b351db60e4375d5302d791afbc41ad",
                    "dweb:/ipfs/QmQo3yTCTxbLL7voocpcW5vkVD8sfPE9Fp5mG4XrP77Pt7"
                ],
                "license": "Apache-2.0"
            },
            "src/core/messagebridge/Inbox.sol": {
                "keccak256": "0x653ca789628f46007d2ecce929c1d98c086d61cdb71a7c78dd2567b3feb05d9e",
                "urls": [
                    "bzz-raw://45055d9584d093f08d12a44d187377658a14efde7c6c324990d8e6e608222150",
                    "dweb:/ipfs/QmNjwRYAg7gy3ZDbi1r9CbgxCTdTcirCBPrPs9pKmAfKaF"
                ],
                "license": "Apache-2.0"
            },
            "src/core/messagebridge/Outbox.sol": {
                "keccak256": "0x7b221f61d97479c8accc5b2220c7fc257420954582f7b2bd045438dcd2f7ba38",
                "urls": [
                    "bzz-raw://f2df2a7c744fd9c3b7e18169718c7764cc268a01e9f65112e758d4bbbc8cb088",
                    "dweb:/ipfs/QmdhYavgyDgArV3fRJsLctFZfAhpVWxwKTqr4YehERCykb"
                ],
                "license": "Apache-2.0"
            },
            "src/core/staking/Slasher.sol": {
                "keccak256": "0x55849ffbf07dfc148f64e2a88cdf4ce2eb69df42924e462fdf85fac19f61c857",
                "urls": [
                    "bzz-raw://289f6937c195c7a0475d5c6b41d903a232c18a166348e7aa7a31cbbbabcb5dfe",
                    "dweb:/ipfs/QmdnLuZ2CSz4E2hBYUCco8zDSaY4QjC6CDQBcuiy6zwnak"
                ],
                "license": "Apache-2.0"
            },
            "src/core/staking/SlashingProposer.sol": {
                "keccak256": "0x4e60da0c7e81b258400f329ab461aed138207f5bcb9992049be95daedabed2bc",
                "urls": [
                    "bzz-raw://0272e22ee11a472a513b8eb65e72686a38928af3cc449ccc1c38d16e760f6e4a",
                    "dweb:/ipfs/QmcATKdEy4CF1CqhWtrEczT5YxZWYK33JCAFevFawv6Juf"
                ],
                "license": "Apache-2.0"
            },
            "src/governance/interfaces/IGovernanceProposer.sol": {
                "keccak256": "0xc7a516cc89ddaa9ab641e6ffd4dd5f9e198f708e95ecdbb7a512afd52fcb7fa2",
                "urls": [
                    "bzz-raw://1f34b8a33c4f49553d73eba9a11ac8c6009ee1c9f00b2d7b78c0a07612cb7899",
                    "dweb:/ipfs/QmYjctKDvL3yWNro5X3QzgiRtQ52JV9Pt3rSFyCCAGXchC"
                ],
                "license": "Apache-2.0"
            },
            "src/governance/interfaces/IPayload.sol": {
                "keccak256": "0x07a32aa633c48bdc07c34fefb86441ab2f8e0fdb9a4eca1b11ba806b5c4f1997",
                "urls": [
                    "bzz-raw://46e1161f04c655e8779fbf3d92ad827c80302f47da2be4024a14829955eeec87",
                    "dweb:/ipfs/QmcAHwConVo4r79u7WGt7U3GbZzvcPp5rXiaaoskznENJX"
                ],
                "license": "Apache-2.0"
            },
            "src/governance/interfaces/IRegistry.sol": {
                "keccak256": "0x973aa85eabf4fefd19c96f5205b4b4e3d6db9e701f4fbf4bfd517c631bc91bd2",
                "urls": [
                    "bzz-raw://0dbb13c314d9d2613208064ed6105cbc48e6c9ae68f93eb74294d58e67ff1c0d",
                    "dweb:/ipfs/QmcYL77pnsGH2BLJNcx9Kxb4amMmRa6jc1zpb7X4o2UFJ1"
                ],
                "license": "Apache-2.0"
            },
            "src/governance/interfaces/IRewardDistributor.sol": {
                "keccak256": "0xc22f9a0bac6f0646619b5a118a83e09b661a7f075e91da571378b0035749b7f5",
                "urls": [
                    "bzz-raw://087ce30a8dd5c809937182a27b641ae474c19332f09c5d08103dfde5f1227985",
                    "dweb:/ipfs/QmeWdp8zkA81H7CBe73NZhcnd7CjuKR72ov3XuMpqPi8a1"
                ],
                "license": "Apache-2.0"
            },
            "src/governance/libraries/DataStructures.sol": {
                "keccak256": "0x9e1abc53c72a73df7e36d999910ffc7f8e652d9ab05e643b956593b776c38b25",
                "urls": [
                    "bzz-raw://7b9625ac0569d8c403466cf5a2963cef94e758a04ce0d67818691c1afad03ac1",
                    "dweb:/ipfs/QmP4Gve2FKGGDtxe37282UgRzXDQkWzSSucfUhu5rJan56"
                ],
                "license": "Apache-2.0"
            },
            "src/governance/libraries/Errors.sol": {
                "keccak256": "0xa8778a2cd3efbc1243e8dcd8b2d3e7fef56d23d8d235c3112464e3411328efc9",
                "urls": [
                    "bzz-raw://0cf8183e25f5133c120c328177319315bc77f7b40a16d434d5926ad96f68e2c9",
                    "dweb:/ipfs/QmQ1z23sdYiCnzvfWjmHNcPeCbbsW3itf1bvLDq9QhvRmG"
                ],
                "license": "Apache-2.0"
            },
            "src/governance/proposer/EmpireBase.sol": {
                "keccak256": "0xc44649c622643c6a0217b32e5fb3302f5821eba92ac1765b6953fe57b5775f6c",
                "urls": [
                    "bzz-raw://ed5c63881c121d6aa2246f0009fd08fcf5a01cbc642bc1cde4e3b4fd94d8dcb7",
                    "dweb:/ipfs/QmRo8gdgw3VV5sVjhtR2K6kYRwepeFE6uz7an2aqfBRyds"
                ],
                "license": "Apache-2.0"
            },
            "src/mock/MockVerifier.sol": {
                "keccak256": "0x0479bb7f0e83c754d69a17215530e4a073434875cba76a1458931a58328f93ad",
                "urls": [
                    "bzz-raw://ad8084f60e55610e55fb80db20aed5ba82a6a2c07d92d6e4e64fb7b383d2b22c",
                    "dweb:/ipfs/QmRUnDdwgNjMaZJ9MYsArXbN1QD8ojMcSmFnDxfJUoxRfv"
                ],
                "license": "Apache-2.0"
            }
        },
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 6828,
                "contract": "src/core/Rollup.sol:Rollup",
                "label": "_nameFallback",
                "offset": 0,
                "slot": "0",
                "type": "t_string_storage"
            },
            {
                "astId": 6830,
                "contract": "src/core/Rollup.sol:Rollup",
                "label": "_versionFallback",
                "offset": 0,
                "slot": "1",
                "type": "t_string_storage"
            },
            {
                "astId": 4579,
                "contract": "src/core/Rollup.sol:Rollup",
                "label": "_owner",
                "offset": 0,
                "slot": "2",
                "type": "t_address"
            },
            {
                "astId": 13709,
                "contract": "src/core/Rollup.sol:Rollup",
                "label": "validatorSelectionStore",
                "offset": 0,
                "slot": "3",
                "type": "t_struct(ValidatorSelectionStorage)15395_storage"
            },
            {
                "astId": 11623,
                "contract": "src/core/Rollup.sol:Rollup",
                "label": "checkBlob",
                "offset": 0,
                "slot": "5",
                "type": "t_bool"
            },
            {
                "astId": 11650,
                "contract": "src/core/Rollup.sol:Rollup",
                "label": "rollupStore",
                "offset": 0,
                "slot": "6",
                "type": "t_struct(RollupStore)14809_storage"
            },
            {
                "astId": 11652,
                "contract": "src/core/Rollup.sol:Rollup",
                "label": "assumeProvenThroughBlockNumber",
                "offset": 0,
                "slot": "23",
                "type": "t_uint256"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32",
                "base": "t_address"
            },
            "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
            },
            "t_bytes32": {
                "encoding": "inplace",
                "label": "bytes32",
                "numberOfBytes": "32"
            },
            "t_contract(IVerifier)15532": {
                "encoding": "inplace",
                "label": "contract IVerifier",
                "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_bytes32)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => bytes32)",
                "numberOfBytes": "32",
                "value": "t_bytes32"
            },
            "t_mapping(t_uint256,t_struct(BlockLog)14768_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => struct BlockLog)",
                "numberOfBytes": "32",
                "value": "t_struct(BlockLog)14768_storage"
            },
            "t_mapping(t_userDefinedValueType(Epoch)20329,t_struct(EpochData)15386_storage)": {
                "encoding": "mapping",
                "key": "t_userDefinedValueType(Epoch)20329",
                "label": "mapping(Epoch => struct EpochData)",
                "numberOfBytes": "32",
                "value": "t_struct(EpochData)15386_storage"
            },
            "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
            },
            "t_struct(BlockLog)14768_storage": {
                "encoding": "inplace",
                "label": "struct BlockLog",
                "numberOfBytes": "256",
                "members": [
                    {
                        "astId": 14760,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "feeHeader",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_struct(FeeHeader)18601_storage"
                    },
                    {
                        "astId": 14762,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "archive",
                        "offset": 0,
                        "slot": "5",
                        "type": "t_bytes32"
                    },
                    {
                        "astId": 14764,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "blockHash",
                        "offset": 0,
                        "slot": "6",
                        "type": "t_bytes32"
                    },
                    {
                        "astId": 14767,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "slotNumber",
                        "offset": 0,
                        "slot": "7",
                        "type": "t_userDefinedValueType(Slot)20327"
                    }
                ]
            },
            "t_struct(ChainTips)14773_storage": {
                "encoding": "inplace",
                "label": "struct ChainTips",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 14770,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "pendingBlockNumber",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 14772,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "provenBlockNumber",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_uint256"
                    }
                ]
            },
            "t_struct(EpochData)15386_storage": {
                "encoding": "inplace",
                "label": "struct EpochData",
                "numberOfBytes": "96",
                "members": [
                    {
                        "astId": 15381,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "committee",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_array(t_address)dyn_storage"
                    },
                    {
                        "astId": 15383,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "sampleSeed",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 15385,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "nextSeed",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_uint256"
                    }
                ]
            },
            "t_struct(EpochProofClaim)16543_storage": {
                "encoding": "inplace",
                "label": "struct DataStructures.EpochProofClaim",
                "numberOfBytes": "160",
                "members": [
                    {
                        "astId": 16534,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "epochToProve",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_userDefinedValueType(Epoch)20329"
                    },
                    {
                        "astId": 16536,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "basisPointFee",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 16538,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "bondAmount",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 16540,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "bondProvider",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_address"
                    },
                    {
                        "astId": 16542,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "proposerClaimant",
                        "offset": 0,
                        "slot": "4",
                        "type": "t_address"
                    }
                ]
            },
            "t_struct(FeeHeader)18601_storage": {
                "encoding": "inplace",
                "label": "struct FeeHeader",
                "numberOfBytes": "160",
                "members": [
                    {
                        "astId": 18592,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "excessMana",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 18594,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "feeAssetPriceNumerator",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 18596,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "manaUsed",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 18598,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "provingCostPerManaNumerator",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 18600,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "congestionCost",
                        "offset": 0,
                        "slot": "4",
                        "type": "t_uint256"
                    }
                ]
            },
            "t_struct(L1FeeData)18606_storage": {
                "encoding": "inplace",
                "label": "struct L1FeeData",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 18603,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "baseFee",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 18605,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "blobFee",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_uint256"
                    }
                ]
            },
            "t_struct(L1GasOracleValues)14783_storage": {
                "encoding": "inplace",
                "label": "struct L1GasOracleValues",
                "numberOfBytes": "160",
                "members": [
                    {
                        "astId": 14776,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "pre",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_struct(L1FeeData)18606_storage"
                    },
                    {
                        "astId": 14779,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "post",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_struct(L1FeeData)18606_storage"
                    },
                    {
                        "astId": 14782,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "slotOfChange",
                        "offset": 0,
                        "slot": "4",
                        "type": "t_userDefinedValueType(Slot)20327"
                    }
                ]
            },
            "t_struct(RollupStore)14809_storage": {
                "encoding": "inplace",
                "label": "struct RollupStore",
                "numberOfBytes": "544",
                "members": [
                    {
                        "astId": 14788,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "blocks",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_mapping(t_uint256,t_struct(BlockLog)14768_storage)"
                    },
                    {
                        "astId": 14792,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "blobPublicInputsHashes",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_mapping(t_uint256,t_bytes32)"
                    },
                    {
                        "astId": 14795,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "tips",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_struct(ChainTips)14773_storage"
                    },
                    {
                        "astId": 14797,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "vkTreeRoot",
                        "offset": 0,
                        "slot": "4",
                        "type": "t_bytes32"
                    },
                    {
                        "astId": 14799,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "protocolContractTreeRoot",
                        "offset": 0,
                        "slot": "5",
                        "type": "t_bytes32"
                    },
                    {
                        "astId": 14802,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "l1GasOracleValues",
                        "offset": 0,
                        "slot": "6",
                        "type": "t_struct(L1GasOracleValues)14783_storage"
                    },
                    {
                        "astId": 14805,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "proofClaim",
                        "offset": 0,
                        "slot": "11",
                        "type": "t_struct(EpochProofClaim)16543_storage"
                    },
                    {
                        "astId": 14808,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "epochProofVerifier",
                        "offset": 0,
                        "slot": "16",
                        "type": "t_contract(IVerifier)15532"
                    }
                ]
            },
            "t_struct(ValidatorSelectionStorage)15395_storage": {
                "encoding": "inplace",
                "label": "struct ValidatorSelectionStorage",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 15392,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "epochs",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_mapping(t_userDefinedValueType(Epoch)20329,t_struct(EpochData)15386_storage)"
                    },
                    {
                        "astId": 15394,
                        "contract": "src/core/Rollup.sol:Rollup",
                        "label": "lastSeed",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_uint256"
                    }
                ]
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            },
            "t_userDefinedValueType(Epoch)20329": {
                "encoding": "inplace",
                "label": "Epoch",
                "numberOfBytes": "32"
            },
            "t_userDefinedValueType(Slot)20327": {
                "encoding": "inplace",
                "label": "Slot",
                "numberOfBytes": "32"
            }
        }
    },
    "id": 22
}
