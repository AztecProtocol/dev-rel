# -------------------------------------
# Express Server Configuration
# -------------------------------------
# Port for the API server
API_PORT=3000

# -------------------------------------
# Discord Bot Configuration
# -------------------------------------
# Discord Bot Token (from Discord Developer Portal)
BOT_TOKEN=your_discord_bot_token_here
# Discord Application/Client ID (from Discord Developer Portal)
BOT_CLIENT_ID=your_discord_client_id_here
# ID of the Discord Server (Guild) where the bot operates
GUILD_ID=your_discord_guild_id_here
# Role ID for the base 'Passport Verified' role
PASSPORT_VERIFIED_ROLE_ID=your_verified_role_id_here
# Minimum score required to verify
MINIMUM_SCORE=10
VITE_MINIMUM_SCORE=10 # for vite frontend

# -------------------------------------
# Gitcoin Passport Configuration
# -------------------------------------
# API Key for Gitcoin Passport API v2
PASSPORT_API_KEY=your_passport_api_key_here
# Your Scorer ID from Gitcoin Passport
PASSPORT_SCORER_ID=your_scorer_id_here

# -------------------------------------
# Verification Web App (Vite Frontend)
# -------------------------------------
# Base URL of the verification web app (e.g., http://localhost:5173 or your deployed URL)
# Used to generate the verification link sent to the user.
VITE_APP_API_URL=http://localhost:3000 # for vite frontend
VITE_REOWN_PROJECT_ID=your_reown_project_id_here # for vite frontend

# -------------------------------------
# DynamoDB Configuration
# -------------------------------------
# Set to "true" to use a local DynamoDB instance (e.g., Docker container)
LOCAL_DYNAMO_DB=true
# Endpoint URL for local DynamoDB (only used if LOCAL_DYNAMO_DB is true)
DYNAMODB_LOCAL_ENDPOINT=http://localhost:8000

# --- AWS Credentials (Required if LOCAL_DYNAMO_DB=false and not using IAM roles/profiles) ---
AWS_REGION=us-east-1
# AWS_ACCESS_KEY_ID=your_aws_access_key_here
# AWS_SECRET_ACCESS_KEY=your_aws_secret_key_here

# -------------------------------------
# Logging Configuration
# -------------------------------------
# Log level: 'debug', 'info', 'warn', 'error'
LOG_LEVEL=info
# Set to "false" to disable pretty printing of logs (JSON output)
LOG_PRETTY_PRINT=true

# -------------------------------------
# Ethereum Configuration (Used by Admin/NodeOperator commands)
# -------------------------------------
# RPC URL for the Ethereum network (e.g., Sepolia)
ETHEREUM_HOST=your_ethereum_rpc_url_here
# Chain ID for the Ethereum network (e.g., 11155111 for Sepolia)
L1_CHAIN_ID=11155111
# Private key for the account used to fund validators via the /admin fund command
FUNDER_ADDRESS_PRIVATE_KEY=your_ethereum_private_key_here
# Amount of ETH (as a string, e.g., "0.1") to send with the /admin fund command
FUNDER_AMOUNT=0.1
# Staking asset handler contract address
STAKING_ASSET_HANDLER_ADDRESS=your_staking_asset_handler_address_here
